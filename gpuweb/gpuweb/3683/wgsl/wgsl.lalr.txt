=Grammar:

_blankspace:/[\u0020\u0009\u000a\u000b\u000c\u000d\u0085\u200e\u200f\u2028\u2029]/
_comment:
   '//' /.*/
access_mode:
   'read'
 | 'read_write'
 | 'write'
additive_expression:
   additive_expression additive_operator multiplicative_expression
 | multiplicative_expression
additive_operator:
   minus
 | plus
address_space:
   'function'
 | 'private'
 | 'storage'
 | 'uniform'
 | 'workgroup'
and:'&'
and_and:'&&'
and_equal:'&='
argument_expression_list:
   paren_left expression_comma_list ? paren_right
array:'array'
array_type_specifier:
   'array' less_than type_specifier ( comma element_count_expression )? greater_than
arrow:'->'
assignment_statement:
   lhs_expression ( equal | compound_assignment_operator ) expression
 | underscore equal expression
atomic:'atomic'
attr:'@'
attrib_end:
   comma ? paren_right
attribute:
   attr 'align' paren_left expression attrib_end
 | attr 'binding' paren_left expression attrib_end
 | attr 'builtin' paren_left builtin_value_name attrib_end
 | attr 'compute'
 | attr 'const'
 | attr 'diagnostic' diagnostic_control
 | attr 'fragment'
 | attr 'group' paren_left expression attrib_end
 | attr 'id' paren_left expression attrib_end
 | attr 'interpolate' paren_left interpolation_type_name attrib_end
 | attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end
 | attr 'invariant'
 | attr 'location' paren_left expression attrib_end
 | attr 'size' paren_left expression attrib_end
 | attr 'vertex'
 | attr 'workgroup_size' paren_left expression attrib_end
 | attr 'workgroup_size' paren_left expression comma expression attrib_end
 | attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end
bang:'!'
binary_and_expression:
   binary_and_expression and unary_expression
 | unary_expression
binary_or_expression:
   binary_or_expression or unary_expression
 | unary_expression
binary_xor_expression:
   binary_xor_expression xor unary_expression
 | unary_expression
bitcast:'bitcast'
bitwise_expression:
   binary_and_expression and unary_expression
 | binary_or_expression or unary_expression
 | binary_xor_expression xor unary_expression
bool:'bool'
bool_literal:
   'false'
 | 'true'
brace_left:'{'
brace_right:'}'
bracket_left:'['
bracket_right:']'
break:'break'
break_if_statement:
   'break' 'if' expression semicolon
break_statement:'break'
builtin_value_name:
   'frag_depth'
 | 'front_facing'
 | 'global_invocation_id'
 | 'instance_index'
 | 'local_invocation_id'
 | 'local_invocation_index'
 | 'num_workgroups'
 | 'position'
 | 'sample_index'
 | 'sample_mask'
 | 'vertex_index'
 | 'workgroup_id'
call_expr:call_phrase
call_phrase:
   callable argument_expression_list
callable:
   'array'
 | ident
 | mat_prefix
 | type_specifier_without_ident
 | vec_prefix
case:'case'
case_clause:
   'case' case_selectors colon ? compound_statement
case_selector:
   'default'
 | expression
case_selectors:
   case_selector ( comma case_selector ) * ? comma ?
case_selectors/0.1/0/0.0:
   comma case_selector
colon:':'
comma:','
component_or_swizzle_specifier:
   bracket_left expression bracket_right component_or_swizzle_specifier ?
 | period member_ident component_or_swizzle_specifier ?
 | period swizzle_name component_or_swizzle_specifier ?
compound_assignment_operator:
   and_equal
 | division_equal
 | minus_equal
 | modulo_equal
 | or_equal
 | plus_equal
 | shift_left_equal
 | shift_right_equal
 | times_equal
 | xor_equal
compound_statement:
   brace_left statement * ? brace_right
const:'const'
continue:'continue'
continue_statement:'continue'
continuing:'continuing'
continuing_compound_statement:
   brace_left statement * ? break_if_statement ? brace_right
continuing_statement:
   'continuing' continuing_compound_statement
core_lhs_expression:
   ident
 | paren_left lhs_expression paren_right
decimal_float_literal:
   /0[fh]/
 | /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/
 | /[0-9]+[eE][+-]?[0-9]+[fh]?/
 | /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/
 | /[1-9][0-9]*[fh]/
decimal_int_literal:
   /0[iu]?/
 | /[1-9][0-9]*[iu]?/
decrement_statement:
   lhs_expression minus_minus
default:'default'
default_alone_clause:
   'default' colon ? compound_statement
depth_texture_type:
   'texture_depth_2d'
 | 'texture_depth_2d_array'
 | 'texture_depth_cube'
 | 'texture_depth_cube_array'
 | 'texture_depth_multisampled_2d'
diagnostic:'diagnostic'
diagnostic_control:
   paren_left severity_control_name comma diagnostic_rule_name attrib_end
diagnostic_directive:
   'diagnostic' diagnostic_control semicolon
diagnostic_rule_name:ident_pattern_token
discard:'discard'
division_equal:'/='
element_count_expression:
   additive_expression
 | bitwise_expression
else:'else'
else_clause:
   'else' compound_statement
else_if_clause:
   'else' 'if' expression compound_statement
enable:'enable'
enable_directive:
   'enable' extension_name semicolon
equal:'='
equal_equal:'=='
expression:
   bitwise_expression
 | relational_expression
 | short_circuit_and_expression and_and relational_expression
 | short_circuit_or_expression or_or relational_expression
expression_comma_list:
   expression ( comma expression ) * ? comma ?
expression_comma_list/0.1/0/0.0:
   comma expression
extension_name:'f16'
false:'false'
float16:'f16'
float32:'f32'
float_literal:
   decimal_float_literal
 | hex_float_literal
fn:'fn'
for:'for'
for_header:
   for_init ? semicolon expression ? semicolon for_update ?
for_init:
   func_call_statement
 | variable_statement
 | variable_updating_statement
for_statement:
   'for' paren_left for_header paren_right compound_statement
for_update:
   func_call_statement
 | variable_updating_statement
forward_slash:'/'
func_call_statement:
   attribute * ? call_phrase
function_decl:
   attribute * ? function_header compound_statement
function_header:
   'fn' ident paren_left param_list ? paren_right ( arrow attribute * ? type_specifier )?
global_constant_decl:
   'const' optionally_typed_ident equal expression
 | attribute * ? 'override' optionally_typed_ident ( equal expression )?
global_decl:
   function_decl
 | global_constant_decl semicolon
 | global_variable_decl semicolon
 | semicolon
 | static_assert_statement semicolon
 | struct_decl
 | type_alias_decl semicolon
global_directive:
   diagnostic_directive
 | enable_directive
global_variable_decl:
   attribute * ? variable_decl ( equal expression )?
greater_than:'>'
greater_than_equal:'>='
hex_float_literal:
   /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/
 | /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/
 | /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/
hex_int_literal:/0[xX][0-9a-fA-F]+[iu]?/
ident:ident_pattern_token
ident_pattern_token:/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/
if:'if'
if_clause:
   'if' expression compound_statement
if_statement:
   if_clause else_if_clause * ? else_clause ?
increment_statement:
   lhs_expression plus_plus
int32:'i32'
int_literal:
   decimal_int_literal
 | hex_int_literal
interpolation_sample_name:
   'center'
 | 'centroid'
 | 'sample'
interpolation_type_name:
   'flat'
 | 'linear'
 | 'perspective'
less_than:'<'
less_than_equal:'<='
let:'let'
lhs_expression:
   and lhs_expression
 | core_lhs_expression component_or_swizzle_specifier ?
 | star lhs_expression
literal:
   bool_literal
 | float_literal
 | int_literal
loop:'loop'
loop_statement:
   'loop' brace_left statement * ? continuing_statement ? brace_right
mat2x2:'mat2x2'
mat2x3:'mat2x3'
mat2x4:'mat2x4'
mat3x2:'mat3x2'
mat3x3:'mat3x3'
mat3x4:'mat3x4'
mat4x2:'mat4x2'
mat4x3:'mat4x3'
mat4x4:'mat4x4'
mat_prefix:
   'mat2x2'
 | 'mat2x3'
 | 'mat2x4'
 | 'mat3x2'
 | 'mat3x3'
 | 'mat3x4'
 | 'mat4x2'
 | 'mat4x3'
 | 'mat4x4'
member_ident:ident_pattern_token
minus:'-'
minus_equal:'-='
minus_minus:'--'
modulo:'%'
modulo_equal:'%='
multiplicative_expression:
   multiplicative_expression multiplicative_operator unary_expression
 | unary_expression
multiplicative_operator:
   forward_slash
 | modulo
 | star
multisampled_texture_type:'texture_multisampled_2d'
not_equal:'!='
optionally_typed_ident:
   ident ( colon type_specifier )?
or:'|'
or_equal:'|='
or_or:'||'
override:'override'
param:
   attribute * ? ident colon type_specifier
param_list:
   param ( comma param ) * ? comma ?
param_list/0.1/0/0.0:
   comma param
paren_expression:
   paren_left expression paren_right
paren_left:'('
paren_right:')'
period:'.'
plus:'+'
plus_equal:'+='
plus_plus:'++'
pointer:'ptr'
primary_expression:
   'bitcast' less_than type_specifier greater_than paren_expression
 | attribute * ? call_expr
 | ident
 | literal
 | paren_expression
relational_expression:
   shift_expression
 | shift_expression equal_equal shift_expression
 | shift_expression greater_than shift_expression
 | shift_expression greater_than_equal shift_expression
 | shift_expression less_than shift_expression
 | shift_expression less_than_equal shift_expression
 | shift_expression not_equal shift_expression
return:'return'
return_statement:
   'return' expression ?
sampled_texture_type:
   'texture_1d'
 | 'texture_2d'
 | 'texture_2d_array'
 | 'texture_3d'
 | 'texture_cube'
 | 'texture_cube_array'
sampler:'sampler'
sampler_comparison:'sampler_comparison'
sampler_type:
   'sampler'
 | 'sampler_comparison'
semicolon:';'
severity_control_name:
   'error'
 | 'off'
 | 'warning'
shift_expression:
   additive_expression
 | unary_expression shift_left unary_expression
 | unary_expression shift_right unary_expression
shift_left:'<<'
shift_left_equal:'<<='
shift_right:'>>'
shift_right_equal:'>>='
short_circuit_and_expression:
   relational_expression
 | short_circuit_and_expression and_and relational_expression
short_circuit_or_expression:
   relational_expression
 | short_circuit_or_expression or_or relational_expression
singular_expression:
   primary_expression component_or_swizzle_specifier ?
star:'*'
statement:
   'discard' semicolon
 | break_statement semicolon
 | compound_statement
 | continue_statement semicolon
 | for_statement
 | func_call_statement semicolon
 | if_statement
 | loop_statement
 | return_statement semicolon
 | semicolon
 | static_assert_statement semicolon
 | switch_statement
 | variable_statement semicolon
 | variable_updating_statement semicolon
 | while_statement
static_assert:'static_assert'
static_assert_statement:
   'static_assert' expression
storage_texture_type:
   'texture_storage_1d'
 | 'texture_storage_2d'
 | 'texture_storage_2d_array'
 | 'texture_storage_3d'
struct:'struct'
struct_body_decl:
   brace_left struct_member ( comma struct_member ) * ? comma ? brace_right
struct_body_decl/0.2/0/0.0:
   comma struct_member
struct_decl:
   'struct' ident struct_body_decl
struct_member:
   attribute * ? member_ident colon type_specifier
switch:'switch'
switch_body:
   case_clause
 | default_alone_clause
switch_statement:
   'switch' expression brace_left ( switch_body * ) brace_right
switch_statement/0.3:
   switch_body *
swizzle_name:
   '/[rgba]/'
 | '/[rgba][rgba]/'
 | '/[rgba][rgba][rgba]/'
 | '/[rgba][rgba][rgba][rgba]/'
 | '/[xyzw]/'
 | '/[xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw]/'
 | '/[xyzw][xyzw][xyzw][xyzw]/'
texel_format:
   'r32float'
 | 'r32sint'
 | 'r32uint'
 | 'rg32float'
 | 'rg32sint'
 | 'rg32uint'
 | 'rgba16float'
 | 'rgba16sint'
 | 'rgba16uint'
 | 'rgba32float'
 | 'rgba32sint'
 | 'rgba32uint'
 | 'rgba8sint'
 | 'rgba8snorm'
 | 'rgba8uint'
 | 'rgba8unorm'
texture_1d:'texture_1d'
texture_2d:'texture_2d'
texture_2d_array:'texture_2d_array'
texture_3d:'texture_3d'
texture_and_sampler_types:
   depth_texture_type
 | multisampled_texture_type less_than type_specifier greater_than
 | sampled_texture_type less_than type_specifier greater_than
 | sampler_type
 | storage_texture_type less_than texel_format comma access_mode greater_than
texture_cube:'texture_cube'
texture_cube_array:'texture_cube_array'
texture_depth_2d:'texture_depth_2d'
texture_depth_2d_array:'texture_depth_2d_array'
texture_depth_cube:'texture_depth_cube'
texture_depth_cube_array:'texture_depth_cube_array'
texture_depth_multisampled_2d:'texture_depth_multisampled_2d'
texture_multisampled_2d:'texture_multisampled_2d'
texture_storage_1d:'texture_storage_1d'
texture_storage_2d:'texture_storage_2d'
texture_storage_2d_array:'texture_storage_2d_array'
texture_storage_3d:'texture_storage_3d'
tilde:'~'
times_equal:'*='
translation_unit:
   global_directive * ? global_decl * ?
true:'true'
type:'type'
type_alias_decl:
   'type' ident equal type_specifier
type_specifier:
   ident
 | type_specifier_without_ident
type_specifier_without_ident:
   'atomic' less_than type_specifier greater_than
 | 'bool'
 | array_type_specifier
 | float16
 | float32
 | int32
 | mat_prefix less_than type_specifier greater_than
 | pointer less_than address_space comma type_specifier ( comma access_mode )? greater_than
 | texture_and_sampler_types
 | uint32
 | vec_prefix less_than type_specifier greater_than
uint32:'u32'
unary_expression:
   and unary_expression
 | bang unary_expression
 | minus unary_expression
 | singular_expression
 | star unary_expression
 | tilde unary_expression
underscore:'_'
var:'var'
variable_decl:
   'var' variable_qualifier ? optionally_typed_ident
variable_qualifier:
   less_than address_space ( comma access_mode )? greater_than
variable_statement:
   'const' optionally_typed_ident equal expression
 | 'let' optionally_typed_ident equal expression
 | variable_decl
 | variable_decl equal expression
variable_updating_statement:
   assignment_statement
 | decrement_statement
 | increment_statement
vec2:'vec2'
vec3:'vec3'
vec4:'vec4'
vec_prefix:
   'vec2'
 | 'vec3'
 | 'vec4'
while:'while'
while_statement:
   'while' expression compound_statement
xor:'^'
xor_equal:'^='
=LALR1 item sets:
#0
language -> · translation_unit EndOfText : {EndOfText}
diagnostic_directive -> · 'diagnostic' diagnostic_control semicolon : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
enable_directive -> · 'enable' extension_name semicolon : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_directive -> · diagnostic_directive : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_directive -> · enable_directive : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
translation_unit -> · translation_unit/0.0 translation_unit/0.1 : {EndOfText}
translation_unit/0.0 -> · translation_unit/0.0/0 : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
translation_unit/0.0/0 -> · global_directive translation_unit/0.0/0 : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#1
language -> translation_unit · EndOfText : {EndOfText}

#2
translation_unit -> translation_unit/0.0 · translation_unit/0.1 : {EndOfText}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'fn' 'override' 'var'}
function_decl -> · function_decl/0.0 function_header compound_statement : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
function_decl/0.0 -> · function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> · 'const' optionally_typed_ident equal expression : {';'}
global_constant_decl -> · global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> · global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> · attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> · function_decl : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_decl -> · global_constant_decl semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_decl -> · global_variable_decl semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_decl -> · semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_decl -> · static_assert_statement semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_decl -> · struct_decl : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_decl -> · type_alias_decl semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_variable_decl -> · global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> · global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
semicolon -> · ';' : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
static_assert_statement -> · 'static_assert' expression : {';'}
struct_decl -> · 'struct' ident struct_body_decl : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
translation_unit/0.1 -> · translation_unit/0.1/0 : {EndOfText}
translation_unit/0.1/0 -> · global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> · 'type' ident equal type_specifier : {';'}

#3
translation_unit/0.0 -> translation_unit/0.0/0 · : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#4
translation_unit/0.0/0 -> global_directive · translation_unit/0.0/0 : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
diagnostic_directive -> · 'diagnostic' diagnostic_control semicolon : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
enable_directive -> · 'enable' extension_name semicolon : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_directive -> · diagnostic_directive : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_directive -> · enable_directive : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
translation_unit/0.0/0 -> · global_directive translation_unit/0.0/0 : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#5
global_directive -> diagnostic_directive · : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#6
global_directive -> enable_directive · : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#7
diagnostic_directive -> 'diagnostic' · diagnostic_control semicolon : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
diagnostic_control -> · paren_left severity_control_name comma diagnostic_rule_name attrib_end : {';'}
paren_left -> · '(' : {}

#8
enable_directive -> 'enable' · extension_name semicolon : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
extension_name -> · 'f16' : {';'}

#9
enable_directive -> 'enable' extension_name · semicolon : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
semicolon -> · ';' : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#10
extension_name -> 'f16' · : {';'}

#11
diagnostic_directive -> 'diagnostic' diagnostic_control · semicolon : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
semicolon -> · ';' : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#12
diagnostic_control -> paren_left · severity_control_name comma diagnostic_rule_name attrib_end : {';' '@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
severity_control_name -> · 'error' : {','}
severity_control_name -> · 'off' : {','}
severity_control_name -> · 'warning' : {','}

#13
paren_left -> '(' · : {'!' '&' '(' ')' '*' '-' ';' '@' '_' 'array' 'atomic' 'bitcast' 'bool' 'const' 'f16' 'f32' 'false' 'i32' 'let' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'var' 'vec2' 'vec3' 'vec4' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[xX][0-9a-fA-F]+[iu]?/}

#14
translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 · : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#15
translation_unit -> translation_unit/0.0 translation_unit/0.1 · : {EndOfText}

#16
translation_unit/0.1 -> translation_unit/0.1/0 · : {EndOfText}

#17
translation_unit/0.1/0 -> global_decl · translation_unit/0.1/0 : {EndOfText}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'fn' 'override' 'var'}
function_decl -> · function_decl/0.0 function_header compound_statement : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
function_decl/0.0 -> · function_decl/0.0/0 : {'fn'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_constant_decl -> · 'const' optionally_typed_ident equal expression : {';'}
global_constant_decl -> · global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}
global_constant_decl/1.0 -> · global_constant_decl/1.0/0 : {'override'}
global_constant_decl/1.0/0 -> · attribute global_constant_decl/1.0/0 : {'override'}
global_decl -> · function_decl : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_decl -> · global_constant_decl semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_decl -> · global_variable_decl semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_decl -> · semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_decl -> · static_assert_statement semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_decl -> · struct_decl : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_decl -> · type_alias_decl semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
global_variable_decl -> · global_variable_decl/0.0 variable_decl global_variable_decl/0.2 : {';'}
global_variable_decl/0.0 -> · global_variable_decl/0.0/0 : {'var'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}
semicolon -> · ';' : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
static_assert_statement -> · 'static_assert' expression : {';'}
struct_decl -> · 'struct' ident struct_body_decl : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
translation_unit/0.1/0 -> · global_decl translation_unit/0.1/0 : {EndOfText}
type_alias_decl -> · 'type' ident equal type_specifier : {';'}

#18
global_decl -> semicolon · : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#19
global_decl -> global_variable_decl · semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
semicolon -> · ';' : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#20
global_decl -> global_constant_decl · semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
semicolon -> · ';' : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#21
global_decl -> type_alias_decl · semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
semicolon -> · ';' : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#22
global_decl -> struct_decl · : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#23
global_decl -> function_decl · : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#24
global_decl -> static_assert_statement · semicolon : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
semicolon -> · ';' : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#25
semicolon -> ';' · : {'!' '&' '(' ')' '*' '-' ';' '@' '_' 'array' 'atomic' 'bitcast' 'bool' 'break' 'const' 'continue' 'continuing' 'diagnostic' 'discard' 'enable' 'f16' 'f32' 'false' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'type' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' '~' /0[xX][0-9a-fA-F]+[iu]?/ EndOfText}

#26
global_variable_decl -> global_variable_decl/0.0 · variable_decl global_variable_decl/0.2 : {';'}
variable_decl -> · 'var' variable_decl/0.1 optionally_typed_ident : {';' '='}

#27
global_constant_decl -> 'const' · optionally_typed_ident equal expression : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#28
global_constant_decl -> global_constant_decl/1.0 · 'override' optionally_typed_ident global_constant_decl/1.3 : {';'}

#29
type_alias_decl -> 'type' · ident equal type_specifier : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'='}

#30
struct_decl -> 'struct' · ident struct_body_decl : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'{'}

#31
function_decl -> function_decl/0.0 · function_header compound_statement : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
function_header -> · 'fn' ident paren_left function_header/0.3 paren_right function_header/0.5 : {'{'}

#32
static_assert_statement -> 'static_assert' · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {';'}
bitwise_expression -> · binary_or_expression or unary_expression : {';'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression and_and relational_expression : {';'}
expression -> · short_circuit_or_expression or_or relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#33
global_variable_decl/0.0 -> global_variable_decl/0.0/0 · : {'var'}

#34
global_constant_decl/1.0 -> global_constant_decl/1.0/0 · : {'override'}

#35
function_decl/0.0 -> function_decl/0.0/0 · : {'fn'}

#36
function_decl/0.0/0 -> attribute · function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> attribute · global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> attribute · global_variable_decl/0.0/0 : {'var'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'compute' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'const' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'fragment' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'invariant' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'vertex' : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'fn' 'override' 'var'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'fn' 'override' 'var'}
function_decl/0.0/0 -> · attribute function_decl/0.0/0 : {'fn'}
global_constant_decl/1.0/0 -> · attribute global_constant_decl/1.0/0 : {'override'}
global_variable_decl/0.0/0 -> · attribute global_variable_decl/0.0/0 : {'var'}

#37
attribute -> attr · 'align' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'binding' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'builtin' paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'diagnostic' diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'group' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'id' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'location' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'workgroup_size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr · 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#38
attr -> '@' · : {'const' 'diagnostic'}

#39
attribute -> attr 'align' · paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#40
attribute -> attr 'binding' · paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#41
attribute -> attr 'builtin' · paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
paren_left -> · '(' : {}

#42
attribute -> attr 'const' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#43
attribute -> attr 'diagnostic' · diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
diagnostic_control -> · paren_left severity_control_name comma diagnostic_rule_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
paren_left -> · '(' : {}

#44
attribute -> attr 'group' · paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#45
attribute -> attr 'id' · paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#46
attribute -> attr 'interpolate' · paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr 'interpolate' · paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
paren_left -> · '(' : {}

#47
attribute -> attr 'invariant' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#48
attribute -> attr 'location' · paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#49
attribute -> attr 'size' · paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#50
attribute -> attr 'workgroup_size' · paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr 'workgroup_size' · paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr 'workgroup_size' · paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#51
attribute -> attr 'vertex' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#52
attribute -> attr 'fragment' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#53
attribute -> attr 'compute' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#54
global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 · : {'var'}

#55
global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 · : {'override'}

#56
function_decl/0.0/0 -> attribute function_decl/0.0/0 · : {'fn'}

#57
static_assert_statement -> 'static_assert' expression · : {';'}

#58
expression -> relational_expression · : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> relational_expression · : {'&&'}
short_circuit_or_expression -> relational_expression · : {'||'}

#59
expression -> short_circuit_or_expression · or_or relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression · or_or relational_expression : {'||'}
or_or -> · '||' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#60
expression -> short_circuit_and_expression · and_and relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression · and_and relational_expression : {'&&'}
and_and -> · '&&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#61
expression -> bitwise_expression · : {')' ',' ':' ';' ']' '{'}

#62
relational_expression -> shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · equal_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
relational_expression -> shift_expression · not_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
equal_equal -> · '==' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
greater_than -> · '>' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
greater_than_equal -> · '>=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
less_than -> · '<' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
less_than_equal -> · '<=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
not_equal -> · '!=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#63
binary_and_expression -> binary_and_expression · and unary_expression : {'&'}
bitwise_expression -> binary_and_expression · and unary_expression : {')' ',' ':' ';' '>' ']' '{'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#64
binary_or_expression -> binary_or_expression · or unary_expression : {'|'}
bitwise_expression -> binary_or_expression · or unary_expression : {')' ',' ':' ';' '>' ']' '{'}
or -> · '|' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#65
binary_xor_expression -> binary_xor_expression · xor unary_expression : {'^'}
bitwise_expression -> binary_xor_expression · xor unary_expression : {')' ',' ':' ';' '>' ']' '{'}
xor -> · '^' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#66
additive_expression -> additive_expression · additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
shift_expression -> additive_expression · : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
additive_operator -> · minus : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
additive_operator -> · plus : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
plus -> · '+' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#67
binary_and_expression -> unary_expression · : {'&'}
binary_or_expression -> unary_expression · : {'|'}
binary_xor_expression -> unary_expression · : {'^'}
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
shift_expression -> unary_expression · shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
shift_expression -> unary_expression · shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
shift_left -> · '<<' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
shift_right -> · '>>' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#68
additive_expression -> multiplicative_expression · : {'!=' '&&' ')' '+' ',' '-' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
multiplicative_expression -> multiplicative_expression · multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
forward_slash -> · '/' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
modulo -> · '%' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_operator -> · forward_slash : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_operator -> · modulo : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_operator -> · star : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#69
unary_expression -> singular_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#70
unary_expression -> minus · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#71
unary_expression -> bang · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#72
unary_expression -> tilde · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#73
unary_expression -> star · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#74
unary_expression -> and · unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#75
singular_expression -> primary_expression · singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
bracket_left -> · '[' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
component_or_swizzle_specifier -> · bracket_left expression bracket_right component_or_swizzle_specifier/0.3 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
component_or_swizzle_specifier -> · period member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
component_or_swizzle_specifier -> · period swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}
period -> · '.' : {}
singular_expression/0.1 -> · component_or_swizzle_specifier : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#76
minus -> '-' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#77
bang -> '!' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#78
tilde -> '~' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#79
star -> '*' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#80
and -> '&' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#81
primary_expression -> ident · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#82
primary_expression -> primary_expression/1.0 · call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {'('}
call_expr -> · callable argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
callable -> · 'array' : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix : {'('}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float16 -> · 'f16' : {'('}
float32 -> · 'f32' : {'('}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'('}
int32 -> · 'i32' : {'('}
mat_prefix -> · 'mat2x2' : {'(' '<'}
mat_prefix -> · 'mat2x3' : {'(' '<'}
mat_prefix -> · 'mat2x4' : {'(' '<'}
mat_prefix -> · 'mat3x2' : {'(' '<'}
mat_prefix -> · 'mat3x3' : {'(' '<'}
mat_prefix -> · 'mat3x4' : {'(' '<'}
mat_prefix -> · 'mat4x2' : {'(' '<'}
mat_prefix -> · 'mat4x3' : {'(' '<'}
mat_prefix -> · 'mat4x4' : {'(' '<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {'('}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {'('}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · float16 : {'('}
type_specifier_without_ident -> · float32 : {'('}
type_specifier_without_ident -> · int32 : {'('}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {'('}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · uint32 : {'('}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {'('}
uint32 -> · 'u32' : {'('}
vec_prefix -> · 'vec2' : {'(' '<'}
vec_prefix -> · 'vec3' : {'(' '<'}
vec_prefix -> · 'vec4' : {'(' '<'}

#83
primary_expression -> literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#84
primary_expression -> paren_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#85
primary_expression -> 'bitcast' · less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
less_than -> · '<' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#86
ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {'!=' '%' '%=' '&&' '&' '&=' '(' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||' '}'}

#87
primary_expression/1.0 -> primary_expression/1.0/0 · : {}

#88
literal -> int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#89
literal -> float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#90
literal -> bool_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#91
paren_expression -> paren_left · expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')'}
bitwise_expression -> · binary_or_expression or unary_expression : {')'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')'}
expression -> · relational_expression : {')'}
expression -> · short_circuit_and_expression and_and relational_expression : {')'}
expression -> · short_circuit_or_expression or_or relational_expression : {')'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#92
primary_expression/1.0/0 -> attribute · primary_expression/1.0/0 : {}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}

#93
int_literal -> decimal_int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#94
int_literal -> hex_int_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#95
float_literal -> decimal_float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#96
float_literal -> hex_float_literal · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#97
bool_literal -> 'true' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#98
bool_literal -> 'false' · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#99
decimal_int_literal -> /0[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#100
decimal_int_literal -> /[1-9][0-9]*[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#101
hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#102
decimal_float_literal -> /0[fh]/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#103
decimal_float_literal -> /[1-9][0-9]*[fh]/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#104
decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#105
decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#106
decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#107
hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#108
hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#109
hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#110
function_decl -> function_decl/0.0 function_header · compound_statement : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#111
function_header -> 'fn' · ident paren_left function_header/0.3 paren_right function_header/0.5 : {'{'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'('}

#112
struct_decl -> 'struct' ident · struct_body_decl : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
brace_left -> · '{' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_body_decl -> · brace_left struct_member struct_body_decl/0.2 struct_body_decl/0.3 brace_right : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#113
type_alias_decl -> 'type' ident · equal type_specifier : {';'}
equal -> · '=' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#114
global_constant_decl -> global_constant_decl/1.0 'override' · optionally_typed_ident global_constant_decl/1.3 : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' ';' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {';' '='}

#115
global_constant_decl -> 'const' optionally_typed_ident · equal expression : {';'}
equal -> · '=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#116
optionally_typed_ident -> ident · optionally_typed_ident/0.1 : {';' '='}
colon -> · ':' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
optionally_typed_ident/0.1 -> · colon type_specifier : {';' '='}

#117
global_variable_decl -> global_variable_decl/0.0 variable_decl · global_variable_decl/0.2 : {';'}
equal -> · '=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
global_variable_decl/0.2 -> · equal expression : {';'}

#118
variable_decl -> 'var' · variable_decl/0.1 optionally_typed_ident : {';' '='}
less_than -> · '<' : {}
variable_decl/0.1 -> · variable_qualifier : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
variable_qualifier -> · less_than address_space variable_qualifier/0.2 greater_than : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#119
global_decl -> static_assert_statement semicolon · : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#120
global_decl -> type_alias_decl semicolon · : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#121
global_decl -> global_constant_decl semicolon · : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#122
global_decl -> global_variable_decl semicolon · : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#123
translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 · : {EndOfText}

#124
diagnostic_control -> paren_left severity_control_name · comma diagnostic_rule_name attrib_end : {';' '@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
comma -> · ',' : {}

#125
severity_control_name -> 'error' · : {','}

#126
severity_control_name -> 'warning' · : {','}

#127
severity_control_name -> 'off' · : {','}

#128
diagnostic_directive -> 'diagnostic' diagnostic_control semicolon · : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#129
enable_directive -> 'enable' extension_name semicolon · : {';' '@' 'const' 'diagnostic' 'enable' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#130
diagnostic_control -> paren_left severity_control_name comma · diagnostic_rule_name attrib_end : {';' '@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
diagnostic_rule_name -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ','}

#131
comma -> ',' · : {'!' '&' '(' ')' '*' '-' ':' '@' 'array' 'atomic' 'bitcast' 'bool' 'default' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '{' '}' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[xX][0-9a-fA-F]+[iu]?/}

#132
variable_decl -> 'var' variable_decl/0.1 · optionally_typed_ident : {';' '='}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' ';' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {';' '='}

#133
variable_decl/0.1 -> variable_qualifier · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#134
variable_qualifier -> less_than · address_space variable_qualifier/0.2 greater_than : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
address_space -> · 'function' : {',' '>'}
address_space -> · 'private' : {',' '>'}
address_space -> · 'storage' : {',' '>'}
address_space -> · 'uniform' : {',' '>'}
address_space -> · 'workgroup' : {',' '>'}

#135
less_than -> '<' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#136
global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 · : {';'}

#137
global_variable_decl/0.2 -> equal · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {';'}
bitwise_expression -> · binary_or_expression or unary_expression : {';'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression and_and relational_expression : {';'}
expression -> · short_circuit_or_expression or_or relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#138
equal -> '=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#139
optionally_typed_ident -> ident optionally_typed_ident/0.1 · : {';' '='}

#140
optionally_typed_ident/0.1 -> colon · type_specifier : {';' '='}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {';' '='}
depth_texture_type -> · 'texture_depth_2d' : {';' '='}
depth_texture_type -> · 'texture_depth_2d_array' : {';' '='}
depth_texture_type -> · 'texture_depth_cube' : {';' '='}
depth_texture_type -> · 'texture_depth_cube_array' : {';' '='}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {';' '='}
float16 -> · 'f16' : {';' '='}
float32 -> · 'f32' : {';' '='}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {';' '='}
int32 -> · 'i32' : {';' '='}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {';' '='}
sampler_type -> · 'sampler_comparison' : {';' '='}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {';' '='}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {';' '='}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {';' '='}
texture_and_sampler_types -> · sampler_type : {';' '='}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {';' '='}
type_specifier -> · ident : {';' '='}
type_specifier -> · type_specifier_without_ident : {';' '='}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {';' '='}
type_specifier_without_ident -> · 'bool' : {';' '='}
type_specifier_without_ident -> · array_type_specifier : {';' '='}
type_specifier_without_ident -> · float16 : {';' '='}
type_specifier_without_ident -> · float32 : {';' '='}
type_specifier_without_ident -> · int32 : {';' '='}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {';' '='}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {';' '='}
type_specifier_without_ident -> · texture_and_sampler_types : {';' '='}
type_specifier_without_ident -> · uint32 : {';' '='}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {';' '='}
uint32 -> · 'u32' : {';' '='}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#141
colon -> ':' · : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4' '{'}

#142
global_constant_decl -> 'const' optionally_typed_ident equal · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {';'}
bitwise_expression -> · binary_or_expression or unary_expression : {';'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression and_and relational_expression : {';'}
expression -> · short_circuit_or_expression or_or relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#143
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident · global_constant_decl/1.3 : {';'}
equal -> · '=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
global_constant_decl/1.3 -> · equal expression : {';'}

#144
type_alias_decl -> 'type' ident equal · type_specifier : {';'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {';'}
depth_texture_type -> · 'texture_depth_2d' : {';'}
depth_texture_type -> · 'texture_depth_2d_array' : {';'}
depth_texture_type -> · 'texture_depth_cube' : {';'}
depth_texture_type -> · 'texture_depth_cube_array' : {';'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {';'}
float16 -> · 'f16' : {';'}
float32 -> · 'f32' : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {';'}
int32 -> · 'i32' : {';'}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {';'}
sampler_type -> · 'sampler_comparison' : {';'}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {';'}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {';'}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {';'}
texture_and_sampler_types -> · sampler_type : {';'}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {';'}
type_specifier -> · ident : {';'}
type_specifier -> · type_specifier_without_ident : {';'}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {';'}
type_specifier_without_ident -> · 'bool' : {';'}
type_specifier_without_ident -> · array_type_specifier : {';'}
type_specifier_without_ident -> · float16 : {';'}
type_specifier_without_ident -> · float32 : {';'}
type_specifier_without_ident -> · int32 : {';'}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {';'}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {';'}
type_specifier_without_ident -> · texture_and_sampler_types : {';'}
type_specifier_without_ident -> · uint32 : {';'}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {';'}
uint32 -> · 'u32' : {';'}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#145
struct_decl -> 'struct' ident struct_body_decl · : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#146
struct_body_decl -> brace_left · struct_member struct_body_decl/0.2 struct_body_decl/0.3 brace_right : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
struct_member -> · struct_member/0.0 member_ident colon type_specifier : {',' '}'}
struct_member/0.0 -> · struct_member/0.0/0 : {}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {}

#147
brace_left -> '{' · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'continue' 'continuing' 'default' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#148
function_header -> 'fn' ident · paren_left function_header/0.3 paren_right function_header/0.5 : {'{'}
paren_left -> · '(' : {')' '@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#149
function_decl -> function_decl/0.0 function_header compound_statement · : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#150
compound_statement -> brace_left · compound_statement/0.1 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'type' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' EndOfText}
and -> · '&' : {'&' '(' '*'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
assignment_statement -> · underscore equal expression : {';'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
break_statement -> · 'break' : {';'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
compound_statement/0.1 -> · compound_statement/0.1/0 : {'}'}
compound_statement/0.1/0 -> · statement compound_statement/0.1/0 : {'}'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
core_lhs_expression -> · paren_left lhs_expression paren_right : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
decrement_statement -> · lhs_expression minus_minus : {';'}
for_statement -> · 'for' paren_left for_header paren_right compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
func_call_statement -> · func_call_statement/0.0 call_phrase : {';'}
func_call_statement/0.0 -> · func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
func_call_statement/0.0/0 -> · attribute func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
increment_statement -> · lhs_expression plus_plus : {';'}
lhs_expression -> · and lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · star lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
loop_statement -> · 'loop' brace_left loop_statement/0.2 loop_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
paren_left -> · '(' : {'&' '(' '*'}
return_statement -> · 'return' return_statement/0.1 : {';'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
star -> · '*' : {'&' '(' '*'}
statement -> · 'discard' semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · break_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · continue_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · func_call_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · return_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · static_assert_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · variable_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · variable_updating_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
static_assert_statement -> · 'static_assert' expression : {';'}
switch_statement -> · 'switch' expression brace_left switch_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
underscore -> · '_' : {'='}
variable_decl -> · 'var' variable_decl/0.1 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident equal expression : {';'}
variable_statement -> · 'let' optionally_typed_ident equal expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_statement -> · variable_decl equal expression : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#151
primary_expression/1.0/0 -> attribute primary_expression/1.0/0 · : {}

#152
paren_expression -> paren_left expression · paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
paren_right -> · ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#153
primary_expression -> 'bitcast' less_than · type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {'>'}
depth_texture_type -> · 'texture_depth_2d' : {'>'}
depth_texture_type -> · 'texture_depth_2d_array' : {'>'}
depth_texture_type -> · 'texture_depth_cube' : {'>'}
depth_texture_type -> · 'texture_depth_cube_array' : {'>'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'>'}
float16 -> · 'f16' : {'>'}
float32 -> · 'f32' : {'>'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'>'}
int32 -> · 'i32' : {'>'}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {'>'}
sampler_type -> · 'sampler_comparison' : {'>'}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {'>'}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {'>'}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {'>'}
texture_and_sampler_types -> · sampler_type : {'>'}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {'>'}
type_specifier -> · ident : {'>'}
type_specifier -> · type_specifier_without_ident : {'>'}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {'>'}
type_specifier_without_ident -> · 'bool' : {'>'}
type_specifier_without_ident -> · array_type_specifier : {'>'}
type_specifier_without_ident -> · float16 : {'>'}
type_specifier_without_ident -> · float32 : {'>'}
type_specifier_without_ident -> · int32 : {'>'}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {'>'}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {'>'}
type_specifier_without_ident -> · texture_and_sampler_types : {'>'}
type_specifier_without_ident -> · uint32 : {'>'}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {'>'}
uint32 -> · 'u32' : {'>'}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#154
primary_expression -> primary_expression/1.0 call_expr · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#155
call_expr -> callable · argument_expression_list : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
argument_expression_list -> · paren_left argument_expression_list/0.1 paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' ')' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#156
callable -> ident · : {'('}

#157
callable -> type_specifier_without_ident · : {'('}

#158
callable -> vec_prefix · : {'('}
type_specifier_without_ident -> vec_prefix · less_than type_specifier greater_than : {'('}
less_than -> · '<' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#159
callable -> mat_prefix · : {'('}
type_specifier_without_ident -> mat_prefix · less_than type_specifier greater_than : {'('}
less_than -> · '<' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#160
array_type_specifier -> 'array' · less_than type_specifier array_type_specifier/0.3 greater_than : {'('}
callable -> 'array' · : {'('}
less_than -> · '<' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#161
type_specifier_without_ident -> 'bool' · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#162
type_specifier_without_ident -> float32 · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#163
type_specifier_without_ident -> float16 · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#164
type_specifier_without_ident -> int32 · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#165
type_specifier_without_ident -> uint32 · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#166
type_specifier_without_ident -> pointer · less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
less_than -> · '<' : {}

#167
type_specifier_without_ident -> array_type_specifier · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#168
type_specifier_without_ident -> 'atomic' · less_than type_specifier greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
less_than -> · '<' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#169
type_specifier_without_ident -> texture_and_sampler_types · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#170
vec_prefix -> 'vec2' · : {'(' '<'}

#171
vec_prefix -> 'vec3' · : {'(' '<'}

#172
vec_prefix -> 'vec4' · : {'(' '<'}

#173
mat_prefix -> 'mat2x2' · : {'(' '<'}

#174
mat_prefix -> 'mat2x3' · : {'(' '<'}

#175
mat_prefix -> 'mat2x4' · : {'(' '<'}

#176
mat_prefix -> 'mat3x2' · : {'(' '<'}

#177
mat_prefix -> 'mat3x3' · : {'(' '<'}

#178
mat_prefix -> 'mat3x4' · : {'(' '<'}

#179
mat_prefix -> 'mat4x2' · : {'(' '<'}

#180
mat_prefix -> 'mat4x3' · : {'(' '<'}

#181
mat_prefix -> 'mat4x4' · : {'(' '<'}

#182
float32 -> 'f32' · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#183
float16 -> 'f16' · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#184
int32 -> 'i32' · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#185
uint32 -> 'u32' · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#186
pointer -> 'ptr' · : {'<'}

#187
texture_and_sampler_types -> sampler_type · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#188
texture_and_sampler_types -> depth_texture_type · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#189
texture_and_sampler_types -> sampled_texture_type · less_than type_specifier greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
less_than -> · '<' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#190
texture_and_sampler_types -> multisampled_texture_type · less_than type_specifier greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
less_than -> · '<' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#191
texture_and_sampler_types -> storage_texture_type · less_than texel_format comma access_mode greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
less_than -> · '<' : {}

#192
sampler_type -> 'sampler' · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#193
sampler_type -> 'sampler_comparison' · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#194
depth_texture_type -> 'texture_depth_2d' · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#195
depth_texture_type -> 'texture_depth_2d_array' · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#196
depth_texture_type -> 'texture_depth_cube' · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#197
depth_texture_type -> 'texture_depth_cube_array' · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#198
depth_texture_type -> 'texture_depth_multisampled_2d' · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#199
sampled_texture_type -> 'texture_1d' · : {'<'}

#200
sampled_texture_type -> 'texture_2d' · : {'<'}

#201
sampled_texture_type -> 'texture_2d_array' · : {'<'}

#202
sampled_texture_type -> 'texture_3d' · : {'<'}

#203
sampled_texture_type -> 'texture_cube' · : {'<'}

#204
sampled_texture_type -> 'texture_cube_array' · : {'<'}

#205
multisampled_texture_type -> 'texture_multisampled_2d' · : {'<'}

#206
storage_texture_type -> 'texture_storage_1d' · : {'<'}

#207
storage_texture_type -> 'texture_storage_2d' · : {'<'}

#208
storage_texture_type -> 'texture_storage_2d_array' · : {'<'}

#209
storage_texture_type -> 'texture_storage_3d' · : {'<'}

#210
singular_expression -> primary_expression singular_expression/0.1 · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#211
singular_expression/0.1 -> component_or_swizzle_specifier · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#212
component_or_swizzle_specifier -> bracket_left · expression bracket_right component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '<' '<=' '==' '>' '>=' ']' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '<' '<=' '==' '>' '>=' ']' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {']'}
bitwise_expression -> · binary_or_expression or unary_expression : {']'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {']'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
expression -> · bitwise_expression : {']'}
expression -> · relational_expression : {']'}
expression -> · short_circuit_and_expression and_and relational_expression : {']'}
expression -> · short_circuit_or_expression or_or relational_expression : {']'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '<' '<=' '==' '>' '>=' ']' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '<' '<=' '==' '>' '>=' ']' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ']' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ']' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' ']' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' ']' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' ']' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '|' '||'}

#213
component_or_swizzle_specifier -> period · member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
component_or_swizzle_specifier -> period · swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
member_ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}
swizzle_name -> · '/[rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}
swizzle_name -> · '/[rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}
swizzle_name -> · '/[rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}
swizzle_name -> · '/[rgba][rgba][rgba][rgba]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}
swizzle_name -> · '/[xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}
swizzle_name -> · '/[xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}
swizzle_name -> · '/[xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}
swizzle_name -> · '/[xyzw][xyzw][xyzw][xyzw]/' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}

#214
bracket_left -> '[' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#215
period -> '.' · : {}

#216
unary_expression -> and unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#217
unary_expression -> star unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#218
unary_expression -> tilde unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#219
unary_expression -> bang unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#220
unary_expression -> minus unary_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '^' '{' '|' '||'}

#221
multiplicative_expression -> multiplicative_expression multiplicative_operator · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}

#222
multiplicative_operator -> star · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#223
multiplicative_operator -> forward_slash · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#224
multiplicative_operator -> modulo · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#225
forward_slash -> '/' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#226
modulo -> '%' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#227
shift_expression -> unary_expression shift_left · unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
bool_literal -> · 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
float_literal -> · decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
float_literal -> · hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
int_literal -> · decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
int_literal -> · hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
literal -> · bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
literal -> · float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
literal -> · int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
paren_expression -> · paren_left expression paren_right : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · ident : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · bang unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · minus unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · singular_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · star unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · tilde unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}

#228
shift_expression -> unary_expression shift_right · unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
bool_literal -> · 'true' : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
float_literal -> · decimal_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
float_literal -> · hex_float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
int_literal -> · decimal_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
int_literal -> · hex_int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
literal -> · bool_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
literal -> · float_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
literal -> · int_literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
paren_expression -> · paren_left expression paren_right : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · ident : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · literal : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · paren_expression : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '&&' ')' ',' '.' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · bang unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · minus unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · singular_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · star unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · tilde unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}

#229
shift_left -> '<<' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#230
shift_right -> '>>' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#231
additive_expression -> additive_expression additive_operator · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<=' '==' '>' '>=' '[' ']' '{' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}

#232
additive_operator -> plus · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#233
additive_operator -> minus · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#234
plus -> '+' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#235
binary_xor_expression -> binary_xor_expression xor · unary_expression : {'^'}
bitwise_expression -> binary_xor_expression xor · unary_expression : {')' ',' ':' ';' '>' ']' '{'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
bool_literal -> · 'true' : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
decimal_float_literal -> · /0[fh]/ : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
decimal_int_literal -> · /0[iu]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
float_literal -> · decimal_float_literal : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
float_literal -> · hex_float_literal : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
int_literal -> · decimal_int_literal : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
int_literal -> · hex_int_literal : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
literal -> · bool_literal : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
literal -> · float_literal : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
literal -> · int_literal : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
paren_expression -> · paren_left expression paren_right : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
primary_expression -> · ident : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
primary_expression -> · literal : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
primary_expression -> · paren_expression : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
primary_expression -> · primary_expression/1.0 call_expr : {')' ',' '.' ':' ';' '>' '[' ']' '^' '{'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {')' ',' ':' ';' '>' ']' '^' '{'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {')' ',' ':' ';' '>' ']' '^' '{'}
unary_expression -> · bang unary_expression : {')' ',' ':' ';' '>' ']' '^' '{'}
unary_expression -> · minus unary_expression : {')' ',' ':' ';' '>' ']' '^' '{'}
unary_expression -> · singular_expression : {')' ',' ':' ';' '>' ']' '^' '{'}
unary_expression -> · star unary_expression : {')' ',' ':' ';' '>' ']' '^' '{'}
unary_expression -> · tilde unary_expression : {')' ',' ':' ';' '>' ']' '^' '{'}

#236
xor -> '^' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#237
binary_or_expression -> binary_or_expression or · unary_expression : {'|'}
bitwise_expression -> binary_or_expression or · unary_expression : {')' ',' ':' ';' '>' ']' '{'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
bool_literal -> · 'true' : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
decimal_float_literal -> · /0[fh]/ : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
decimal_int_literal -> · /0[iu]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
float_literal -> · decimal_float_literal : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
float_literal -> · hex_float_literal : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
int_literal -> · decimal_int_literal : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
int_literal -> · hex_int_literal : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
literal -> · bool_literal : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
literal -> · float_literal : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
literal -> · int_literal : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
paren_expression -> · paren_left expression paren_right : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
primary_expression -> · ident : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
primary_expression -> · literal : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
primary_expression -> · paren_expression : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
primary_expression -> · primary_expression/1.0 call_expr : {')' ',' '.' ':' ';' '>' '[' ']' '{' '|'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {')' ',' ':' ';' '>' ']' '{' '|'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {')' ',' ':' ';' '>' ']' '{' '|'}
unary_expression -> · bang unary_expression : {')' ',' ':' ';' '>' ']' '{' '|'}
unary_expression -> · minus unary_expression : {')' ',' ':' ';' '>' ']' '{' '|'}
unary_expression -> · singular_expression : {')' ',' ':' ';' '>' ']' '{' '|'}
unary_expression -> · star unary_expression : {')' ',' ':' ';' '>' ']' '{' '|'}
unary_expression -> · tilde unary_expression : {')' ',' ':' ';' '>' ']' '{' '|'}

#238
or -> '|' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#239
binary_and_expression -> binary_and_expression and · unary_expression : {'&'}
bitwise_expression -> binary_and_expression and · unary_expression : {')' ',' ':' ';' '>' ']' '{'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
bool_literal -> · 'true' : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
decimal_float_literal -> · /0[fh]/ : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
decimal_int_literal -> · /0[iu]?/ : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
float_literal -> · decimal_float_literal : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
float_literal -> · hex_float_literal : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
int_literal -> · decimal_int_literal : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
int_literal -> · hex_int_literal : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
literal -> · bool_literal : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
literal -> · float_literal : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
literal -> · int_literal : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
paren_expression -> · paren_left expression paren_right : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
primary_expression -> · ident : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
primary_expression -> · literal : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
primary_expression -> · paren_expression : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
primary_expression -> · primary_expression/1.0 call_expr : {'&' ')' ',' '.' ':' ';' '>' '[' ']' '{'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {'&' ')' ',' ':' ';' '>' ']' '{'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'&' ')' ',' ':' ';' '>' ']' '{'}
unary_expression -> · bang unary_expression : {'&' ')' ',' ':' ';' '>' ']' '{'}
unary_expression -> · minus unary_expression : {'&' ')' ',' ':' ';' '>' ']' '{'}
unary_expression -> · singular_expression : {'&' ')' ',' ':' ';' '>' ']' '{'}
unary_expression -> · star unary_expression : {'&' ')' ',' ':' ';' '>' ']' '{'}
unary_expression -> · tilde unary_expression : {'&' ')' ',' ':' ';' '>' ']' '{'}

#240
relational_expression -> shift_expression less_than · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · bang unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · minus unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · star unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · tilde unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}

#241
relational_expression -> shift_expression greater_than · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · bang unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · minus unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · star unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · tilde unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}

#242
relational_expression -> shift_expression less_than_equal · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · bang unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · minus unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · star unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · tilde unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}

#243
relational_expression -> shift_expression greater_than_equal · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · bang unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · minus unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · star unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · tilde unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}

#244
relational_expression -> shift_expression equal_equal · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · bang unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · minus unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · star unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · tilde unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}

#245
relational_expression -> shift_expression not_equal · shift_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'&&' ')' '+' ',' '-' ':' ';' ']' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
bool_literal -> · 'true' : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /0[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /0[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
float_literal -> · decimal_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
float_literal -> · hex_float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
int_literal -> · decimal_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
int_literal -> · hex_int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · bool_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · float_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
literal -> · int_literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' ']' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · ident : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · literal : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · paren_expression : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<<' '>>' '[' ']' '{' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
shift_expression -> · additive_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'&&' ')' ',' ':' ';' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · bang unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · minus unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · singular_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · star unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}
unary_expression -> · tilde unary_expression : {'%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<<' '>>' ']' '{' '||'}

#246
greater_than -> '>' · : {'!' '&' '(' ')' '*' ',' '-' ';' '=' '>' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '{' '}' '~' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ /0[xX][0-9a-fA-F]+[iu]?/}

#247
less_than_equal -> '<=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#248
greater_than_equal -> '>=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#249
equal_equal -> '==' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#250
not_equal -> '!=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#251
expression -> short_circuit_and_expression and_and · relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression and_and · relational_expression : {'&&'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '<' '<=' '==' '>' '>=' ']' '{'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' ':' ';' '<' '<=' '==' '>' '>=' ']' '{'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
bool_literal -> · 'true' : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
literal -> · bool_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
literal -> · float_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
literal -> · int_literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
primary_expression -> · ident : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
primary_expression -> · literal : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
primary_expression -> · paren_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ',' ':' ';' ']' '{'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{'}
unary_expression -> · singular_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{'}

#252
and_and -> '&&' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#253
expression -> short_circuit_or_expression or_or · relational_expression : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression or_or · relational_expression : {'||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
additive_expression -> · multiplicative_expression : {'!=' ')' '+' ',' '-' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
bool_literal -> · 'false' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
bool_literal -> · 'true' : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
float_literal -> · decimal_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
float_literal -> · hex_float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
int_literal -> · hex_int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
literal -> · bool_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
literal -> · float_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
literal -> · int_literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
primary_expression -> · ident : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
primary_expression -> · literal : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
primary_expression -> · paren_expression : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '{' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression less_than shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {')' ',' ':' ';' ']' '{' '||'}
shift_expression -> · additive_expression : {'!=' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{' '||'}
unary_expression -> · singular_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{' '||'}
unary_expression -> · star unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' ']' '{' '||'}

#254
or_or -> '||' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#255
attribute -> attr 'workgroup_size' paren_left · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr 'workgroup_size' paren_left · expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr 'workgroup_size' paren_left · expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ','}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#256
attribute -> attr 'size' paren_left · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ','}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#257
attribute -> attr 'location' paren_left · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ','}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#258
attribute -> attr 'interpolate' paren_left · interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr 'interpolate' paren_left · interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
interpolation_type_name -> · 'flat' : {')' ','}
interpolation_type_name -> · 'linear' : {')' ','}
interpolation_type_name -> · 'perspective' : {')' ','}

#259
attribute -> attr 'id' paren_left · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ','}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#260
attribute -> attr 'group' paren_left · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ','}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#261
attribute -> attr 'diagnostic' diagnostic_control · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#262
attribute -> attr 'builtin' paren_left · builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
builtin_value_name -> · 'frag_depth' : {')' ','}
builtin_value_name -> · 'front_facing' : {')' ','}
builtin_value_name -> · 'global_invocation_id' : {')' ','}
builtin_value_name -> · 'instance_index' : {')' ','}
builtin_value_name -> · 'local_invocation_id' : {')' ','}
builtin_value_name -> · 'local_invocation_index' : {')' ','}
builtin_value_name -> · 'num_workgroups' : {')' ','}
builtin_value_name -> · 'position' : {')' ','}
builtin_value_name -> · 'sample_index' : {')' ','}
builtin_value_name -> · 'sample_mask' : {')' ','}
builtin_value_name -> · 'vertex_index' : {')' ','}
builtin_value_name -> · 'workgroup_id' : {')' ','}

#263
attribute -> attr 'binding' paren_left · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ','}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#264
attribute -> attr 'align' paren_left · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ','}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#265
attribute -> attr 'align' paren_left expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {')'}

#266
attribute -> attr 'binding' paren_left expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {')'}

#267
attribute -> attr 'builtin' paren_left builtin_value_name · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {')'}

#268
builtin_value_name -> 'vertex_index' · : {')' ','}

#269
builtin_value_name -> 'instance_index' · : {')' ','}

#270
builtin_value_name -> 'position' · : {')' ','}

#271
builtin_value_name -> 'front_facing' · : {')' ','}

#272
builtin_value_name -> 'frag_depth' · : {')' ','}

#273
builtin_value_name -> 'local_invocation_id' · : {')' ','}

#274
builtin_value_name -> 'local_invocation_index' · : {')' ','}

#275
builtin_value_name -> 'global_invocation_id' · : {')' ','}

#276
builtin_value_name -> 'workgroup_id' · : {')' ','}

#277
builtin_value_name -> 'num_workgroups' · : {')' ','}

#278
builtin_value_name -> 'sample_index' · : {')' ','}

#279
builtin_value_name -> 'sample_mask' · : {')' ','}

#280
attribute -> attr 'group' paren_left expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {')'}

#281
attribute -> attr 'id' paren_left expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {')'}

#282
attribute -> attr 'interpolate' paren_left interpolation_type_name · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr 'interpolate' paren_left interpolation_type_name · comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {')'}

#283
interpolation_type_name -> 'perspective' · : {')' ','}

#284
interpolation_type_name -> 'linear' · : {')' ','}

#285
interpolation_type_name -> 'flat' · : {')' ','}

#286
attribute -> attr 'location' paren_left expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {')'}

#287
attribute -> attr 'size' paren_left expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {')'}

#288
attribute -> attr 'workgroup_size' paren_left expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr 'workgroup_size' paren_left expression · comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr 'workgroup_size' paren_left expression · comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {'!' '&' '(' ')' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#289
expression -> short_circuit_or_expression or_or relational_expression · : {')' ',' ':' ';' ']' '{'}
short_circuit_or_expression -> short_circuit_or_expression or_or relational_expression · : {'||'}

#290
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
shift_expression -> unary_expression · shift_left unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
shift_expression -> unary_expression · shift_right unary_expression : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
shift_left -> · '<<' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
shift_right -> · '>>' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#291
expression -> short_circuit_and_expression and_and relational_expression · : {')' ',' ':' ';' ']' '{'}
short_circuit_and_expression -> short_circuit_and_expression and_and relational_expression · : {'&&'}

#292
relational_expression -> shift_expression not_equal shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#293
relational_expression -> shift_expression equal_equal shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#294
relational_expression -> shift_expression greater_than_equal shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#295
relational_expression -> shift_expression less_than_equal shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#296
relational_expression -> shift_expression greater_than shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#297
relational_expression -> shift_expression less_than shift_expression · : {'&&' ')' ',' ':' ';' ']' '{' '||'}

#298
binary_and_expression -> binary_and_expression and unary_expression · : {'&'}
bitwise_expression -> binary_and_expression and unary_expression · : {')' ',' ':' ';' '>' ']' '{'}

#299
binary_or_expression -> binary_or_expression or unary_expression · : {'|'}
bitwise_expression -> binary_or_expression or unary_expression · : {')' ',' ':' ';' '>' ']' '{'}

#300
binary_xor_expression -> binary_xor_expression xor unary_expression · : {'^'}
bitwise_expression -> binary_xor_expression xor unary_expression · : {')' ',' ':' ';' '>' ']' '{'}

#301
additive_expression -> additive_expression additive_operator multiplicative_expression · : {'!=' '&&' ')' '+' ',' '-' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
multiplicative_expression -> multiplicative_expression · multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}
forward_slash -> · '/' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
modulo -> · '%' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_operator -> · forward_slash : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_operator -> · modulo : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_operator -> · star : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#302
multiplicative_expression -> unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}

#303
shift_expression -> unary_expression shift_right unary_expression · : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}

#304
shift_expression -> unary_expression shift_left unary_expression · : {'!=' '&&' ')' ',' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}

#305
multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression · : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' ':' ';' '<' '<=' '==' '>' '>=' ']' '{' '||'}

#306
component_or_swizzle_specifier -> period member_ident · component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
bracket_left -> · '[' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
component_or_swizzle_specifier -> · bracket_left expression bracket_right component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
component_or_swizzle_specifier -> · period member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
component_or_swizzle_specifier -> · period swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
component_or_swizzle_specifier/1.2 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
period -> · '.' : {}

#307
component_or_swizzle_specifier -> period swizzle_name · component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
bracket_left -> · '[' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
component_or_swizzle_specifier -> · bracket_left expression bracket_right component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
component_or_swizzle_specifier -> · period member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
component_or_swizzle_specifier -> · period swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
component_or_swizzle_specifier/2.2 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
period -> · '.' : {}

#308
member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}

#309
swizzle_name -> '/[rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}

#310
swizzle_name -> '/[rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}

#311
swizzle_name -> '/[rgba][rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}

#312
swizzle_name -> '/[rgba][rgba][rgba][rgba]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}

#313
swizzle_name -> '/[xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}

#314
swizzle_name -> '/[xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}

#315
swizzle_name -> '/[xyzw][xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}

#316
swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}

#317
component_or_swizzle_specifier -> bracket_left expression · bracket_right component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
bracket_right -> · ']' : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}

#318
texture_and_sampler_types -> storage_texture_type less_than · texel_format comma access_mode greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
texel_format -> · 'r32float' : {','}
texel_format -> · 'r32sint' : {','}
texel_format -> · 'r32uint' : {','}
texel_format -> · 'rg32float' : {','}
texel_format -> · 'rg32sint' : {','}
texel_format -> · 'rg32uint' : {','}
texel_format -> · 'rgba16float' : {','}
texel_format -> · 'rgba16sint' : {','}
texel_format -> · 'rgba16uint' : {','}
texel_format -> · 'rgba32float' : {','}
texel_format -> · 'rgba32sint' : {','}
texel_format -> · 'rgba32uint' : {','}
texel_format -> · 'rgba8sint' : {','}
texel_format -> · 'rgba8snorm' : {','}
texel_format -> · 'rgba8uint' : {','}
texel_format -> · 'rgba8unorm' : {','}

#319
texture_and_sampler_types -> multisampled_texture_type less_than · type_specifier greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {'>'}
depth_texture_type -> · 'texture_depth_2d' : {'>'}
depth_texture_type -> · 'texture_depth_2d_array' : {'>'}
depth_texture_type -> · 'texture_depth_cube' : {'>'}
depth_texture_type -> · 'texture_depth_cube_array' : {'>'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'>'}
float16 -> · 'f16' : {'>'}
float32 -> · 'f32' : {'>'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'>'}
int32 -> · 'i32' : {'>'}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {'>'}
sampler_type -> · 'sampler_comparison' : {'>'}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {'>'}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {'>'}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {'>'}
texture_and_sampler_types -> · sampler_type : {'>'}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {'>'}
type_specifier -> · ident : {'>'}
type_specifier -> · type_specifier_without_ident : {'>'}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {'>'}
type_specifier_without_ident -> · 'bool' : {'>'}
type_specifier_without_ident -> · array_type_specifier : {'>'}
type_specifier_without_ident -> · float16 : {'>'}
type_specifier_without_ident -> · float32 : {'>'}
type_specifier_without_ident -> · int32 : {'>'}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {'>'}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {'>'}
type_specifier_without_ident -> · texture_and_sampler_types : {'>'}
type_specifier_without_ident -> · uint32 : {'>'}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {'>'}
uint32 -> · 'u32' : {'>'}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#320
texture_and_sampler_types -> sampled_texture_type less_than · type_specifier greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {'>'}
depth_texture_type -> · 'texture_depth_2d' : {'>'}
depth_texture_type -> · 'texture_depth_2d_array' : {'>'}
depth_texture_type -> · 'texture_depth_cube' : {'>'}
depth_texture_type -> · 'texture_depth_cube_array' : {'>'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'>'}
float16 -> · 'f16' : {'>'}
float32 -> · 'f32' : {'>'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'>'}
int32 -> · 'i32' : {'>'}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {'>'}
sampler_type -> · 'sampler_comparison' : {'>'}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {'>'}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {'>'}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {'>'}
texture_and_sampler_types -> · sampler_type : {'>'}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {'>'}
type_specifier -> · ident : {'>'}
type_specifier -> · type_specifier_without_ident : {'>'}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {'>'}
type_specifier_without_ident -> · 'bool' : {'>'}
type_specifier_without_ident -> · array_type_specifier : {'>'}
type_specifier_without_ident -> · float16 : {'>'}
type_specifier_without_ident -> · float32 : {'>'}
type_specifier_without_ident -> · int32 : {'>'}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {'>'}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {'>'}
type_specifier_without_ident -> · texture_and_sampler_types : {'>'}
type_specifier_without_ident -> · uint32 : {'>'}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {'>'}
uint32 -> · 'u32' : {'>'}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#321
type_specifier_without_ident -> 'atomic' less_than · type_specifier greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {'>'}
depth_texture_type -> · 'texture_depth_2d' : {'>'}
depth_texture_type -> · 'texture_depth_2d_array' : {'>'}
depth_texture_type -> · 'texture_depth_cube' : {'>'}
depth_texture_type -> · 'texture_depth_cube_array' : {'>'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'>'}
float16 -> · 'f16' : {'>'}
float32 -> · 'f32' : {'>'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'>'}
int32 -> · 'i32' : {'>'}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {'>'}
sampler_type -> · 'sampler_comparison' : {'>'}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {'>'}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {'>'}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {'>'}
texture_and_sampler_types -> · sampler_type : {'>'}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {'>'}
type_specifier -> · ident : {'>'}
type_specifier -> · type_specifier_without_ident : {'>'}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {'>'}
type_specifier_without_ident -> · 'bool' : {'>'}
type_specifier_without_ident -> · array_type_specifier : {'>'}
type_specifier_without_ident -> · float16 : {'>'}
type_specifier_without_ident -> · float32 : {'>'}
type_specifier_without_ident -> · int32 : {'>'}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {'>'}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {'>'}
type_specifier_without_ident -> · texture_and_sampler_types : {'>'}
type_specifier_without_ident -> · uint32 : {'>'}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {'>'}
uint32 -> · 'u32' : {'>'}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#322
type_specifier_without_ident -> pointer less_than · address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
address_space -> · 'function' : {','}
address_space -> · 'private' : {','}
address_space -> · 'storage' : {','}
address_space -> · 'uniform' : {','}
address_space -> · 'workgroup' : {','}

#323
array_type_specifier -> 'array' less_than · type_specifier array_type_specifier/0.3 greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {',' '>'}
depth_texture_type -> · 'texture_depth_2d' : {',' '>'}
depth_texture_type -> · 'texture_depth_2d_array' : {',' '>'}
depth_texture_type -> · 'texture_depth_cube' : {',' '>'}
depth_texture_type -> · 'texture_depth_cube_array' : {',' '>'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {',' '>'}
float16 -> · 'f16' : {',' '>'}
float32 -> · 'f32' : {',' '>'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' '>'}
int32 -> · 'i32' : {',' '>'}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {',' '>'}
sampler_type -> · 'sampler_comparison' : {',' '>'}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {',' '>'}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {',' '>'}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {',' '>'}
texture_and_sampler_types -> · sampler_type : {',' '>'}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {',' '>'}
type_specifier -> · ident : {',' '>'}
type_specifier -> · type_specifier_without_ident : {',' '>'}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {',' '>'}
type_specifier_without_ident -> · 'bool' : {',' '>'}
type_specifier_without_ident -> · array_type_specifier : {',' '>'}
type_specifier_without_ident -> · float16 : {',' '>'}
type_specifier_without_ident -> · float32 : {',' '>'}
type_specifier_without_ident -> · int32 : {',' '>'}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {',' '>'}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {',' '>'}
type_specifier_without_ident -> · texture_and_sampler_types : {',' '>'}
type_specifier_without_ident -> · uint32 : {',' '>'}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {',' '>'}
uint32 -> · 'u32' : {',' '>'}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#324
type_specifier_without_ident -> mat_prefix less_than · type_specifier greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {'>'}
depth_texture_type -> · 'texture_depth_2d' : {'>'}
depth_texture_type -> · 'texture_depth_2d_array' : {'>'}
depth_texture_type -> · 'texture_depth_cube' : {'>'}
depth_texture_type -> · 'texture_depth_cube_array' : {'>'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'>'}
float16 -> · 'f16' : {'>'}
float32 -> · 'f32' : {'>'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'>'}
int32 -> · 'i32' : {'>'}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {'>'}
sampler_type -> · 'sampler_comparison' : {'>'}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {'>'}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {'>'}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {'>'}
texture_and_sampler_types -> · sampler_type : {'>'}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {'>'}
type_specifier -> · ident : {'>'}
type_specifier -> · type_specifier_without_ident : {'>'}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {'>'}
type_specifier_without_ident -> · 'bool' : {'>'}
type_specifier_without_ident -> · array_type_specifier : {'>'}
type_specifier_without_ident -> · float16 : {'>'}
type_specifier_without_ident -> · float32 : {'>'}
type_specifier_without_ident -> · int32 : {'>'}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {'>'}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {'>'}
type_specifier_without_ident -> · texture_and_sampler_types : {'>'}
type_specifier_without_ident -> · uint32 : {'>'}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {'>'}
uint32 -> · 'u32' : {'>'}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#325
type_specifier_without_ident -> vec_prefix less_than · type_specifier greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {'>'}
depth_texture_type -> · 'texture_depth_2d' : {'>'}
depth_texture_type -> · 'texture_depth_2d_array' : {'>'}
depth_texture_type -> · 'texture_depth_cube' : {'>'}
depth_texture_type -> · 'texture_depth_cube_array' : {'>'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'>'}
float16 -> · 'f16' : {'>'}
float32 -> · 'f32' : {'>'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'>'}
int32 -> · 'i32' : {'>'}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {'>'}
sampler_type -> · 'sampler_comparison' : {'>'}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {'>'}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {'>'}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {'>'}
texture_and_sampler_types -> · sampler_type : {'>'}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {'>'}
type_specifier -> · ident : {'>'}
type_specifier -> · type_specifier_without_ident : {'>'}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {'>'}
type_specifier_without_ident -> · 'bool' : {'>'}
type_specifier_without_ident -> · array_type_specifier : {'>'}
type_specifier_without_ident -> · float16 : {'>'}
type_specifier_without_ident -> · float32 : {'>'}
type_specifier_without_ident -> · int32 : {'>'}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {'>'}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {'>'}
type_specifier_without_ident -> · texture_and_sampler_types : {'>'}
type_specifier_without_ident -> · uint32 : {'>'}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {'>'}
uint32 -> · 'u32' : {'>'}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#326
call_expr -> callable argument_expression_list · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#327
argument_expression_list -> paren_left · argument_expression_list/0.1 paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
argument_expression_list/0.1 -> · expression_comma_list : {')'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ','}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ','}
expression_comma_list -> · expression expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#328
primary_expression -> 'bitcast' less_than type_specifier · greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
greater_than -> · '>' : {'('}

#329
type_specifier -> ident · : {')' ',' ';' '=' '>' '{' '}'}

#330
type_specifier -> type_specifier_without_ident · : {')' ',' ';' '=' '>' '{' '}'}

#331
type_specifier_without_ident -> vec_prefix · less_than type_specifier greater_than : {')' ',' ';' '=' '>' '{' '}'}
less_than -> · '<' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#332
type_specifier_without_ident -> mat_prefix · less_than type_specifier greater_than : {')' ',' ';' '=' '>' '{' '}'}
less_than -> · '<' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#333
array_type_specifier -> 'array' · less_than type_specifier array_type_specifier/0.3 greater_than : {')' ',' ';' '=' '>' '{' '}'}
less_than -> · '<' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#334
paren_expression -> paren_left expression paren_right · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#335
paren_right -> ')' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '->' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '@' '[' ']' '^' '^=' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' '{' '|' '|=' '||'}

#336
compound_statement -> brace_left compound_statement/0.1 · brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'type' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' EndOfText}
brace_right -> · '}' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'type' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' EndOfText}

#337
compound_statement/0.1 -> compound_statement/0.1/0 · : {'}'}

#338
compound_statement/0.1/0 -> statement · compound_statement/0.1/0 : {'}'}
and -> · '&' : {'&' '(' '*'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
assignment_statement -> · underscore equal expression : {';'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
break_statement -> · 'break' : {';'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
compound_statement/0.1/0 -> · statement compound_statement/0.1/0 : {'}'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
core_lhs_expression -> · paren_left lhs_expression paren_right : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
decrement_statement -> · lhs_expression minus_minus : {';'}
for_statement -> · 'for' paren_left for_header paren_right compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
func_call_statement -> · func_call_statement/0.0 call_phrase : {';'}
func_call_statement/0.0 -> · func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
func_call_statement/0.0/0 -> · attribute func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
increment_statement -> · lhs_expression plus_plus : {';'}
lhs_expression -> · and lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · star lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
loop_statement -> · 'loop' brace_left loop_statement/0.2 loop_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
paren_left -> · '(' : {'&' '(' '*'}
return_statement -> · 'return' return_statement/0.1 : {';'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
star -> · '*' : {'&' '(' '*'}
statement -> · 'discard' semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · break_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · continue_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · func_call_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · return_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · static_assert_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · variable_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · variable_updating_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
static_assert_statement -> · 'static_assert' expression : {';'}
switch_statement -> · 'switch' expression brace_left switch_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
underscore -> · '_' : {'='}
variable_decl -> · 'var' variable_decl/0.1 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident equal expression : {';'}
variable_statement -> · 'let' optionally_typed_ident equal expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_statement -> · variable_decl equal expression : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#339
statement -> semicolon · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#340
statement -> return_statement · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#341
statement -> if_statement · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#342
statement -> switch_statement · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#343
statement -> loop_statement · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#344
statement -> for_statement · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#345
statement -> while_statement · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#346
statement -> func_call_statement · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#347
statement -> variable_statement · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#348
statement -> break_statement · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#349
statement -> continue_statement · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#350
statement -> 'discard' · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#351
statement -> variable_updating_statement · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#352
statement -> compound_statement · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#353
statement -> static_assert_statement · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#354
return_statement -> 'return' · return_statement/0.1 : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {';'}
bitwise_expression -> · binary_or_expression or unary_expression : {';'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression and_and relational_expression : {';'}
expression -> · short_circuit_or_expression or_or relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ';' '||'}
return_statement/0.1 -> · expression : {';'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#355
if_statement -> if_clause · if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
else_if_clause -> · 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
if_statement/0.1 -> · if_statement/0.1/0 : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
if_statement/0.1/0 -> · else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#356
switch_statement -> 'switch' · expression brace_left switch_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '<' '<=' '==' '>' '>=' '{' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '<' '<=' '==' '>' '>=' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {'{'}
bitwise_expression -> · binary_or_expression or unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression and_and relational_expression : {'{'}
expression -> · short_circuit_or_expression or_or relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '<' '<=' '==' '>' '>=' '{' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '<' '<=' '==' '>' '>=' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' '{' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}

#357
loop_statement -> 'loop' · brace_left loop_statement/0.2 loop_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#358
for_statement -> 'for' · paren_left for_header paren_right compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
paren_left -> · '(' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'const' 'f16' 'f32' 'i32' 'let' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#359
while_statement -> 'while' · expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '<' '<=' '==' '>' '>=' '{' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '<' '<=' '==' '>' '>=' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {'{'}
bitwise_expression -> · binary_or_expression or unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression and_and relational_expression : {'{'}
expression -> · short_circuit_or_expression or_or relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '<' '<=' '==' '>' '>=' '{' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '<' '<=' '==' '>' '>=' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' '{' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}

#360
func_call_statement -> func_call_statement/0.0 · call_phrase : {')' ';'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {'('}
call_phrase -> · callable argument_expression_list : {')' ';'}
callable -> · 'array' : {'('}
callable -> · ident : {'('}
callable -> · mat_prefix : {'('}
callable -> · type_specifier_without_ident : {'('}
callable -> · vec_prefix : {'('}
depth_texture_type -> · 'texture_depth_2d' : {'('}
depth_texture_type -> · 'texture_depth_2d_array' : {'('}
depth_texture_type -> · 'texture_depth_cube' : {'('}
depth_texture_type -> · 'texture_depth_cube_array' : {'('}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'('}
float16 -> · 'f16' : {'('}
float32 -> · 'f32' : {'('}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'('}
int32 -> · 'i32' : {'('}
mat_prefix -> · 'mat2x2' : {'(' '<'}
mat_prefix -> · 'mat2x3' : {'(' '<'}
mat_prefix -> · 'mat2x4' : {'(' '<'}
mat_prefix -> · 'mat3x2' : {'(' '<'}
mat_prefix -> · 'mat3x3' : {'(' '<'}
mat_prefix -> · 'mat3x4' : {'(' '<'}
mat_prefix -> · 'mat4x2' : {'(' '<'}
mat_prefix -> · 'mat4x3' : {'(' '<'}
mat_prefix -> · 'mat4x4' : {'(' '<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {'('}
sampler_type -> · 'sampler_comparison' : {'('}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {'('}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {'('}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {'('}
texture_and_sampler_types -> · sampler_type : {'('}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {'('}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {'('}
type_specifier_without_ident -> · 'bool' : {'('}
type_specifier_without_ident -> · array_type_specifier : {'('}
type_specifier_without_ident -> · float16 : {'('}
type_specifier_without_ident -> · float32 : {'('}
type_specifier_without_ident -> · int32 : {'('}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {'('}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {'('}
type_specifier_without_ident -> · texture_and_sampler_types : {'('}
type_specifier_without_ident -> · uint32 : {'('}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {'('}
uint32 -> · 'u32' : {'('}
vec_prefix -> · 'vec2' : {'(' '<'}
vec_prefix -> · 'vec3' : {'(' '<'}
vec_prefix -> · 'vec4' : {'(' '<'}

#361
variable_statement -> variable_decl · : {';'}
variable_statement -> variable_decl · equal expression : {';'}
equal -> · '=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#362
variable_statement -> 'let' · optionally_typed_ident equal expression : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#363
variable_statement -> 'const' · optionally_typed_ident equal expression : {';'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':' '='}
optionally_typed_ident -> · ident optionally_typed_ident/0.1 : {'='}

#364
break_statement -> 'break' · : {';'}

#365
continue_statement -> 'continue' · : {';'}

#366
variable_updating_statement -> assignment_statement · : {')' ';'}

#367
variable_updating_statement -> increment_statement · : {')' ';'}

#368
variable_updating_statement -> decrement_statement · : {')' ';'}

#369
if_clause -> 'if' · expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '<' '<=' '==' '>' '>=' '{' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '<' '<=' '==' '>' '>=' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {'{'}
bitwise_expression -> · binary_or_expression or unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression and_and relational_expression : {'{'}
expression -> · short_circuit_or_expression or_or relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '<' '<=' '==' '>' '>=' '{' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '<' '<=' '==' '>' '>=' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' '{' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}

#370
func_call_statement/0.0 -> func_call_statement/0.0/0 · : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#371
assignment_statement -> lhs_expression · assignment_statement/0.1 expression : {')' ';'}
decrement_statement -> lhs_expression · minus_minus : {')' ';'}
increment_statement -> lhs_expression · plus_plus : {')' ';'}
and_equal -> · '&=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
assignment_statement/0.1 -> · compound_assignment_operator : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
assignment_statement/0.1 -> · equal : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
compound_assignment_operator -> · and_equal : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
compound_assignment_operator -> · division_equal : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
compound_assignment_operator -> · minus_equal : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
compound_assignment_operator -> · modulo_equal : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
compound_assignment_operator -> · or_equal : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
compound_assignment_operator -> · plus_equal : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
compound_assignment_operator -> · shift_left_equal : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
compound_assignment_operator -> · shift_right_equal : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
compound_assignment_operator -> · times_equal : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
compound_assignment_operator -> · xor_equal : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
division_equal -> · '/=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
equal -> · '=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
minus_equal -> · '-=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
minus_minus -> · '--' : {')' ';'}
modulo_equal -> · '%=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
or_equal -> · '|=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
plus_equal -> · '+=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
plus_plus -> · '++' : {')' ';'}
shift_left_equal -> · '<<=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
shift_right_equal -> · '>>=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
times_equal -> · '*=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
xor_equal -> · '^=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#372
assignment_statement -> underscore · equal expression : {')' ';'}
equal -> · '=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#373
func_call_statement/0.0/0 -> attribute · func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
func_call_statement/0.0/0 -> · attribute func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#374
lhs_expression -> core_lhs_expression · lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
bracket_left -> · '[' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
component_or_swizzle_specifier -> · bracket_left expression bracket_right component_or_swizzle_specifier/0.3 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
component_or_swizzle_specifier -> · period member_ident component_or_swizzle_specifier/1.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
component_or_swizzle_specifier -> · period swizzle_name component_or_swizzle_specifier/2.2 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression/0.1 -> · component_or_swizzle_specifier : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
period -> · '.' : {}

#375
lhs_expression -> star · lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
and -> · '&' : {'&' '(' '*'}
core_lhs_expression -> · ident : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
core_lhs_expression -> · paren_left lhs_expression paren_right : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
lhs_expression -> · and lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · star lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
paren_left -> · '(' : {'&' '(' '*'}
star -> · '*' : {'&' '(' '*'}

#376
lhs_expression -> and · lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
and -> · '&' : {'&' '(' '*'}
core_lhs_expression -> · ident : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
core_lhs_expression -> · paren_left lhs_expression paren_right : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
lhs_expression -> · and lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · star lhs_expression : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
paren_left -> · '(' : {'&' '(' '*'}
star -> · '*' : {'&' '(' '*'}

#377
underscore -> '_' · : {'='}

#378
core_lhs_expression -> ident · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}

#379
core_lhs_expression -> paren_left · lhs_expression paren_right : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
and -> · '&' : {'&' '(' '*'}
core_lhs_expression -> · ident : {')' '.' '['}
core_lhs_expression -> · paren_left lhs_expression paren_right : {')' '.' '['}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' '.' '['}
lhs_expression -> · and lhs_expression : {')'}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {')'}
lhs_expression -> · star lhs_expression : {')'}
paren_left -> · '(' : {'&' '(' '*'}
star -> · '*' : {'&' '(' '*'}

#380
function_header -> 'fn' ident paren_left · function_header/0.3 paren_right function_header/0.5 : {'{'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
function_header/0.3 -> · param_list : {')'}
param -> · param/0.0 ident colon type_specifier : {')' ','}
param/0.0 -> · param/0.0/0 : {}
param/0.0/0 -> · attribute param/0.0/0 : {}
param_list -> · param param_list/0.1 param_list/0.2 : {')'}

#381
struct_body_decl -> brace_left struct_member · struct_body_decl/0.2 struct_body_decl/0.3 brace_right : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
comma -> · ',' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_body_decl/0.2 -> · struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0 -> · struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> · comma struct_member : {',' '}'}

#382
struct_member -> struct_member/0.0 · member_ident colon type_specifier : {',' '}'}
member_ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#383
struct_member/0.0 -> struct_member/0.0/0 · : {}

#384
struct_member/0.0/0 -> attribute · struct_member/0.0/0 : {}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {}

#385
type_alias_decl -> 'type' ident equal type_specifier · : {';'}

#386
global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 · : {';'}

#387
global_constant_decl/1.3 -> equal · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {';'}
bitwise_expression -> · binary_or_expression or unary_expression : {';'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression and_and relational_expression : {';'}
expression -> · short_circuit_or_expression or_or relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#388
global_constant_decl -> 'const' optionally_typed_ident equal expression · : {';'}

#389
optionally_typed_ident/0.1 -> colon type_specifier · : {';' '='}

#390
global_variable_decl/0.2 -> equal expression · : {';'}

#391
variable_qualifier -> less_than address_space · variable_qualifier/0.2 greater_than : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
comma -> · ',' : {}
variable_qualifier/0.2 -> · comma access_mode : {'>'}

#392
address_space -> 'function' · : {',' '>'}

#393
address_space -> 'private' · : {',' '>'}

#394
address_space -> 'workgroup' · : {',' '>'}

#395
address_space -> 'uniform' · : {',' '>'}

#396
address_space -> 'storage' · : {',' '>'}

#397
variable_decl -> 'var' variable_decl/0.1 optionally_typed_ident · : {';' '='}

#398
diagnostic_control -> paren_left severity_control_name comma diagnostic_rule_name · attrib_end : {';' '@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {';' '@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {')'}

#399
diagnostic_rule_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ · : {')' ','}

#400
diagnostic_control -> paren_left severity_control_name comma diagnostic_rule_name attrib_end · : {';' '@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#401
attrib_end -> attrib_end/0.0 · paren_right : {';' '@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
paren_right -> · ')' : {';' '@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#402
attrib_end/0.0 -> comma · : {')'}

#403
variable_qualifier -> less_than address_space variable_qualifier/0.2 · greater_than : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
greater_than -> · '>' : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#404
variable_qualifier/0.2 -> comma · access_mode : {'>'}
access_mode -> · 'read' : {'>'}
access_mode -> · 'read_write' : {'>'}
access_mode -> · 'write' : {'>'}

#405
global_constant_decl/1.3 -> equal expression · : {';'}

#406
struct_member/0.0/0 -> attribute struct_member/0.0/0 · : {}

#407
struct_member -> struct_member/0.0 member_ident · colon type_specifier : {',' '}'}
colon -> · ':' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#408
struct_body_decl -> brace_left struct_member struct_body_decl/0.2 · struct_body_decl/0.3 brace_right : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
comma -> · ',' : {'}'}
struct_body_decl/0.3 -> · comma : {'}'}

#409
struct_body_decl/0.2 -> struct_body_decl/0.2/0 · : {',' '}'}

#410
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 · struct_body_decl/0.2/0 : {',' '}'}
comma -> · ',' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
struct_body_decl/0.2/0 -> · struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 : {',' '}'}
struct_body_decl/0.2/0/0.0 -> · comma struct_member : {',' '}'}

#411
struct_body_decl/0.2/0/0.0 -> comma · struct_member : {',' '}'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
struct_member -> · struct_member/0.0 member_ident colon type_specifier : {',' '}'}
struct_member/0.0 -> · struct_member/0.0/0 : {}
struct_member/0.0/0 -> · attribute struct_member/0.0/0 : {}

#412
function_header -> 'fn' ident paren_left function_header/0.3 · paren_right function_header/0.5 : {'{'}
paren_right -> · ')' : {'->' '{'}

#413
function_header/0.3 -> param_list · : {')'}

#414
param_list -> param · param_list/0.1 param_list/0.2 : {')'}
comma -> · ',' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list/0.1 -> · param_list/0.1/0 : {')' ','}
param_list/0.1/0 -> · param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> · comma param : {')' ','}

#415
param -> param/0.0 · ident colon type_specifier : {')' ','}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {':'}

#416
param/0.0 -> param/0.0/0 · : {}

#417
param/0.0/0 -> attribute · param/0.0/0 : {}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
param/0.0/0 -> · attribute param/0.0/0 : {}

#418
core_lhs_expression -> paren_left lhs_expression · paren_right : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
paren_right -> · ')' : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}

#419
lhs_expression -> and lhs_expression · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}

#420
lhs_expression -> star lhs_expression · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}

#421
lhs_expression -> core_lhs_expression lhs_expression/0.1 · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}

#422
lhs_expression/0.1 -> component_or_swizzle_specifier · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}

#423
func_call_statement/0.0/0 -> attribute func_call_statement/0.0/0 · : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#424
assignment_statement -> underscore equal · expression : {')' ';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ';'}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ';'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ';'}
expression -> · relational_expression : {')' ';'}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ';'}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ';' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#425
assignment_statement -> lhs_expression assignment_statement/0.1 · expression : {')' ';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ';'}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ';'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ';'}
expression -> · relational_expression : {')' ';'}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ';'}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ';' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ';' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#426
increment_statement -> lhs_expression plus_plus · : {')' ';'}

#427
decrement_statement -> lhs_expression minus_minus · : {')' ';'}

#428
assignment_statement/0.1 -> equal · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#429
assignment_statement/0.1 -> compound_assignment_operator · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#430
plus_plus -> '++' · : {')' ';'}

#431
minus_minus -> '--' · : {')' ';'}

#432
compound_assignment_operator -> plus_equal · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#433
compound_assignment_operator -> minus_equal · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#434
compound_assignment_operator -> times_equal · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#435
compound_assignment_operator -> division_equal · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#436
compound_assignment_operator -> modulo_equal · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#437
compound_assignment_operator -> and_equal · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#438
compound_assignment_operator -> or_equal · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#439
compound_assignment_operator -> xor_equal · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#440
compound_assignment_operator -> shift_right_equal · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#441
compound_assignment_operator -> shift_left_equal · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#442
plus_equal -> '+=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#443
minus_equal -> '-=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#444
times_equal -> '*=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#445
division_equal -> '/=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#446
modulo_equal -> '%=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#447
and_equal -> '&=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#448
or_equal -> '|=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#449
xor_equal -> '^=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#450
shift_right_equal -> '>>=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#451
shift_left_equal -> '<<=' · : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#452
if_clause -> 'if' expression · compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#453
variable_statement -> 'const' optionally_typed_ident · equal expression : {';'}
equal -> · '=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#454
variable_statement -> 'let' optionally_typed_ident · equal expression : {';'}
equal -> · '=' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#455
variable_statement -> variable_decl equal · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {';'}
bitwise_expression -> · binary_or_expression or unary_expression : {';'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression and_and relational_expression : {';'}
expression -> · short_circuit_or_expression or_or relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#456
func_call_statement -> func_call_statement/0.0 call_phrase · : {')' ';'}

#457
call_phrase -> callable · argument_expression_list : {')' ';'}
argument_expression_list -> · paren_left argument_expression_list/0.1 paren_right : {')' ';'}
paren_left -> · '(' : {'!' '&' '(' ')' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#458
while_statement -> 'while' expression · compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#459
for_statement -> 'for' paren_left · for_header paren_right compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
and -> · '&' : {'&' '(' '*'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
assignment_statement -> · underscore equal expression : {';'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
core_lhs_expression -> · paren_left lhs_expression paren_right : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
decrement_statement -> · lhs_expression minus_minus : {';'}
for_header -> · for_header/0.0 semicolon for_header/0.2 semicolon for_header/0.4 : {')'}
for_header/0.0 -> · for_init : {';'}
for_init -> · func_call_statement : {';'}
for_init -> · variable_statement : {';'}
for_init -> · variable_updating_statement : {';'}
func_call_statement -> · func_call_statement/0.0 call_phrase : {';'}
func_call_statement/0.0 -> · func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
func_call_statement/0.0/0 -> · attribute func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
increment_statement -> · lhs_expression plus_plus : {';'}
lhs_expression -> · and lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · star lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
paren_left -> · '(' : {'&' '(' '*'}
star -> · '*' : {'&' '(' '*'}
underscore -> · '_' : {'='}
variable_decl -> · 'var' variable_decl/0.1 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident equal expression : {';'}
variable_statement -> · 'let' optionally_typed_ident equal expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_statement -> · variable_decl equal expression : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}

#460
loop_statement -> 'loop' brace_left · loop_statement/0.2 loop_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
and -> · '&' : {'&' '(' '*'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
assignment_statement -> · underscore equal expression : {';'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
break_statement -> · 'break' : {';'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
core_lhs_expression -> · paren_left lhs_expression paren_right : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
decrement_statement -> · lhs_expression minus_minus : {';'}
for_statement -> · 'for' paren_left for_header paren_right compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
func_call_statement -> · func_call_statement/0.0 call_phrase : {';'}
func_call_statement/0.0 -> · func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
func_call_statement/0.0/0 -> · attribute func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
increment_statement -> · lhs_expression plus_plus : {';'}
lhs_expression -> · and lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · star lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
loop_statement -> · 'loop' brace_left loop_statement/0.2 loop_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
loop_statement/0.2 -> · loop_statement/0.2/0 : {'continuing' '}'}
loop_statement/0.2/0 -> · statement loop_statement/0.2/0 : {'continuing' '}'}
paren_left -> · '(' : {'&' '(' '*'}
return_statement -> · 'return' return_statement/0.1 : {';'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
star -> · '*' : {'&' '(' '*'}
statement -> · 'discard' semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · break_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · continue_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · func_call_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · return_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · static_assert_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · variable_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · variable_updating_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
static_assert_statement -> · 'static_assert' expression : {';'}
switch_statement -> · 'switch' expression brace_left switch_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
underscore -> · '_' : {'='}
variable_decl -> · 'var' variable_decl/0.1 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident equal expression : {';'}
variable_statement -> · 'let' optionally_typed_ident equal expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_statement -> · variable_decl equal expression : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#461
switch_statement -> 'switch' expression · brace_left switch_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
brace_left -> · '{' : {'case' 'default' '}'}

#462
if_statement -> if_clause if_statement/0.1 · if_statement/0.2 : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
else_clause -> · 'else' compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
if_statement/0.2 -> · else_clause : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#463
if_statement/0.1 -> if_statement/0.1/0 · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#464
if_statement/0.1/0 -> else_if_clause · if_statement/0.1/0 : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
else_if_clause -> · 'else' 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
if_statement/0.1/0 -> · else_if_clause if_statement/0.1/0 : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#465
else_if_clause -> 'else' · 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#466
return_statement -> 'return' return_statement/0.1 · : {';'}

#467
return_statement/0.1 -> expression · : {';'}

#468
statement -> static_assert_statement semicolon · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#469
statement -> variable_updating_statement semicolon · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#470
statement -> 'discard' semicolon · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#471
statement -> continue_statement semicolon · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#472
statement -> break_statement semicolon · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#473
statement -> variable_statement semicolon · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#474
statement -> func_call_statement semicolon · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#475
statement -> return_statement semicolon · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#476
compound_statement/0.1/0 -> statement compound_statement/0.1/0 · : {'}'}

#477
compound_statement -> brace_left compound_statement/0.1 brace_right · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'type' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' EndOfText}

#478
brace_right -> '}' · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'case' 'const' 'continue' 'continuing' 'default' 'discard' 'else' 'f16' 'f32' 'fn' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'struct' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'type' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}' EndOfText}

#479
primary_expression -> 'bitcast' less_than type_specifier greater_than · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#480
argument_expression_list -> paren_left argument_expression_list/0.1 · paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}
paren_right -> · ')' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#481
argument_expression_list/0.1 -> expression_comma_list · : {')'}

#482
expression_comma_list -> expression · expression_comma_list/0.1 expression_comma_list/0.2 : {')'}
comma -> · ',' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
expression_comma_list/0.1 -> · expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0 -> · expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> · comma expression : {')' ','}

#483
type_specifier_without_ident -> vec_prefix less_than type_specifier · greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
greater_than -> · '>' : {'(' ')' ',' ';' '=' '>' '{' '}'}

#484
type_specifier_without_ident -> mat_prefix less_than type_specifier · greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
greater_than -> · '>' : {'(' ')' ',' ';' '=' '>' '{' '}'}

#485
array_type_specifier -> 'array' less_than type_specifier · array_type_specifier/0.3 greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
array_type_specifier/0.3 -> · comma element_count_expression : {'>'}
comma -> · ',' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#486
type_specifier_without_ident -> pointer less_than address_space · comma type_specifier type_specifier_without_ident/7.5 greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
comma -> · ',' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#487
type_specifier_without_ident -> 'atomic' less_than type_specifier · greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
greater_than -> · '>' : {'(' ')' ',' ';' '=' '>' '{' '}'}

#488
texture_and_sampler_types -> sampled_texture_type less_than type_specifier · greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
greater_than -> · '>' : {'(' ')' ',' ';' '=' '>' '{' '}'}

#489
texture_and_sampler_types -> multisampled_texture_type less_than type_specifier · greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
greater_than -> · '>' : {'(' ')' ',' ';' '=' '>' '{' '}'}

#490
texture_and_sampler_types -> storage_texture_type less_than texel_format · comma access_mode greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
comma -> · ',' : {}

#491
texel_format -> 'rgba8unorm' · : {','}

#492
texel_format -> 'rgba8snorm' · : {','}

#493
texel_format -> 'rgba8uint' · : {','}

#494
texel_format -> 'rgba8sint' · : {','}

#495
texel_format -> 'rgba16uint' · : {','}

#496
texel_format -> 'rgba16sint' · : {','}

#497
texel_format -> 'rgba16float' · : {','}

#498
texel_format -> 'r32uint' · : {','}

#499
texel_format -> 'r32sint' · : {','}

#500
texel_format -> 'r32float' · : {','}

#501
texel_format -> 'rg32uint' · : {','}

#502
texel_format -> 'rg32sint' · : {','}

#503
texel_format -> 'rg32float' · : {','}

#504
texel_format -> 'rgba32uint' · : {','}

#505
texel_format -> 'rgba32sint' · : {','}

#506
texel_format -> 'rgba32float' · : {','}

#507
component_or_swizzle_specifier -> bracket_left expression bracket_right · component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
bracket_left -> · '[' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
component_or_swizzle_specifier -> · bracket_left expression bracket_right component_or_swizzle_specifier/0.3 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
component_or_swizzle_specifier -> · period member_ident component_or_swizzle_specifier/1.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
component_or_swizzle_specifier -> · period swizzle_name component_or_swizzle_specifier/2.2 : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
component_or_swizzle_specifier/0.3 -> · component_or_swizzle_specifier : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}
period -> · '.' : {}

#508
bracket_right -> ']' · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '.' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' '[' ']' '^' '^=' '{' '|' '|=' '||'}

#509
component_or_swizzle_specifier -> period swizzle_name component_or_swizzle_specifier/2.2 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}

#510
component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}

#511
component_or_swizzle_specifier -> period member_ident component_or_swizzle_specifier/1.2 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}

#512
component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}

#513
attribute -> attr 'workgroup_size' paren_left expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#514
attrib_end/0.0 -> comma · : {')'}
attribute -> attr 'workgroup_size' paren_left expression comma · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr 'workgroup_size' paren_left expression comma · expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ','}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#515
attribute -> attr 'size' paren_left expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#516
attribute -> attr 'location' paren_left expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#517
attribute -> attr 'interpolate' paren_left interpolation_type_name attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#518
attrib_end/0.0 -> comma · : {')'}
attribute -> attr 'interpolate' paren_left interpolation_type_name comma · interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
interpolation_sample_name -> · 'center' : {')' ','}
interpolation_sample_name -> · 'centroid' : {')' ','}
interpolation_sample_name -> · 'sample' : {')' ','}

#519
attribute -> attr 'id' paren_left expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#520
attribute -> attr 'group' paren_left expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#521
attribute -> attr 'builtin' paren_left builtin_value_name attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#522
attribute -> attr 'binding' paren_left expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#523
attribute -> attr 'align' paren_left expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#524
attribute -> attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {')'}

#525
interpolation_sample_name -> 'center' · : {')' ','}

#526
interpolation_sample_name -> 'centroid' · : {')' ','}

#527
interpolation_sample_name -> 'sample' · : {')' ','}

#528
attribute -> attr 'workgroup_size' paren_left expression comma expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attribute -> attr 'workgroup_size' paren_left expression comma expression · comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {'!' '&' '(' ')' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#529
component_or_swizzle_specifier -> bracket_left expression bracket_right component_or_swizzle_specifier/0.3 · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}

#530
component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier · : {'!=' '%' '%=' '&&' '&' '&=' ')' '*' '*=' '+' '++' '+=' ',' '-' '--' '-=' '/' '/=' ':' ';' '<' '<<' '<<=' '<=' '=' '==' '>' '>=' '>>' '>>=' ']' '^' '^=' '{' '|' '|=' '||'}

#531
texture_and_sampler_types -> storage_texture_type less_than texel_format comma · access_mode greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
access_mode -> · 'read' : {'>'}
access_mode -> · 'read_write' : {'>'}
access_mode -> · 'write' : {'>'}

#532
texture_and_sampler_types -> multisampled_texture_type less_than type_specifier greater_than · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#533
texture_and_sampler_types -> sampled_texture_type less_than type_specifier greater_than · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#534
type_specifier_without_ident -> 'atomic' less_than type_specifier greater_than · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#535
type_specifier_without_ident -> pointer less_than address_space comma · type_specifier type_specifier_without_ident/7.5 greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {',' '>'}
depth_texture_type -> · 'texture_depth_2d' : {',' '>'}
depth_texture_type -> · 'texture_depth_2d_array' : {',' '>'}
depth_texture_type -> · 'texture_depth_cube' : {',' '>'}
depth_texture_type -> · 'texture_depth_cube_array' : {',' '>'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {',' '>'}
float16 -> · 'f16' : {',' '>'}
float32 -> · 'f32' : {',' '>'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' '>'}
int32 -> · 'i32' : {',' '>'}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {',' '>'}
sampler_type -> · 'sampler_comparison' : {',' '>'}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {',' '>'}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {',' '>'}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {',' '>'}
texture_and_sampler_types -> · sampler_type : {',' '>'}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {',' '>'}
type_specifier -> · ident : {',' '>'}
type_specifier -> · type_specifier_without_ident : {',' '>'}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {',' '>'}
type_specifier_without_ident -> · 'bool' : {',' '>'}
type_specifier_without_ident -> · array_type_specifier : {',' '>'}
type_specifier_without_ident -> · float16 : {',' '>'}
type_specifier_without_ident -> · float32 : {',' '>'}
type_specifier_without_ident -> · int32 : {',' '>'}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {',' '>'}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {',' '>'}
type_specifier_without_ident -> · texture_and_sampler_types : {',' '>'}
type_specifier_without_ident -> · uint32 : {',' '>'}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {',' '>'}
uint32 -> · 'u32' : {',' '>'}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#536
array_type_specifier -> 'array' less_than type_specifier array_type_specifier/0.3 · greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
greater_than -> · '>' : {'(' ')' ',' ';' '=' '>' '{' '}'}

#537
array_type_specifier/0.3 -> comma · element_count_expression : {'>'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'+' '-' '>'}
additive_expression -> · multiplicative_expression : {'+' '-' '>'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {'>'}
bitwise_expression -> · binary_or_expression or unary_expression : {'>'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {'>'}
bool_literal -> · 'false' : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
bool_literal -> · 'true' : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
decimal_float_literal -> · /0[fh]/ : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
decimal_int_literal -> · /0[iu]?/ : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
element_count_expression -> · additive_expression : {'>'}
element_count_expression -> · bitwise_expression : {'>'}
float_literal -> · decimal_float_literal : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
float_literal -> · hex_float_literal : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
int_literal -> · decimal_int_literal : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
int_literal -> · hex_int_literal : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
literal -> · bool_literal : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
literal -> · float_literal : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
literal -> · int_literal : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'%' '*' '+' '-' '/' '>'}
multiplicative_expression -> · unary_expression : {'%' '*' '+' '-' '/' '>'}
paren_expression -> · paren_left expression paren_right : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
primary_expression -> · ident : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
primary_expression -> · literal : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
primary_expression -> · paren_expression : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
primary_expression -> · primary_expression/1.0 call_expr : {'%' '&' '*' '+' '-' '.' '/' '>' '[' '^' '|'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
singular_expression -> · primary_expression singular_expression/0.1 : {'%' '&' '*' '+' '-' '/' '>' '^' '|'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'%' '&' '*' '+' '-' '/' '>' '^' '|'}
unary_expression -> · bang unary_expression : {'%' '&' '*' '+' '-' '/' '>' '^' '|'}
unary_expression -> · minus unary_expression : {'%' '&' '*' '+' '-' '/' '>' '^' '|'}
unary_expression -> · singular_expression : {'%' '&' '*' '+' '-' '/' '>' '^' '|'}
unary_expression -> · star unary_expression : {'%' '&' '*' '+' '-' '/' '>' '^' '|'}
unary_expression -> · tilde unary_expression : {'%' '&' '*' '+' '-' '/' '>' '^' '|'}

#538
type_specifier_without_ident -> mat_prefix less_than type_specifier greater_than · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#539
type_specifier_without_ident -> vec_prefix less_than type_specifier greater_than · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#540
expression_comma_list -> expression expression_comma_list/0.1 · expression_comma_list/0.2 : {')'}
comma -> · ',' : {')'}
expression_comma_list/0.2 -> · comma : {')'}

#541
expression_comma_list/0.1 -> expression_comma_list/0.1/0 · : {')' ','}

#542
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 · expression_comma_list/0.1/0 : {')' ','}
comma -> · ',' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
expression_comma_list/0.1/0 -> · expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 : {')' ','}
expression_comma_list/0.1/0/0.0 -> · comma expression : {')' ','}

#543
expression_comma_list/0.1/0/0.0 -> comma · expression : {')' ','}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ','}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#544
argument_expression_list -> paren_left argument_expression_list/0.1 paren_right · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#545
primary_expression -> 'bitcast' less_than type_specifier greater_than paren_expression · : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' ':' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' ']' '^' '{' '|' '||'}

#546
else_if_clause -> 'else' 'if' · expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' '<' '<=' '==' '>' '>=' '{' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' '<' '<=' '==' '>' '>=' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {'{'}
bitwise_expression -> · binary_or_expression or unary_expression : {'{'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {'{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
expression -> · bitwise_expression : {'{'}
expression -> · relational_expression : {'{'}
expression -> · short_circuit_and_expression and_and relational_expression : {'{'}
expression -> · short_circuit_or_expression or_or relational_expression : {'{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '<' '<=' '==' '>' '>=' '{' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' '<' '<=' '==' '>' '>=' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' '{' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' '<' '<=' '==' '>' '>=' '{' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}

#547
if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#548
if_statement -> if_clause if_statement/0.1 if_statement/0.2 · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#549
if_statement/0.2 -> else_clause · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#550
else_clause -> 'else' · compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#551
switch_statement -> 'switch' expression brace_left · switch_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
case_clause -> · 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> · 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> · case_clause : {'case' 'default' '}'}
switch_body -> · default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3 -> · switch_statement/0.3/0 : {'}'}
switch_statement/0.3/0 -> · switch_body switch_statement/0.3/0 : {'}'}

#552
loop_statement -> 'loop' brace_left loop_statement/0.2 · loop_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
continuing_statement -> · 'continuing' continuing_compound_statement : {'}'}
loop_statement/0.3 -> · continuing_statement : {'}'}

#553
loop_statement/0.2 -> loop_statement/0.2/0 · : {'continuing' '}'}

#554
loop_statement/0.2/0 -> statement · loop_statement/0.2/0 : {'continuing' '}'}
and -> · '&' : {'&' '(' '*'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
assignment_statement -> · underscore equal expression : {';'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
break_statement -> · 'break' : {';'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
continue_statement -> · 'continue' : {';'}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
core_lhs_expression -> · paren_left lhs_expression paren_right : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
decrement_statement -> · lhs_expression minus_minus : {';'}
for_statement -> · 'for' paren_left for_header paren_right compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
func_call_statement -> · func_call_statement/0.0 call_phrase : {';'}
func_call_statement/0.0 -> · func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
func_call_statement/0.0/0 -> · attribute func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
increment_statement -> · lhs_expression plus_plus : {';'}
lhs_expression -> · and lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · star lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
loop_statement -> · 'loop' brace_left loop_statement/0.2 loop_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
loop_statement/0.2/0 -> · statement loop_statement/0.2/0 : {'continuing' '}'}
paren_left -> · '(' : {'&' '(' '*'}
return_statement -> · 'return' return_statement/0.1 : {';'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
star -> · '*' : {'&' '(' '*'}
statement -> · 'discard' semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · break_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · continue_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · func_call_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · return_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · static_assert_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · variable_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · variable_updating_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
static_assert_statement -> · 'static_assert' expression : {';'}
switch_statement -> · 'switch' expression brace_left switch_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
underscore -> · '_' : {'='}
variable_decl -> · 'var' variable_decl/0.1 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident equal expression : {';'}
variable_statement -> · 'let' optionally_typed_ident equal expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_statement -> · variable_decl equal expression : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#555
for_statement -> 'for' paren_left for_header · paren_right compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
paren_right -> · ')' : {'{'}

#556
for_header -> for_header/0.0 · semicolon for_header/0.2 semicolon for_header/0.4 : {')'}
semicolon -> · ';' : {'!' '&' '(' '*' '-' ';' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#557
for_header/0.0 -> for_init · : {';'}

#558
for_init -> variable_statement · : {';'}

#559
for_init -> variable_updating_statement · : {';'}

#560
for_init -> func_call_statement · : {';'}

#561
while_statement -> 'while' expression compound_statement · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#562
call_phrase -> callable argument_expression_list · : {')' ';'}

#563
variable_statement -> variable_decl equal expression · : {';'}

#564
variable_statement -> 'let' optionally_typed_ident equal · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {';'}
bitwise_expression -> · binary_or_expression or unary_expression : {';'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression and_and relational_expression : {';'}
expression -> · short_circuit_or_expression or_or relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#565
variable_statement -> 'const' optionally_typed_ident equal · expression : {';'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {';'}
bitwise_expression -> · binary_or_expression or unary_expression : {';'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression and_and relational_expression : {';'}
expression -> · short_circuit_or_expression or_or relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#566
if_clause -> 'if' expression compound_statement · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#567
assignment_statement -> lhs_expression assignment_statement/0.1 expression · : {')' ';'}

#568
assignment_statement -> underscore equal expression · : {')' ';'}

#569
core_lhs_expression -> paren_left lhs_expression paren_right · : {'%=' '&=' ')' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}

#570
param/0.0/0 -> attribute param/0.0/0 · : {}

#571
param -> param/0.0 ident · colon type_specifier : {')' ','}
colon -> · ':' : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#572
param_list -> param param_list/0.1 · param_list/0.2 : {')'}
comma -> · ',' : {')'}
param_list/0.2 -> · comma : {')'}

#573
param_list/0.1 -> param_list/0.1/0 · : {')' ','}

#574
param_list/0.1/0 -> param_list/0.1/0/0.0 · param_list/0.1/0 : {')' ','}
comma -> · ',' : {'@' /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}
param_list/0.1/0 -> · param_list/0.1/0/0.0 param_list/0.1/0 : {')' ','}
param_list/0.1/0/0.0 -> · comma param : {')' ','}

#575
param_list/0.1/0/0.0 -> comma · param : {')' ','}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
param -> · param/0.0 ident colon type_specifier : {')' ','}
param/0.0 -> · param/0.0/0 : {}
param/0.0/0 -> · attribute param/0.0/0 : {}

#576
function_header -> 'fn' ident paren_left function_header/0.3 paren_right · function_header/0.5 : {'{'}
arrow -> · '->' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
function_header/0.5 -> · arrow function_header/0.5/0.1 type_specifier : {'{'}

#577
struct_body_decl/0.2/0/0.0 -> comma struct_member · : {',' '}'}

#578
struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 · : {',' '}'}

#579
struct_body_decl -> brace_left struct_member struct_body_decl/0.2 struct_body_decl/0.3 · brace_right : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}
brace_right -> · '}' : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#580
struct_body_decl/0.3 -> comma · : {'}'}

#581
struct_member -> struct_member/0.0 member_ident colon · type_specifier : {',' '}'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {',' '}'}
depth_texture_type -> · 'texture_depth_2d' : {',' '}'}
depth_texture_type -> · 'texture_depth_2d_array' : {',' '}'}
depth_texture_type -> · 'texture_depth_cube' : {',' '}'}
depth_texture_type -> · 'texture_depth_cube_array' : {',' '}'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {',' '}'}
float16 -> · 'f16' : {',' '}'}
float32 -> · 'f32' : {',' '}'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {',' '}'}
int32 -> · 'i32' : {',' '}'}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {',' '}'}
sampler_type -> · 'sampler_comparison' : {',' '}'}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {',' '}'}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {',' '}'}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {',' '}'}
texture_and_sampler_types -> · sampler_type : {',' '}'}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {',' '}'}
type_specifier -> · ident : {',' '}'}
type_specifier -> · type_specifier_without_ident : {',' '}'}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {',' '}'}
type_specifier_without_ident -> · 'bool' : {',' '}'}
type_specifier_without_ident -> · array_type_specifier : {',' '}'}
type_specifier_without_ident -> · float16 : {',' '}'}
type_specifier_without_ident -> · float32 : {',' '}'}
type_specifier_without_ident -> · int32 : {',' '}'}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {',' '}'}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {',' '}'}
type_specifier_without_ident -> · texture_and_sampler_types : {',' '}'}
type_specifier_without_ident -> · uint32 : {',' '}'}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {',' '}'}
uint32 -> · 'u32' : {',' '}'}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#582
variable_qualifier/0.2 -> comma access_mode · : {'>'}

#583
access_mode -> 'read' · : {'>'}

#584
access_mode -> 'write' · : {'>'}

#585
access_mode -> 'read_write' · : {'>'}

#586
variable_qualifier -> less_than address_space variable_qualifier/0.2 greater_than · : {/([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/}

#587
attrib_end -> attrib_end/0.0 paren_right · : {';' '@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#588
struct_member -> struct_member/0.0 member_ident colon type_specifier · : {',' '}'}

#589
struct_body_decl -> brace_left struct_member struct_body_decl/0.2 struct_body_decl/0.3 brace_right · : {';' '@' 'const' 'fn' 'override' 'static_assert' 'struct' 'type' 'var' EndOfText}

#590
function_header -> 'fn' ident paren_left function_header/0.3 paren_right function_header/0.5 · : {'{'}

#591
function_header/0.5 -> arrow · function_header/0.5/0.1 type_specifier : {'{'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
function_header/0.5/0.1 -> · function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
function_header/0.5/0.1/0 -> · attribute function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#592
arrow -> '->' · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#593
param_list/0.1/0/0.0 -> comma param · : {')' ','}

#594
param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 · : {')' ','}

#595
param_list -> param param_list/0.1 param_list/0.2 · : {')'}

#596
param_list/0.2 -> comma · : {')'}

#597
param -> param/0.0 ident colon · type_specifier : {')' ','}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {')' ','}
depth_texture_type -> · 'texture_depth_2d' : {')' ','}
depth_texture_type -> · 'texture_depth_2d_array' : {')' ','}
depth_texture_type -> · 'texture_depth_cube' : {')' ','}
depth_texture_type -> · 'texture_depth_cube_array' : {')' ','}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {')' ','}
float16 -> · 'f16' : {')' ','}
float32 -> · 'f32' : {')' ','}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {')' ','}
int32 -> · 'i32' : {')' ','}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {')' ','}
sampler_type -> · 'sampler_comparison' : {')' ','}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {')' ','}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {')' ','}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {')' ','}
texture_and_sampler_types -> · sampler_type : {')' ','}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {')' ','}
type_specifier -> · ident : {')' ','}
type_specifier -> · type_specifier_without_ident : {')' ','}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {')' ','}
type_specifier_without_ident -> · 'bool' : {')' ','}
type_specifier_without_ident -> · array_type_specifier : {')' ','}
type_specifier_without_ident -> · float16 : {')' ','}
type_specifier_without_ident -> · float32 : {')' ','}
type_specifier_without_ident -> · int32 : {')' ','}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {')' ','}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {')' ','}
type_specifier_without_ident -> · texture_and_sampler_types : {')' ','}
type_specifier_without_ident -> · uint32 : {')' ','}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {')' ','}
uint32 -> · 'u32' : {')' ','}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#598
variable_statement -> 'const' optionally_typed_ident equal expression · : {';'}

#599
variable_statement -> 'let' optionally_typed_ident equal expression · : {';'}

#600
for_header -> for_header/0.0 semicolon · for_header/0.2 semicolon for_header/0.4 : {')'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {';'}
bitwise_expression -> · binary_or_expression or unary_expression : {';'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression and_and relational_expression : {';'}
expression -> · short_circuit_or_expression or_or relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
for_header/0.2 -> · expression : {';'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#601
for_statement -> 'for' paren_left for_header paren_right · compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#602
loop_statement/0.2/0 -> statement loop_statement/0.2/0 · : {'continuing' '}'}

#603
loop_statement -> 'loop' brace_left loop_statement/0.2 loop_statement/0.3 · brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
brace_right -> · '}' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#604
loop_statement/0.3 -> continuing_statement · : {'}'}

#605
continuing_statement -> 'continuing' · continuing_compound_statement : {'}'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
continuing_compound_statement -> · brace_left continuing_compound_statement/0.1 continuing_compound_statement/0.2 brace_right : {'}'}

#606
switch_statement -> 'switch' expression brace_left switch_statement/0.3 · brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
brace_right -> · '}' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#607
switch_statement/0.3 -> switch_statement/0.3/0 · : {'}'}

#608
switch_statement/0.3/0 -> switch_body · switch_statement/0.3/0 : {'}'}
case_clause -> · 'case' case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
default_alone_clause -> · 'default' default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
switch_body -> · case_clause : {'case' 'default' '}'}
switch_body -> · default_alone_clause : {'case' 'default' '}'}
switch_statement/0.3/0 -> · switch_body switch_statement/0.3/0 : {'}'}

#609
switch_body -> case_clause · : {'case' 'default' '}'}

#610
switch_body -> default_alone_clause · : {'case' 'default' '}'}

#611
case_clause -> 'case' · case_selectors case_clause/0.2 compound_statement : {'case' 'default' '}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '<' '<=' '==' '>' '>=' '{' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '<' '<=' '==' '>' '>=' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_or_expression or unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {',' ':' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
case_selector -> · 'default' : {',' ':' '{'}
case_selector -> · expression : {',' ':' '{'}
case_selectors -> · case_selector case_selectors/0.1 case_selectors/0.2 : {':' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
expression -> · bitwise_expression : {',' ':' '{'}
expression -> · relational_expression : {',' ':' '{'}
expression -> · short_circuit_and_expression and_and relational_expression : {',' ':' '{'}
expression -> · short_circuit_or_expression or_or relational_expression : {',' ':' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '<' '<=' '==' '>' '>=' '{' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '<' '<=' '==' '>' '>=' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ',' ':' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ',' ':' '<' '<=' '==' '>' '>=' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ',' ':' '<' '<=' '==' '>' '>=' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ',' ':' '<' '<=' '==' '>' '>=' '{' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}

#612
default_alone_clause -> 'default' · default_alone_clause/0.1 compound_statement : {'case' 'default' '}'}
colon -> · ':' : {'{'}
default_alone_clause/0.1 -> · colon : {'{'}

#613
else_clause -> 'else' compound_statement · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#614
else_if_clause -> 'else' 'if' expression · compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#615
expression_comma_list/0.1/0/0.0 -> comma expression · : {')' ','}

#616
expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 · : {')' ','}

#617
expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 · : {')'}

#618
expression_comma_list/0.2 -> comma · : {')'}

#619
array_type_specifier/0.3 -> comma element_count_expression · : {'>'}

#620
additive_expression -> additive_expression · additive_operator multiplicative_expression : {'+' '-' '>'}
element_count_expression -> additive_expression · : {'>'}
additive_operator -> · minus : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
additive_operator -> · plus : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
plus -> · '+' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#621
element_count_expression -> bitwise_expression · : {'>'}

#622
binary_and_expression -> unary_expression · : {'&'}
binary_or_expression -> unary_expression · : {'|'}
binary_xor_expression -> unary_expression · : {'^'}
multiplicative_expression -> unary_expression · : {'%' '*' '+' '-' '/' '>'}

#623
array_type_specifier -> 'array' less_than type_specifier array_type_specifier/0.3 greater_than · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#624
type_specifier_without_ident -> pointer less_than address_space comma type_specifier · type_specifier_without_ident/7.5 greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
comma -> · ',' : {}
type_specifier_without_ident/7.5 -> · comma access_mode : {'>'}

#625
texture_and_sampler_types -> storage_texture_type less_than texel_format comma access_mode · greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
greater_than -> · '>' : {'(' ')' ',' ';' '=' '>' '{' '}'}

#626
attribute -> attr 'workgroup_size' paren_left expression comma expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#627
attrib_end/0.0 -> comma · : {')'}
attribute -> attr 'workgroup_size' paren_left expression comma expression comma · expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' ')' '+' ',' '-' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {')' ','}
bitwise_expression -> · binary_or_expression or unary_expression : {')' ','}
bitwise_expression -> · binary_xor_expression xor unary_expression : {')' ','}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {')' ','}
expression -> · relational_expression : {')' ','}
expression -> · short_circuit_and_expression and_and relational_expression : {')' ','}
expression -> · short_circuit_or_expression or_or relational_expression : {')' ','}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' ')' '*' '+' ',' '-' '/' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '.' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ')' ',' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ')' ',' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ')' ',' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' ')' '*' '+' ',' '-' '/' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#628
attribute -> attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#629
attribute -> attr 'workgroup_size' paren_left expression comma expression comma expression · attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end -> · attrib_end/0.0 paren_right : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}
attrib_end/0.0 -> · comma : {')'}
comma -> · ',' : {')'}

#630
texture_and_sampler_types -> storage_texture_type less_than texel_format comma access_mode greater_than · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#631
type_specifier_without_ident -> pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 · greater_than : {'(' ')' ',' ';' '=' '>' '{' '}'}
greater_than -> · '>' : {'(' ')' ',' ';' '=' '>' '{' '}'}

#632
type_specifier_without_ident/7.5 -> comma · access_mode : {'>'}
access_mode -> · 'read' : {'>'}
access_mode -> · 'read_write' : {'>'}
access_mode -> · 'write' : {'>'}

#633
else_if_clause -> 'else' 'if' expression compound_statement · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#634
default_alone_clause -> 'default' default_alone_clause/0.1 · compound_statement : {'case' 'default' '}'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'case' 'default' '}'}

#635
default_alone_clause/0.1 -> colon · : {'{'}

#636
case_clause -> 'case' case_selectors · case_clause/0.2 compound_statement : {'case' 'default' '}'}
case_clause/0.2 -> · colon : {'{'}
colon -> · ':' : {'{'}

#637
case_selectors -> case_selector · case_selectors/0.1 case_selectors/0.2 : {':' '{'}
case_selectors/0.1 -> · case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> · case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> · comma case_selector : {',' ':' '{'}
comma -> · ',' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'default' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#638
case_selector -> 'default' · : {',' ':' '{'}

#639
case_selector -> expression · : {',' ':' '{'}

#640
switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 · : {'}'}

#641
switch_statement -> 'switch' expression brace_left switch_statement/0.3 brace_right · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#642
continuing_statement -> 'continuing' continuing_compound_statement · : {'}'}

#643
continuing_compound_statement -> brace_left · continuing_compound_statement/0.1 continuing_compound_statement/0.2 brace_right : {'}'}
and -> · '&' : {'&' '(' '*'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
assignment_statement -> · underscore equal expression : {';'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
break_statement -> · 'break' : {';'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
continue_statement -> · 'continue' : {';'}
continuing_compound_statement/0.1 -> · continuing_compound_statement/0.1/0 : {'break' '}'}
continuing_compound_statement/0.1/0 -> · statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
core_lhs_expression -> · paren_left lhs_expression paren_right : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
decrement_statement -> · lhs_expression minus_minus : {';'}
for_statement -> · 'for' paren_left for_header paren_right compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
func_call_statement -> · func_call_statement/0.0 call_phrase : {';'}
func_call_statement/0.0 -> · func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
func_call_statement/0.0/0 -> · attribute func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
increment_statement -> · lhs_expression plus_plus : {';'}
lhs_expression -> · and lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · star lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
loop_statement -> · 'loop' brace_left loop_statement/0.2 loop_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
paren_left -> · '(' : {'&' '(' '*'}
return_statement -> · 'return' return_statement/0.1 : {';'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
star -> · '*' : {'&' '(' '*'}
statement -> · 'discard' semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · break_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · continue_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · func_call_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · return_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · static_assert_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · variable_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · variable_updating_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
static_assert_statement -> · 'static_assert' expression : {';'}
switch_statement -> · 'switch' expression brace_left switch_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
underscore -> · '_' : {'='}
variable_decl -> · 'var' variable_decl/0.1 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident equal expression : {';'}
variable_statement -> · 'let' optionally_typed_ident equal expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_statement -> · variable_decl equal expression : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#644
loop_statement -> 'loop' brace_left loop_statement/0.2 loop_statement/0.3 brace_right · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#645
for_statement -> 'for' paren_left for_header paren_right compound_statement · : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'continuing' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#646
for_header -> for_header/0.0 semicolon for_header/0.2 · semicolon for_header/0.4 : {')'}
semicolon -> · ';' : {'&' '(' ')' '*' '@' '_' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#647
for_header/0.2 -> expression · : {';'}

#648
param -> param/0.0 ident colon type_specifier · : {')' ','}

#649
function_header/0.5 -> arrow function_header/0.5/0.1 · type_specifier : {'{'}
array_type_specifier -> · 'array' less_than type_specifier array_type_specifier/0.3 greater_than : {'{'}
depth_texture_type -> · 'texture_depth_2d' : {'{'}
depth_texture_type -> · 'texture_depth_2d_array' : {'{'}
depth_texture_type -> · 'texture_depth_cube' : {'{'}
depth_texture_type -> · 'texture_depth_cube_array' : {'{'}
depth_texture_type -> · 'texture_depth_multisampled_2d' : {'{'}
float16 -> · 'f16' : {'{'}
float32 -> · 'f32' : {'{'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'{'}
int32 -> · 'i32' : {'{'}
mat_prefix -> · 'mat2x2' : {'<'}
mat_prefix -> · 'mat2x3' : {'<'}
mat_prefix -> · 'mat2x4' : {'<'}
mat_prefix -> · 'mat3x2' : {'<'}
mat_prefix -> · 'mat3x3' : {'<'}
mat_prefix -> · 'mat3x4' : {'<'}
mat_prefix -> · 'mat4x2' : {'<'}
mat_prefix -> · 'mat4x3' : {'<'}
mat_prefix -> · 'mat4x4' : {'<'}
multisampled_texture_type -> · 'texture_multisampled_2d' : {'<'}
pointer -> · 'ptr' : {'<'}
sampled_texture_type -> · 'texture_1d' : {'<'}
sampled_texture_type -> · 'texture_2d' : {'<'}
sampled_texture_type -> · 'texture_2d_array' : {'<'}
sampled_texture_type -> · 'texture_3d' : {'<'}
sampled_texture_type -> · 'texture_cube' : {'<'}
sampled_texture_type -> · 'texture_cube_array' : {'<'}
sampler_type -> · 'sampler' : {'{'}
sampler_type -> · 'sampler_comparison' : {'{'}
storage_texture_type -> · 'texture_storage_1d' : {'<'}
storage_texture_type -> · 'texture_storage_2d' : {'<'}
storage_texture_type -> · 'texture_storage_2d_array' : {'<'}
storage_texture_type -> · 'texture_storage_3d' : {'<'}
texture_and_sampler_types -> · depth_texture_type : {'{'}
texture_and_sampler_types -> · multisampled_texture_type less_than type_specifier greater_than : {'{'}
texture_and_sampler_types -> · sampled_texture_type less_than type_specifier greater_than : {'{'}
texture_and_sampler_types -> · sampler_type : {'{'}
texture_and_sampler_types -> · storage_texture_type less_than texel_format comma access_mode greater_than : {'{'}
type_specifier -> · ident : {'{'}
type_specifier -> · type_specifier_without_ident : {'{'}
type_specifier_without_ident -> · 'atomic' less_than type_specifier greater_than : {'{'}
type_specifier_without_ident -> · 'bool' : {'{'}
type_specifier_without_ident -> · array_type_specifier : {'{'}
type_specifier_without_ident -> · float16 : {'{'}
type_specifier_without_ident -> · float32 : {'{'}
type_specifier_without_ident -> · int32 : {'{'}
type_specifier_without_ident -> · mat_prefix less_than type_specifier greater_than : {'{'}
type_specifier_without_ident -> · pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than : {'{'}
type_specifier_without_ident -> · texture_and_sampler_types : {'{'}
type_specifier_without_ident -> · uint32 : {'{'}
type_specifier_without_ident -> · vec_prefix less_than type_specifier greater_than : {'{'}
uint32 -> · 'u32' : {'{'}
vec_prefix -> · 'vec2' : {'<'}
vec_prefix -> · 'vec3' : {'<'}
vec_prefix -> · 'vec4' : {'<'}

#650
function_header/0.5/0.1 -> function_header/0.5/0.1/0 · : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#651
function_header/0.5/0.1/0 -> attribute · function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
function_header/0.5/0.1/0 -> · attribute function_header/0.5/0.1/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#652
function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 · : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}

#653
function_header/0.5 -> arrow function_header/0.5/0.1 type_specifier · : {'{'}

#654
for_header -> for_header/0.0 semicolon for_header/0.2 semicolon · for_header/0.4 : {')'}
and -> · '&' : {'&' '(' '*'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {')'}
assignment_statement -> · underscore equal expression : {')'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
core_lhs_expression -> · paren_left lhs_expression paren_right : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
decrement_statement -> · lhs_expression minus_minus : {')'}
for_header/0.4 -> · for_update : {')'}
for_update -> · func_call_statement : {')'}
for_update -> · variable_updating_statement : {')'}
func_call_statement -> · func_call_statement/0.0 call_phrase : {')'}
func_call_statement/0.0 -> · func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
func_call_statement/0.0/0 -> · attribute func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
increment_statement -> · lhs_expression plus_plus : {')'}
lhs_expression -> · and lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · star lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
paren_left -> · '(' : {'&' '(' '*'}
star -> · '*' : {'&' '(' '*'}
underscore -> · '_' : {'='}
variable_updating_statement -> · assignment_statement : {')'}
variable_updating_statement -> · decrement_statement : {')'}
variable_updating_statement -> · increment_statement : {')'}

#655
continuing_compound_statement -> brace_left continuing_compound_statement/0.1 · continuing_compound_statement/0.2 brace_right : {'}'}
break_if_statement -> · 'break' 'if' expression semicolon : {'}'}
continuing_compound_statement/0.2 -> · break_if_statement : {'}'}

#656
continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 · : {'break' '}'}

#657
continuing_compound_statement/0.1/0 -> statement · continuing_compound_statement/0.1/0 : {'break' '}'}
and -> · '&' : {'&' '(' '*'}
assignment_statement -> · lhs_expression assignment_statement/0.1 expression : {';'}
assignment_statement -> · underscore equal expression : {';'}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'compute' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'const' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'fragment' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'invariant' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'vertex' : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
break_statement -> · 'break' : {';'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
continue_statement -> · 'continue' : {';'}
continuing_compound_statement/0.1/0 -> · statement continuing_compound_statement/0.1/0 : {'break' '}'}
core_lhs_expression -> · ident : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
core_lhs_expression -> · paren_left lhs_expression paren_right : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
decrement_statement -> · lhs_expression minus_minus : {';'}
for_statement -> · 'for' paren_left for_header paren_right compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
func_call_statement -> · func_call_statement/0.0 call_phrase : {';'}
func_call_statement/0.0 -> · func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
func_call_statement/0.0/0 -> · attribute func_call_statement/0.0/0 : {'array' 'atomic' 'bool' 'f16' 'f32' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'vec2' 'vec3' 'vec4'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'%=' '&=' '*=' '++' '+=' '--' '-=' '.' '/=' '<<=' '=' '>>=' '[' '^=' '|='}
if_clause -> · 'if' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'else' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
if_statement -> · if_clause if_statement/0.1 if_statement/0.2 : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
increment_statement -> · lhs_expression plus_plus : {';'}
lhs_expression -> · and lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · core_lhs_expression lhs_expression/0.1 : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
lhs_expression -> · star lhs_expression : {'%=' '&=' '*=' '++' '+=' '--' '-=' '/=' '<<=' '=' '>>=' '^=' '|='}
loop_statement -> · 'loop' brace_left loop_statement/0.2 loop_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
paren_left -> · '(' : {'&' '(' '*'}
return_statement -> · 'return' return_statement/0.1 : {';'}
semicolon -> · ';' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
star -> · '*' : {'&' '(' '*'}
statement -> · 'discard' semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · break_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · continue_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · for_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · func_call_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · if_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · loop_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · return_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · static_assert_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · switch_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · variable_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · variable_updating_statement semicolon : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
statement -> · while_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
static_assert_statement -> · 'static_assert' expression : {';'}
switch_statement -> · 'switch' expression brace_left switch_statement/0.3 brace_right : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
underscore -> · '_' : {'='}
variable_decl -> · 'var' variable_decl/0.1 optionally_typed_ident : {';' '='}
variable_statement -> · 'const' optionally_typed_ident equal expression : {';'}
variable_statement -> · 'let' optionally_typed_ident equal expression : {';'}
variable_statement -> · variable_decl : {';'}
variable_statement -> · variable_decl equal expression : {';'}
variable_updating_statement -> · assignment_statement : {';'}
variable_updating_statement -> · decrement_statement : {';'}
variable_updating_statement -> · increment_statement : {';'}
while_statement -> · 'while' expression compound_statement : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}

#658
case_selectors -> case_selector case_selectors/0.1 · case_selectors/0.2 : {':' '{'}
case_selectors/0.2 -> · comma : {':' '{'}
comma -> · ',' : {':' '{'}

#659
case_selectors/0.1 -> case_selectors/0.1/0 · : {',' ':' '{'}

#660
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 · case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0 -> · case_selectors/0.1/0/0.0 case_selectors/0.1/0 : {',' ':' '{'}
case_selectors/0.1/0/0.0 -> · comma case_selector : {',' ':' '{'}
comma -> · ',' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'default' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}

#661
case_selectors/0.1/0/0.0 -> comma · case_selector : {',' ':' '{'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '<' '<=' '==' '>' '>=' '{' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' ',' '-' ':' '<' '<=' '==' '>' '>=' '{' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_or_expression or unary_expression : {',' ':' '{'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {',' ':' '{'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
case_selector -> · 'default' : {',' ':' '{'}
case_selector -> · expression : {',' ':' '{'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
expression -> · bitwise_expression : {',' ':' '{'}
expression -> · relational_expression : {',' ':' '{'}
expression -> · short_circuit_and_expression and_and relational_expression : {',' ':' '{'}
expression -> · short_circuit_or_expression or_or relational_expression : {',' ':' '{'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '<' '<=' '==' '>' '>=' '{' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' ',' '-' '/' ':' '<' '<=' '==' '>' '>=' '{' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' ',' '-' '.' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '{' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ',' ':' '{' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ',' ':' '{' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ',' ':' '<' '<=' '==' '>' '>=' '{' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ',' ':' '<' '<=' '==' '>' '>=' '{' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ',' ':' '<' '<=' '==' '>' '>=' '{' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' ',' '-' '/' ':' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '{' '|' '||'}

#662
case_clause -> 'case' case_selectors case_clause/0.2 · compound_statement : {'case' 'default' '}'}
brace_left -> · '{' : {'&' '(' '*' ';' '@' '_' 'array' 'atomic' 'bool' 'break' 'const' 'continue' 'discard' 'f16' 'f32' 'for' 'i32' 'if' 'let' 'loop' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'return' 'sampler' 'sampler_comparison' 'static_assert' 'switch' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4' 'while' '{' '}'}
compound_statement -> · brace_left compound_statement/0.1 brace_right : {'case' 'default' '}'}

#663
case_clause/0.2 -> colon · : {'{'}

#664
default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement · : {'case' 'default' '}'}

#665
type_specifier_without_ident/7.5 -> comma access_mode · : {'>'}

#666
type_specifier_without_ident -> pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than · : {'(' ')' ',' ';' '=' '>' '{' '}'}

#667
attribute -> attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end · : {'@' 'array' 'atomic' 'bool' 'f16' 'f32' 'fn' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'override' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'u32' 'var' 'vec2' 'vec3' 'vec4'}

#668
case_clause -> 'case' case_selectors case_clause/0.2 compound_statement · : {'case' 'default' '}'}

#669
case_selectors/0.1/0/0.0 -> comma case_selector · : {',' ':' '{'}

#670
case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 · : {',' ':' '{'}

#671
case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 · : {':' '{'}

#672
case_selectors/0.2 -> comma · : {':' '{'}

#673
continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 · : {'break' '}'}

#674
continuing_compound_statement -> brace_left continuing_compound_statement/0.1 continuing_compound_statement/0.2 · brace_right : {'}'}
brace_right -> · '}' : {'}'}

#675
continuing_compound_statement/0.2 -> break_if_statement · : {'}'}

#676
break_if_statement -> 'break' · 'if' expression semicolon : {'}'}

#677
for_header -> for_header/0.0 semicolon for_header/0.2 semicolon for_header/0.4 · : {')'}

#678
for_header/0.4 -> for_update · : {')'}

#679
for_update -> variable_updating_statement · : {')'}

#680
for_update -> func_call_statement · : {')'}

#681
break_if_statement -> 'break' 'if' · expression semicolon : {'}'}
additive_expression -> · additive_expression additive_operator multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
additive_expression -> · multiplicative_expression : {'!=' '&&' '+' '-' ';' '<' '<=' '==' '>' '>=' '||'}
and -> · '&' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
attr -> · '@' : {'const' 'diagnostic'}
attribute -> · attr 'align' paren_left expression attrib_end : {'@'}
attribute -> · attr 'binding' paren_left expression attrib_end : {'@'}
attribute -> · attr 'builtin' paren_left builtin_value_name attrib_end : {'@'}
attribute -> · attr 'compute' : {'@'}
attribute -> · attr 'const' : {'@'}
attribute -> · attr 'diagnostic' diagnostic_control : {'@'}
attribute -> · attr 'fragment' : {'@'}
attribute -> · attr 'group' paren_left expression attrib_end : {'@'}
attribute -> · attr 'id' paren_left expression attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name attrib_end : {'@'}
attribute -> · attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end : {'@'}
attribute -> · attr 'invariant' : {'@'}
attribute -> · attr 'location' paren_left expression attrib_end : {'@'}
attribute -> · attr 'size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'vertex' : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression attrib_end : {'@'}
attribute -> · attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end : {'@'}
bang -> · '!' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
binary_and_expression -> · binary_and_expression and unary_expression : {'&'}
binary_and_expression -> · unary_expression : {'&'}
binary_or_expression -> · binary_or_expression or unary_expression : {'|'}
binary_or_expression -> · unary_expression : {'|'}
binary_xor_expression -> · binary_xor_expression xor unary_expression : {'^'}
binary_xor_expression -> · unary_expression : {'^'}
bitwise_expression -> · binary_and_expression and unary_expression : {';'}
bitwise_expression -> · binary_or_expression or unary_expression : {';'}
bitwise_expression -> · binary_xor_expression xor unary_expression : {';'}
bool_literal -> · 'false' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
bool_literal -> · 'true' : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /0[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+[eE][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_float_literal -> · /[1-9][0-9]*[fh]/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /0[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
decimal_int_literal -> · /[1-9][0-9]*[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
expression -> · bitwise_expression : {';'}
expression -> · relational_expression : {';'}
expression -> · short_circuit_and_expression and_and relational_expression : {';'}
expression -> · short_circuit_or_expression or_or relational_expression : {';'}
float_literal -> · decimal_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
float_literal -> · hex_float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_float_literal -> · /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
hex_int_literal -> · /0[xX][0-9a-fA-F]+[iu]?/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
ident -> · /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · decimal_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
int_literal -> · hex_int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · bool_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · float_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
literal -> · int_literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
minus -> · '-' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
multiplicative_expression -> · multiplicative_expression multiplicative_operator unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
multiplicative_expression -> · unary_expression : {'!=' '%' '&&' '*' '+' '-' '/' ';' '<' '<=' '==' '>' '>=' '||'}
paren_expression -> · paren_left expression paren_right : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
paren_left -> · '(' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
primary_expression -> · 'bitcast' less_than type_specifier greater_than paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · ident : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · literal : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · paren_expression : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression -> · primary_expression/1.0 call_expr : {'!=' '%' '&&' '&' '*' '+' '-' '.' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '[' '^' '|' '||'}
primary_expression/1.0 -> · primary_expression/1.0/0 : {}
primary_expression/1.0/0 -> · attribute primary_expression/1.0/0 : {}
relational_expression -> · shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression equal_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression greater_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression less_than_equal shift_expression : {'&&' ';' '||'}
relational_expression -> · shift_expression not_equal shift_expression : {'&&' ';' '||'}
shift_expression -> · additive_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_left unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
shift_expression -> · unary_expression shift_right unary_expression : {'!=' '&&' ';' '<' '<=' '==' '>' '>=' '||'}
short_circuit_and_expression -> · relational_expression : {'&&'}
short_circuit_and_expression -> · short_circuit_and_expression and_and relational_expression : {'&&'}
short_circuit_or_expression -> · relational_expression : {'||'}
short_circuit_or_expression -> · short_circuit_or_expression or_or relational_expression : {'||'}
singular_expression -> · primary_expression singular_expression/0.1 : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
star -> · '*' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
tilde -> · '~' : {'!' '&' '(' '*' '-' '@' 'array' 'atomic' 'bitcast' 'bool' 'f16' 'f32' 'false' 'i32' 'mat2x2' 'mat2x3' 'mat2x4' 'mat3x2' 'mat3x3' 'mat3x4' 'mat4x2' 'mat4x3' 'mat4x4' 'ptr' 'sampler' 'sampler_comparison' 'texture_1d' 'texture_2d' 'texture_2d_array' 'texture_3d' 'texture_cube' 'texture_cube_array' 'texture_depth_2d' 'texture_depth_2d_array' 'texture_depth_cube' 'texture_depth_cube_array' 'texture_depth_multisampled_2d' 'texture_multisampled_2d' 'texture_storage_1d' 'texture_storage_2d' 'texture_storage_2d_array' 'texture_storage_3d' 'true' 'u32' 'vec2' 'vec3' 'vec4' '~' /0[xX][0-9a-fA-F]+[iu]?/}
unary_expression -> · and unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · bang unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · minus unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · singular_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · star unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}
unary_expression -> · tilde unary_expression : {'!=' '%' '&&' '&' '*' '+' '-' '/' ';' '<' '<<' '<=' '==' '>' '>=' '>>' '^' '|' '||'}

#682
continuing_compound_statement -> brace_left continuing_compound_statement/0.1 continuing_compound_statement/0.2 brace_right · : {'}'}

#683
break_if_statement -> 'break' 'if' expression · semicolon : {'}'}
semicolon -> · ';' : {'}'}

#684
break_if_statement -> 'break' 'if' expression semicolon · : {'}'}


=Reductions:
r#0 translation_unit/0.0 -> translation_unit/0.0/0 ·
r#1 global_directive -> diagnostic_directive ·
r#2 global_directive -> enable_directive ·
r#3 extension_name -> 'f16' ·
r#4 paren_left -> '(' ·
r#5 translation_unit/0.0/0 -> global_directive translation_unit/0.0/0 ·
r#6 translation_unit -> translation_unit/0.0 translation_unit/0.1 ·
r#7 translation_unit/0.1 -> translation_unit/0.1/0 ·
r#8 global_decl -> semicolon ·
r#9 global_decl -> struct_decl ·
r#10 global_decl -> function_decl ·
r#11 semicolon -> ';' ·
r#12 global_variable_decl/0.0 -> global_variable_decl/0.0/0 ·
r#13 global_constant_decl/1.0 -> global_constant_decl/1.0/0 ·
r#14 function_decl/0.0 -> function_decl/0.0/0 ·
r#15 attr -> '@' ·
r#16 attribute -> attr 'const' ·
r#17 attribute -> attr 'invariant' ·
r#18 attribute -> attr 'vertex' ·
r#19 attribute -> attr 'fragment' ·
r#20 attribute -> attr 'compute' ·
r#21 global_variable_decl/0.0/0 -> attribute global_variable_decl/0.0/0 ·
r#22 global_constant_decl/1.0/0 -> attribute global_constant_decl/1.0/0 ·
r#23 function_decl/0.0/0 -> attribute function_decl/0.0/0 ·
r#24 static_assert_statement -> 'static_assert' expression ·
r#25 expression -> relational_expression ·
r#26 short_circuit_or_expression -> relational_expression ·
r#27 short_circuit_and_expression -> relational_expression ·
r#28 expression -> bitwise_expression ·
r#29 relational_expression -> shift_expression ·
r#30 shift_expression -> additive_expression ·
r#31 binary_and_expression -> unary_expression ·
r#32 binary_or_expression -> unary_expression ·
r#33 binary_xor_expression -> unary_expression ·
r#34 multiplicative_expression -> unary_expression ·
r#35 additive_expression -> multiplicative_expression ·
r#36 unary_expression -> singular_expression ·
r#37 minus -> '-' ·
r#38 bang -> '!' ·
r#39 tilde -> '~' ·
r#40 star -> '*' ·
r#41 and -> '&' ·
r#42 primary_expression -> ident ·
r#43 primary_expression -> literal ·
r#44 primary_expression -> paren_expression ·
r#45 ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#46 literal -> int_literal ·
r#47 literal -> float_literal ·
r#48 literal -> bool_literal ·
r#49 int_literal -> decimal_int_literal ·
r#50 int_literal -> hex_int_literal ·
r#51 float_literal -> decimal_float_literal ·
r#52 float_literal -> hex_float_literal ·
r#53 bool_literal -> 'true' ·
r#54 bool_literal -> 'false' ·
r#55 decimal_int_literal -> /0[iu]?/ ·
r#56 decimal_int_literal -> /[1-9][0-9]*[iu]?/ ·
r#57 hex_int_literal -> /0[xX][0-9a-fA-F]+[iu]?/ ·
r#58 decimal_float_literal -> /0[fh]/ ·
r#59 decimal_float_literal -> /[1-9][0-9]*[fh]/ ·
r#60 decimal_float_literal -> /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/ ·
r#61 decimal_float_literal -> /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/ ·
r#62 decimal_float_literal -> /[0-9]+[eE][+-]?[0-9]+[fh]?/ ·
r#63 hex_float_literal -> /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/ ·
r#64 hex_float_literal -> /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/ ·
r#65 hex_float_literal -> /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/ ·
r#66 global_decl -> static_assert_statement semicolon ·
r#67 global_decl -> type_alias_decl semicolon ·
r#68 global_decl -> global_constant_decl semicolon ·
r#69 global_decl -> global_variable_decl semicolon ·
r#70 translation_unit/0.1/0 -> global_decl translation_unit/0.1/0 ·
r#71 severity_control_name -> 'error' ·
r#72 severity_control_name -> 'warning' ·
r#73 severity_control_name -> 'off' ·
r#74 diagnostic_directive -> 'diagnostic' diagnostic_control semicolon ·
r#75 enable_directive -> 'enable' extension_name semicolon ·
r#76 comma -> ',' ·
r#77 variable_decl/0.1 -> variable_qualifier ·
r#78 less_than -> '<' ·
r#79 global_variable_decl -> global_variable_decl/0.0 variable_decl global_variable_decl/0.2 ·
r#80 equal -> '=' ·
r#81 optionally_typed_ident -> ident optionally_typed_ident/0.1 ·
r#82 colon -> ':' ·
r#83 struct_decl -> 'struct' ident struct_body_decl ·
r#84 brace_left -> '{' ·
r#85 function_decl -> function_decl/0.0 function_header compound_statement ·
r#86 primary_expression -> primary_expression/1.0 call_expr ·
r#87 callable -> ident ·
r#88 callable -> type_specifier_without_ident ·
r#89 callable -> vec_prefix ·
r#90 callable -> mat_prefix ·
r#91 callable -> 'array' ·
r#92 type_specifier_without_ident -> 'bool' ·
r#93 type_specifier_without_ident -> float32 ·
r#94 type_specifier_without_ident -> float16 ·
r#95 type_specifier_without_ident -> int32 ·
r#96 type_specifier_without_ident -> uint32 ·
r#97 type_specifier_without_ident -> array_type_specifier ·
r#98 type_specifier_without_ident -> texture_and_sampler_types ·
r#99 vec_prefix -> 'vec2' ·
r#100 vec_prefix -> 'vec3' ·
r#101 vec_prefix -> 'vec4' ·
r#102 mat_prefix -> 'mat2x2' ·
r#103 mat_prefix -> 'mat2x3' ·
r#104 mat_prefix -> 'mat2x4' ·
r#105 mat_prefix -> 'mat3x2' ·
r#106 mat_prefix -> 'mat3x3' ·
r#107 mat_prefix -> 'mat3x4' ·
r#108 mat_prefix -> 'mat4x2' ·
r#109 mat_prefix -> 'mat4x3' ·
r#110 mat_prefix -> 'mat4x4' ·
r#111 float32 -> 'f32' ·
r#112 float16 -> 'f16' ·
r#113 int32 -> 'i32' ·
r#114 uint32 -> 'u32' ·
r#115 pointer -> 'ptr' ·
r#116 texture_and_sampler_types -> sampler_type ·
r#117 texture_and_sampler_types -> depth_texture_type ·
r#118 sampler_type -> 'sampler' ·
r#119 sampler_type -> 'sampler_comparison' ·
r#120 depth_texture_type -> 'texture_depth_2d' ·
r#121 depth_texture_type -> 'texture_depth_2d_array' ·
r#122 depth_texture_type -> 'texture_depth_cube' ·
r#123 depth_texture_type -> 'texture_depth_cube_array' ·
r#124 depth_texture_type -> 'texture_depth_multisampled_2d' ·
r#125 sampled_texture_type -> 'texture_1d' ·
r#126 sampled_texture_type -> 'texture_2d' ·
r#127 sampled_texture_type -> 'texture_2d_array' ·
r#128 sampled_texture_type -> 'texture_3d' ·
r#129 sampled_texture_type -> 'texture_cube' ·
r#130 sampled_texture_type -> 'texture_cube_array' ·
r#131 multisampled_texture_type -> 'texture_multisampled_2d' ·
r#132 storage_texture_type -> 'texture_storage_1d' ·
r#133 storage_texture_type -> 'texture_storage_2d' ·
r#134 storage_texture_type -> 'texture_storage_2d_array' ·
r#135 storage_texture_type -> 'texture_storage_3d' ·
r#136 singular_expression -> primary_expression singular_expression/0.1 ·
r#137 singular_expression/0.1 -> component_or_swizzle_specifier ·
r#138 bracket_left -> '[' ·
r#139 unary_expression -> and unary_expression ·
r#140 unary_expression -> star unary_expression ·
r#141 unary_expression -> tilde unary_expression ·
r#142 unary_expression -> bang unary_expression ·
r#143 unary_expression -> minus unary_expression ·
r#144 multiplicative_operator -> star ·
r#145 multiplicative_operator -> forward_slash ·
r#146 multiplicative_operator -> modulo ·
r#147 forward_slash -> '/' ·
r#148 modulo -> '%' ·
r#149 shift_left -> '<<' ·
r#150 shift_right -> '>>' ·
r#151 additive_operator -> plus ·
r#152 additive_operator -> minus ·
r#153 plus -> '+' ·
r#154 xor -> '^' ·
r#155 or -> '|' ·
r#156 greater_than -> '>' ·
r#157 less_than_equal -> '<=' ·
r#158 greater_than_equal -> '>=' ·
r#159 equal_equal -> '==' ·
r#160 not_equal -> '!=' ·
r#161 and_and -> '&&' ·
r#162 or_or -> '||' ·
r#163 attribute -> attr 'diagnostic' diagnostic_control ·
r#164 builtin_value_name -> 'vertex_index' ·
r#165 builtin_value_name -> 'instance_index' ·
r#166 builtin_value_name -> 'position' ·
r#167 builtin_value_name -> 'front_facing' ·
r#168 builtin_value_name -> 'frag_depth' ·
r#169 builtin_value_name -> 'local_invocation_id' ·
r#170 builtin_value_name -> 'local_invocation_index' ·
r#171 builtin_value_name -> 'global_invocation_id' ·
r#172 builtin_value_name -> 'workgroup_id' ·
r#173 builtin_value_name -> 'num_workgroups' ·
r#174 builtin_value_name -> 'sample_index' ·
r#175 builtin_value_name -> 'sample_mask' ·
r#176 interpolation_type_name -> 'perspective' ·
r#177 interpolation_type_name -> 'linear' ·
r#178 interpolation_type_name -> 'flat' ·
r#179 expression -> short_circuit_or_expression or_or relational_expression ·
r#180 short_circuit_or_expression -> short_circuit_or_expression or_or relational_expression ·
r#181 expression -> short_circuit_and_expression and_and relational_expression ·
r#182 short_circuit_and_expression -> short_circuit_and_expression and_and relational_expression ·
r#183 relational_expression -> shift_expression not_equal shift_expression ·
r#184 relational_expression -> shift_expression equal_equal shift_expression ·
r#185 relational_expression -> shift_expression greater_than_equal shift_expression ·
r#186 relational_expression -> shift_expression less_than_equal shift_expression ·
r#187 relational_expression -> shift_expression greater_than shift_expression ·
r#188 relational_expression -> shift_expression less_than shift_expression ·
r#189 bitwise_expression -> binary_and_expression and unary_expression ·
r#190 binary_and_expression -> binary_and_expression and unary_expression ·
r#191 bitwise_expression -> binary_or_expression or unary_expression ·
r#192 binary_or_expression -> binary_or_expression or unary_expression ·
r#193 bitwise_expression -> binary_xor_expression xor unary_expression ·
r#194 binary_xor_expression -> binary_xor_expression xor unary_expression ·
r#195 additive_expression -> additive_expression additive_operator multiplicative_expression ·
r#196 shift_expression -> unary_expression shift_right unary_expression ·
r#197 shift_expression -> unary_expression shift_left unary_expression ·
r#198 multiplicative_expression -> multiplicative_expression multiplicative_operator unary_expression ·
r#199 member_ident -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#200 swizzle_name -> '/[rgba]/' ·
r#201 swizzle_name -> '/[rgba][rgba]/' ·
r#202 swizzle_name -> '/[rgba][rgba][rgba]/' ·
r#203 swizzle_name -> '/[rgba][rgba][rgba][rgba]/' ·
r#204 swizzle_name -> '/[xyzw]/' ·
r#205 swizzle_name -> '/[xyzw][xyzw]/' ·
r#206 swizzle_name -> '/[xyzw][xyzw][xyzw]/' ·
r#207 swizzle_name -> '/[xyzw][xyzw][xyzw][xyzw]/' ·
r#208 call_expr -> callable argument_expression_list ·
r#209 type_specifier -> ident ·
r#210 type_specifier -> type_specifier_without_ident ·
r#211 paren_expression -> paren_left expression paren_right ·
r#212 paren_right -> ')' ·
r#213 compound_statement/0.1 -> compound_statement/0.1/0 ·
r#214 statement -> semicolon ·
r#215 statement -> if_statement ·
r#216 statement -> switch_statement ·
r#217 statement -> loop_statement ·
r#218 statement -> for_statement ·
r#219 statement -> while_statement ·
r#220 statement -> compound_statement ·
r#221 variable_statement -> variable_decl ·
r#222 break_statement -> 'break' ·
r#223 continue_statement -> 'continue' ·
r#224 variable_updating_statement -> assignment_statement ·
r#225 variable_updating_statement -> increment_statement ·
r#226 variable_updating_statement -> decrement_statement ·
r#227 func_call_statement/0.0 -> func_call_statement/0.0/0 ·
r#228 underscore -> '_' ·
r#229 core_lhs_expression -> ident ·
r#230 type_alias_decl -> 'type' ident equal type_specifier ·
r#231 global_constant_decl -> global_constant_decl/1.0 'override' optionally_typed_ident global_constant_decl/1.3 ·
r#232 global_constant_decl -> 'const' optionally_typed_ident equal expression ·
r#233 optionally_typed_ident/0.1 -> colon type_specifier ·
r#234 global_variable_decl/0.2 -> equal expression ·
r#235 address_space -> 'function' ·
r#236 address_space -> 'private' ·
r#237 address_space -> 'workgroup' ·
r#238 address_space -> 'uniform' ·
r#239 address_space -> 'storage' ·
r#240 variable_decl -> 'var' variable_decl/0.1 optionally_typed_ident ·
r#241 diagnostic_rule_name -> /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/ ·
r#242 diagnostic_control -> paren_left severity_control_name comma diagnostic_rule_name attrib_end ·
r#243 attrib_end/0.0 -> comma ·
r#244 global_constant_decl/1.3 -> equal expression ·
r#245 struct_body_decl/0.2 -> struct_body_decl/0.2/0 ·
r#246 function_header/0.3 -> param_list ·
r#247 lhs_expression -> and lhs_expression ·
r#248 lhs_expression -> star lhs_expression ·
r#249 lhs_expression -> core_lhs_expression lhs_expression/0.1 ·
r#250 lhs_expression/0.1 -> component_or_swizzle_specifier ·
r#251 func_call_statement/0.0/0 -> attribute func_call_statement/0.0/0 ·
r#252 increment_statement -> lhs_expression plus_plus ·
r#253 decrement_statement -> lhs_expression minus_minus ·
r#254 assignment_statement/0.1 -> equal ·
r#255 assignment_statement/0.1 -> compound_assignment_operator ·
r#256 plus_plus -> '++' ·
r#257 minus_minus -> '--' ·
r#258 compound_assignment_operator -> plus_equal ·
r#259 compound_assignment_operator -> minus_equal ·
r#260 compound_assignment_operator -> times_equal ·
r#261 compound_assignment_operator -> division_equal ·
r#262 compound_assignment_operator -> modulo_equal ·
r#263 compound_assignment_operator -> and_equal ·
r#264 compound_assignment_operator -> or_equal ·
r#265 compound_assignment_operator -> xor_equal ·
r#266 compound_assignment_operator -> shift_right_equal ·
r#267 compound_assignment_operator -> shift_left_equal ·
r#268 plus_equal -> '+=' ·
r#269 minus_equal -> '-=' ·
r#270 times_equal -> '*=' ·
r#271 division_equal -> '/=' ·
r#272 modulo_equal -> '%=' ·
r#273 and_equal -> '&=' ·
r#274 or_equal -> '|=' ·
r#275 xor_equal -> '^=' ·
r#276 shift_right_equal -> '>>=' ·
r#277 shift_left_equal -> '<<=' ·
r#278 func_call_statement -> func_call_statement/0.0 call_phrase ·
r#279 if_statement/0.1 -> if_statement/0.1/0 ·
r#280 return_statement -> 'return' return_statement/0.1 ·
r#281 return_statement/0.1 -> expression ·
r#282 statement -> static_assert_statement semicolon ·
r#283 statement -> variable_updating_statement semicolon ·
r#284 statement -> 'discard' semicolon ·
r#285 statement -> continue_statement semicolon ·
r#286 statement -> break_statement semicolon ·
r#287 statement -> variable_statement semicolon ·
r#288 statement -> func_call_statement semicolon ·
r#289 statement -> return_statement semicolon ·
r#290 compound_statement/0.1/0 -> statement compound_statement/0.1/0 ·
r#291 compound_statement -> brace_left compound_statement/0.1 brace_right ·
r#292 brace_right -> '}' ·
r#293 argument_expression_list/0.1 -> expression_comma_list ·
r#294 texel_format -> 'rgba8unorm' ·
r#295 texel_format -> 'rgba8snorm' ·
r#296 texel_format -> 'rgba8uint' ·
r#297 texel_format -> 'rgba8sint' ·
r#298 texel_format -> 'rgba16uint' ·
r#299 texel_format -> 'rgba16sint' ·
r#300 texel_format -> 'rgba16float' ·
r#301 texel_format -> 'r32uint' ·
r#302 texel_format -> 'r32sint' ·
r#303 texel_format -> 'r32float' ·
r#304 texel_format -> 'rg32uint' ·
r#305 texel_format -> 'rg32sint' ·
r#306 texel_format -> 'rg32float' ·
r#307 texel_format -> 'rgba32uint' ·
r#308 texel_format -> 'rgba32sint' ·
r#309 texel_format -> 'rgba32float' ·
r#310 bracket_right -> ']' ·
r#311 component_or_swizzle_specifier -> period swizzle_name component_or_swizzle_specifier/2.2 ·
r#312 component_or_swizzle_specifier/2.2 -> component_or_swizzle_specifier ·
r#313 component_or_swizzle_specifier -> period member_ident component_or_swizzle_specifier/1.2 ·
r#314 component_or_swizzle_specifier/1.2 -> component_or_swizzle_specifier ·
r#315 attribute -> attr 'workgroup_size' paren_left expression attrib_end ·
r#316 attribute -> attr 'size' paren_left expression attrib_end ·
r#317 attribute -> attr 'location' paren_left expression attrib_end ·
r#318 attribute -> attr 'interpolate' paren_left interpolation_type_name attrib_end ·
r#319 attribute -> attr 'id' paren_left expression attrib_end ·
r#320 attribute -> attr 'group' paren_left expression attrib_end ·
r#321 attribute -> attr 'builtin' paren_left builtin_value_name attrib_end ·
r#322 attribute -> attr 'binding' paren_left expression attrib_end ·
r#323 attribute -> attr 'align' paren_left expression attrib_end ·
r#324 interpolation_sample_name -> 'center' ·
r#325 interpolation_sample_name -> 'centroid' ·
r#326 interpolation_sample_name -> 'sample' ·
r#327 component_or_swizzle_specifier -> bracket_left expression bracket_right component_or_swizzle_specifier/0.3 ·
r#328 component_or_swizzle_specifier/0.3 -> component_or_swizzle_specifier ·
r#329 texture_and_sampler_types -> multisampled_texture_type less_than type_specifier greater_than ·
r#330 texture_and_sampler_types -> sampled_texture_type less_than type_specifier greater_than ·
r#331 type_specifier_without_ident -> 'atomic' less_than type_specifier greater_than ·
r#332 type_specifier_without_ident -> mat_prefix less_than type_specifier greater_than ·
r#333 type_specifier_without_ident -> vec_prefix less_than type_specifier greater_than ·
r#334 expression_comma_list/0.1 -> expression_comma_list/0.1/0 ·
r#335 argument_expression_list -> paren_left argument_expression_list/0.1 paren_right ·
r#336 primary_expression -> 'bitcast' less_than type_specifier greater_than paren_expression ·
r#337 if_statement/0.1/0 -> else_if_clause if_statement/0.1/0 ·
r#338 if_statement -> if_clause if_statement/0.1 if_statement/0.2 ·
r#339 if_statement/0.2 -> else_clause ·
r#340 loop_statement/0.2 -> loop_statement/0.2/0 ·
r#341 for_header/0.0 -> for_init ·
r#342 for_init -> variable_statement ·
r#343 for_init -> variable_updating_statement ·
r#344 for_init -> func_call_statement ·
r#345 while_statement -> 'while' expression compound_statement ·
r#346 call_phrase -> callable argument_expression_list ·
r#347 variable_statement -> variable_decl equal expression ·
r#348 if_clause -> 'if' expression compound_statement ·
r#349 assignment_statement -> lhs_expression assignment_statement/0.1 expression ·
r#350 assignment_statement -> underscore equal expression ·
r#351 core_lhs_expression -> paren_left lhs_expression paren_right ·
r#352 param_list/0.1 -> param_list/0.1/0 ·
r#353 struct_body_decl/0.2/0/0.0 -> comma struct_member ·
r#354 struct_body_decl/0.2/0 -> struct_body_decl/0.2/0/0.0 struct_body_decl/0.2/0 ·
r#355 struct_body_decl/0.3 -> comma ·
r#356 variable_qualifier/0.2 -> comma access_mode ·
r#357 access_mode -> 'read' ·
r#358 access_mode -> 'write' ·
r#359 access_mode -> 'read_write' ·
r#360 variable_qualifier -> less_than address_space variable_qualifier/0.2 greater_than ·
r#361 attrib_end -> attrib_end/0.0 paren_right ·
r#362 struct_member -> struct_member/0.0 member_ident colon type_specifier ·
r#363 struct_body_decl -> brace_left struct_member struct_body_decl/0.2 struct_body_decl/0.3 brace_right ·
r#364 function_header -> 'fn' ident paren_left function_header/0.3 paren_right function_header/0.5 ·
r#365 arrow -> '->' ·
r#366 param_list/0.1/0/0.0 -> comma param ·
r#367 param_list/0.1/0 -> param_list/0.1/0/0.0 param_list/0.1/0 ·
r#368 param_list -> param param_list/0.1 param_list/0.2 ·
r#369 param_list/0.2 -> comma ·
r#370 variable_statement -> 'const' optionally_typed_ident equal expression ·
r#371 variable_statement -> 'let' optionally_typed_ident equal expression ·
r#372 loop_statement/0.2/0 -> statement loop_statement/0.2/0 ·
r#373 loop_statement/0.3 -> continuing_statement ·
r#374 switch_statement/0.3 -> switch_statement/0.3/0 ·
r#375 switch_body -> case_clause ·
r#376 switch_body -> default_alone_clause ·
r#377 else_clause -> 'else' compound_statement ·
r#378 expression_comma_list/0.1/0/0.0 -> comma expression ·
r#379 expression_comma_list/0.1/0 -> expression_comma_list/0.1/0/0.0 expression_comma_list/0.1/0 ·
r#380 expression_comma_list -> expression expression_comma_list/0.1 expression_comma_list/0.2 ·
r#381 expression_comma_list/0.2 -> comma ·
r#382 array_type_specifier/0.3 -> comma element_count_expression ·
r#383 element_count_expression -> additive_expression ·
r#384 element_count_expression -> bitwise_expression ·
r#385 array_type_specifier -> 'array' less_than type_specifier array_type_specifier/0.3 greater_than ·
r#386 attribute -> attr 'workgroup_size' paren_left expression comma expression attrib_end ·
r#387 attribute -> attr 'interpolate' paren_left interpolation_type_name comma interpolation_sample_name attrib_end ·
r#388 texture_and_sampler_types -> storage_texture_type less_than texel_format comma access_mode greater_than ·
r#389 else_if_clause -> 'else' 'if' expression compound_statement ·
r#390 default_alone_clause/0.1 -> colon ·
r#391 case_selector -> 'default' ·
r#392 case_selector -> expression ·
r#393 switch_statement/0.3/0 -> switch_body switch_statement/0.3/0 ·
r#394 switch_statement -> 'switch' expression brace_left switch_statement/0.3 brace_right ·
r#395 continuing_statement -> 'continuing' continuing_compound_statement ·
r#396 loop_statement -> 'loop' brace_left loop_statement/0.2 loop_statement/0.3 brace_right ·
r#397 for_statement -> 'for' paren_left for_header paren_right compound_statement ·
r#398 for_header/0.2 -> expression ·
r#399 param -> param/0.0 ident colon type_specifier ·
r#400 function_header/0.5/0.1 -> function_header/0.5/0.1/0 ·
r#401 function_header/0.5/0.1/0 -> attribute function_header/0.5/0.1/0 ·
r#402 function_header/0.5 -> arrow function_header/0.5/0.1 type_specifier ·
r#403 continuing_compound_statement/0.1 -> continuing_compound_statement/0.1/0 ·
r#404 case_selectors/0.1 -> case_selectors/0.1/0 ·
r#405 case_clause/0.2 -> colon ·
r#406 default_alone_clause -> 'default' default_alone_clause/0.1 compound_statement ·
r#407 type_specifier_without_ident/7.5 -> comma access_mode ·
r#408 type_specifier_without_ident -> pointer less_than address_space comma type_specifier type_specifier_without_ident/7.5 greater_than ·
r#409 attribute -> attr 'workgroup_size' paren_left expression comma expression comma expression attrib_end ·
r#410 case_clause -> 'case' case_selectors case_clause/0.2 compound_statement ·
r#411 case_selectors/0.1/0/0.0 -> comma case_selector ·
r#412 case_selectors/0.1/0 -> case_selectors/0.1/0/0.0 case_selectors/0.1/0 ·
r#413 case_selectors -> case_selector case_selectors/0.1 case_selectors/0.2 ·
r#414 case_selectors/0.2 -> comma ·
r#415 continuing_compound_statement/0.1/0 -> statement continuing_compound_statement/0.1/0 ·
r#416 continuing_compound_statement/0.2 -> break_if_statement ·
r#417 for_header -> for_header/0.0 semicolon for_header/0.2 semicolon for_header/0.4 ·
r#418 for_header/0.4 -> for_update ·
r#419 for_update -> variable_updating_statement ·
r#420 for_update -> func_call_statement ·
r#421 continuing_compound_statement -> brace_left continuing_compound_statement/0.1 continuing_compound_statement/0.2 brace_right ·
r#422 break_if_statement -> 'break' 'if' expression semicolon ·

=Action:
[#0 'diagnostic']: s#7
[#0 'enable']: s#8
[#1 EndOfText]: acc
[#2 ';']: s#25
[#2 '@']: s#38
[#2 'const']: s#27
[#2 'static_assert']: s#32
[#2 'struct']: s#30
[#2 'type']: s#29
[#3 ';']: r#0
[#3 '@']: r#0
[#3 'const']: r#0
[#3 'fn']: r#0
[#3 'override']: r#0
[#3 'static_assert']: r#0
[#3 'struct']: r#0
[#3 'type']: r#0
[#3 'var']: r#0
[#3 EndOfText]: r#0
[#4 'diagnostic']: s#7
[#4 'enable']: s#8
[#5 ';']: r#1
[#5 '@']: r#1
[#5 'const']: r#1
[#5 'diagnostic']: r#1
[#5 'enable']: r#1
[#5 'fn']: r#1
[#5 'override']: r#1
[#5 'static_assert']: r#1
[#5 'struct']: r#1
[#5 'type']: r#1
[#5 'var']: r#1
[#5 EndOfText]: r#1
[#6 ';']: r#2
[#6 '@']: r#2
[#6 'const']: r#2
[#6 'diagnostic']: r#2
[#6 'enable']: r#2
[#6 'fn']: r#2
[#6 'override']: r#2
[#6 'static_assert']: r#2
[#6 'struct']: r#2
[#6 'type']: r#2
[#6 'var']: r#2
[#6 EndOfText]: r#2
[#7 '(']: s#13
[#8 'f16']: s#10
[#9 ';']: s#25
[#10 ';']: r#3
[#11 ';']: s#25
[#12 'error']: s#125
[#12 'off']: s#127
[#12 'warning']: s#126
[#13 '!']: r#4
[#13 '&']: r#4
[#13 '(']: r#4
[#13 ')']: r#4
[#13 '*']: r#4
[#13 '-']: r#4
[#13 ';']: r#4
[#13 '@']: r#4
[#13 '_']: r#4
[#13 'array']: r#4
[#13 'atomic']: r#4
[#13 'bitcast']: r#4
[#13 'bool']: r#4
[#13 'const']: r#4
[#13 'f16']: r#4
[#13 'f32']: r#4
[#13 'false']: r#4
[#13 'i32']: r#4
[#13 'let']: r#4
[#13 'mat2x2']: r#4
[#13 'mat2x3']: r#4
[#13 'mat2x4']: r#4
[#13 'mat3x2']: r#4
[#13 'mat3x3']: r#4
[#13 'mat3x4']: r#4
[#13 'mat4x2']: r#4
[#13 'mat4x3']: r#4
[#13 'mat4x4']: r#4
[#13 'ptr']: r#4
[#13 'sampler']: r#4
[#13 'sampler_comparison']: r#4
[#13 'texture_1d']: r#4
[#13 'texture_2d']: r#4
[#13 'texture_2d_array']: r#4
[#13 'texture_3d']: r#4
[#13 'texture_cube']: r#4
[#13 'texture_cube_array']: r#4
[#13 'texture_depth_2d']: r#4
[#13 'texture_depth_2d_array']: r#4
[#13 'texture_depth_cube']: r#4
[#13 'texture_depth_cube_array']: r#4
[#13 'texture_depth_multisampled_2d']: r#4
[#13 'texture_multisampled_2d']: r#4
[#13 'texture_storage_1d']: r#4
[#13 'texture_storage_2d']: r#4
[#13 'texture_storage_2d_array']: r#4
[#13 'texture_storage_3d']: r#4
[#13 'true']: r#4
[#13 'u32']: r#4
[#13 'var']: r#4
[#13 'vec2']: r#4
[#13 'vec3']: r#4
[#13 'vec4']: r#4
[#13 '~']: r#4
[#13 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#4
[#13 /0[xX][0-9a-fA-F]+[iu]?/]: r#4
[#14 ';']: r#5
[#14 '@']: r#5
[#14 'const']: r#5
[#14 'fn']: r#5
[#14 'override']: r#5
[#14 'static_assert']: r#5
[#14 'struct']: r#5
[#14 'type']: r#5
[#14 'var']: r#5
[#14 EndOfText]: r#5
[#15 EndOfText]: r#6
[#16 EndOfText]: r#7
[#17 ';']: s#25
[#17 '@']: s#38
[#17 'const']: s#27
[#17 'static_assert']: s#32
[#17 'struct']: s#30
[#17 'type']: s#29
[#18 ';']: r#8
[#18 '@']: r#8
[#18 'const']: r#8
[#18 'fn']: r#8
[#18 'override']: r#8
[#18 'static_assert']: r#8
[#18 'struct']: r#8
[#18 'type']: r#8
[#18 'var']: r#8
[#18 EndOfText]: r#8
[#19 ';']: s#25
[#20 ';']: s#25
[#21 ';']: s#25
[#22 ';']: r#9
[#22 '@']: r#9
[#22 'const']: r#9
[#22 'fn']: r#9
[#22 'override']: r#9
[#22 'static_assert']: r#9
[#22 'struct']: r#9
[#22 'type']: r#9
[#22 'var']: r#9
[#22 EndOfText]: r#9
[#23 ';']: r#10
[#23 '@']: r#10
[#23 'const']: r#10
[#23 'fn']: r#10
[#23 'override']: r#10
[#23 'static_assert']: r#10
[#23 'struct']: r#10
[#23 'type']: r#10
[#23 'var']: r#10
[#23 EndOfText]: r#10
[#24 ';']: s#25
[#25 '!']: r#11
[#25 '&']: r#11
[#25 '(']: r#11
[#25 ')']: r#11
[#25 '*']: r#11
[#25 '-']: r#11
[#25 ';']: r#11
[#25 '@']: r#11
[#25 '_']: r#11
[#25 'array']: r#11
[#25 'atomic']: r#11
[#25 'bitcast']: r#11
[#25 'bool']: r#11
[#25 'break']: r#11
[#25 'const']: r#11
[#25 'continue']: r#11
[#25 'continuing']: r#11
[#25 'diagnostic']: r#11
[#25 'discard']: r#11
[#25 'enable']: r#11
[#25 'f16']: r#11
[#25 'f32']: r#11
[#25 'false']: r#11
[#25 'fn']: r#11
[#25 'for']: r#11
[#25 'i32']: r#11
[#25 'if']: r#11
[#25 'let']: r#11
[#25 'loop']: r#11
[#25 'mat2x2']: r#11
[#25 'mat2x3']: r#11
[#25 'mat2x4']: r#11
[#25 'mat3x2']: r#11
[#25 'mat3x3']: r#11
[#25 'mat3x4']: r#11
[#25 'mat4x2']: r#11
[#25 'mat4x3']: r#11
[#25 'mat4x4']: r#11
[#25 'override']: r#11
[#25 'ptr']: r#11
[#25 'return']: r#11
[#25 'sampler']: r#11
[#25 'sampler_comparison']: r#11
[#25 'static_assert']: r#11
[#25 'struct']: r#11
[#25 'switch']: r#11
[#25 'texture_1d']: r#11
[#25 'texture_2d']: r#11
[#25 'texture_2d_array']: r#11
[#25 'texture_3d']: r#11
[#25 'texture_cube']: r#11
[#25 'texture_cube_array']: r#11
[#25 'texture_depth_2d']: r#11
[#25 'texture_depth_2d_array']: r#11
[#25 'texture_depth_cube']: r#11
[#25 'texture_depth_cube_array']: r#11
[#25 'texture_depth_multisampled_2d']: r#11
[#25 'texture_multisampled_2d']: r#11
[#25 'texture_storage_1d']: r#11
[#25 'texture_storage_2d']: r#11
[#25 'texture_storage_2d_array']: r#11
[#25 'texture_storage_3d']: r#11
[#25 'true']: r#11
[#25 'type']: r#11
[#25 'u32']: r#11
[#25 'var']: r#11
[#25 'vec2']: r#11
[#25 'vec3']: r#11
[#25 'vec4']: r#11
[#25 'while']: r#11
[#25 '{']: r#11
[#25 '}']: r#11
[#25 '~']: r#11
[#25 /0[xX][0-9a-fA-F]+[iu]?/]: r#11
[#25 EndOfText]: r#11
[#26 'var']: s#118
[#27 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#28 'override']: s#114
[#29 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#30 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#31 'fn']: s#111
[#32 '!']: s#77
[#32 '&']: s#80
[#32 '(']: s#13
[#32 '*']: s#79
[#32 '-']: s#76
[#32 '@']: s#38
[#32 'bitcast']: s#85
[#32 'false']: s#98
[#32 'true']: s#97
[#32 '~']: s#78
[#32 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#32 /0[fh]/]: s#102
[#32 /0[iu]?/]: s#99
[#32 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#32 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#32 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#32 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#32 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#32 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#32 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#32 /[1-9][0-9]*[fh]/]: s#103
[#32 /[1-9][0-9]*[iu]?/]: s#100
[#33 'var']: r#12
[#34 'override']: r#13
[#35 'fn']: r#14
[#36 '@']: s#38
[#37 'align']: s#39
[#37 'binding']: s#40
[#37 'builtin']: s#41
[#37 'compute']: s#53
[#37 'const']: s#42
[#37 'diagnostic']: s#43
[#37 'fragment']: s#52
[#37 'group']: s#44
[#37 'id']: s#45
[#37 'interpolate']: s#46
[#37 'invariant']: s#47
[#37 'location']: s#48
[#37 'size']: s#49
[#37 'vertex']: s#51
[#37 'workgroup_size']: s#50
[#38 'const']: r#15
[#38 'diagnostic']: r#15
[#39 '(']: s#13
[#40 '(']: s#13
[#41 '(']: s#13
[#42 '@']: r#16
[#42 'array']: r#16
[#42 'atomic']: r#16
[#42 'bool']: r#16
[#42 'f16']: r#16
[#42 'f32']: r#16
[#42 'fn']: r#16
[#42 'i32']: r#16
[#42 'mat2x2']: r#16
[#42 'mat2x3']: r#16
[#42 'mat2x4']: r#16
[#42 'mat3x2']: r#16
[#42 'mat3x3']: r#16
[#42 'mat3x4']: r#16
[#42 'mat4x2']: r#16
[#42 'mat4x3']: r#16
[#42 'mat4x4']: r#16
[#42 'override']: r#16
[#42 'ptr']: r#16
[#42 'sampler']: r#16
[#42 'sampler_comparison']: r#16
[#42 'texture_1d']: r#16
[#42 'texture_2d']: r#16
[#42 'texture_2d_array']: r#16
[#42 'texture_3d']: r#16
[#42 'texture_cube']: r#16
[#42 'texture_cube_array']: r#16
[#42 'texture_depth_2d']: r#16
[#42 'texture_depth_2d_array']: r#16
[#42 'texture_depth_cube']: r#16
[#42 'texture_depth_cube_array']: r#16
[#42 'texture_depth_multisampled_2d']: r#16
[#42 'texture_multisampled_2d']: r#16
[#42 'texture_storage_1d']: r#16
[#42 'texture_storage_2d']: r#16
[#42 'texture_storage_2d_array']: r#16
[#42 'texture_storage_3d']: r#16
[#42 'u32']: r#16
[#42 'var']: r#16
[#42 'vec2']: r#16
[#42 'vec3']: r#16
[#42 'vec4']: r#16
[#43 '(']: s#13
[#44 '(']: s#13
[#45 '(']: s#13
[#46 '(']: s#13
[#47 '@']: r#17
[#47 'array']: r#17
[#47 'atomic']: r#17
[#47 'bool']: r#17
[#47 'f16']: r#17
[#47 'f32']: r#17
[#47 'fn']: r#17
[#47 'i32']: r#17
[#47 'mat2x2']: r#17
[#47 'mat2x3']: r#17
[#47 'mat2x4']: r#17
[#47 'mat3x2']: r#17
[#47 'mat3x3']: r#17
[#47 'mat3x4']: r#17
[#47 'mat4x2']: r#17
[#47 'mat4x3']: r#17
[#47 'mat4x4']: r#17
[#47 'override']: r#17
[#47 'ptr']: r#17
[#47 'sampler']: r#17
[#47 'sampler_comparison']: r#17
[#47 'texture_1d']: r#17
[#47 'texture_2d']: r#17
[#47 'texture_2d_array']: r#17
[#47 'texture_3d']: r#17
[#47 'texture_cube']: r#17
[#47 'texture_cube_array']: r#17
[#47 'texture_depth_2d']: r#17
[#47 'texture_depth_2d_array']: r#17
[#47 'texture_depth_cube']: r#17
[#47 'texture_depth_cube_array']: r#17
[#47 'texture_depth_multisampled_2d']: r#17
[#47 'texture_multisampled_2d']: r#17
[#47 'texture_storage_1d']: r#17
[#47 'texture_storage_2d']: r#17
[#47 'texture_storage_2d_array']: r#17
[#47 'texture_storage_3d']: r#17
[#47 'u32']: r#17
[#47 'var']: r#17
[#47 'vec2']: r#17
[#47 'vec3']: r#17
[#47 'vec4']: r#17
[#48 '(']: s#13
[#49 '(']: s#13
[#50 '(']: s#13
[#51 '@']: r#18
[#51 'array']: r#18
[#51 'atomic']: r#18
[#51 'bool']: r#18
[#51 'f16']: r#18
[#51 'f32']: r#18
[#51 'fn']: r#18
[#51 'i32']: r#18
[#51 'mat2x2']: r#18
[#51 'mat2x3']: r#18
[#51 'mat2x4']: r#18
[#51 'mat3x2']: r#18
[#51 'mat3x3']: r#18
[#51 'mat3x4']: r#18
[#51 'mat4x2']: r#18
[#51 'mat4x3']: r#18
[#51 'mat4x4']: r#18
[#51 'override']: r#18
[#51 'ptr']: r#18
[#51 'sampler']: r#18
[#51 'sampler_comparison']: r#18
[#51 'texture_1d']: r#18
[#51 'texture_2d']: r#18
[#51 'texture_2d_array']: r#18
[#51 'texture_3d']: r#18
[#51 'texture_cube']: r#18
[#51 'texture_cube_array']: r#18
[#51 'texture_depth_2d']: r#18
[#51 'texture_depth_2d_array']: r#18
[#51 'texture_depth_cube']: r#18
[#51 'texture_depth_cube_array']: r#18
[#51 'texture_depth_multisampled_2d']: r#18
[#51 'texture_multisampled_2d']: r#18
[#51 'texture_storage_1d']: r#18
[#51 'texture_storage_2d']: r#18
[#51 'texture_storage_2d_array']: r#18
[#51 'texture_storage_3d']: r#18
[#51 'u32']: r#18
[#51 'var']: r#18
[#51 'vec2']: r#18
[#51 'vec3']: r#18
[#51 'vec4']: r#18
[#52 '@']: r#19
[#52 'array']: r#19
[#52 'atomic']: r#19
[#52 'bool']: r#19
[#52 'f16']: r#19
[#52 'f32']: r#19
[#52 'fn']: r#19
[#52 'i32']: r#19
[#52 'mat2x2']: r#19
[#52 'mat2x3']: r#19
[#52 'mat2x4']: r#19
[#52 'mat3x2']: r#19
[#52 'mat3x3']: r#19
[#52 'mat3x4']: r#19
[#52 'mat4x2']: r#19
[#52 'mat4x3']: r#19
[#52 'mat4x4']: r#19
[#52 'override']: r#19
[#52 'ptr']: r#19
[#52 'sampler']: r#19
[#52 'sampler_comparison']: r#19
[#52 'texture_1d']: r#19
[#52 'texture_2d']: r#19
[#52 'texture_2d_array']: r#19
[#52 'texture_3d']: r#19
[#52 'texture_cube']: r#19
[#52 'texture_cube_array']: r#19
[#52 'texture_depth_2d']: r#19
[#52 'texture_depth_2d_array']: r#19
[#52 'texture_depth_cube']: r#19
[#52 'texture_depth_cube_array']: r#19
[#52 'texture_depth_multisampled_2d']: r#19
[#52 'texture_multisampled_2d']: r#19
[#52 'texture_storage_1d']: r#19
[#52 'texture_storage_2d']: r#19
[#52 'texture_storage_2d_array']: r#19
[#52 'texture_storage_3d']: r#19
[#52 'u32']: r#19
[#52 'var']: r#19
[#52 'vec2']: r#19
[#52 'vec3']: r#19
[#52 'vec4']: r#19
[#53 '@']: r#20
[#53 'array']: r#20
[#53 'atomic']: r#20
[#53 'bool']: r#20
[#53 'f16']: r#20
[#53 'f32']: r#20
[#53 'fn']: r#20
[#53 'i32']: r#20
[#53 'mat2x2']: r#20
[#53 'mat2x3']: r#20
[#53 'mat2x4']: r#20
[#53 'mat3x2']: r#20
[#53 'mat3x3']: r#20
[#53 'mat3x4']: r#20
[#53 'mat4x2']: r#20
[#53 'mat4x3']: r#20
[#53 'mat4x4']: r#20
[#53 'override']: r#20
[#53 'ptr']: r#20
[#53 'sampler']: r#20
[#53 'sampler_comparison']: r#20
[#53 'texture_1d']: r#20
[#53 'texture_2d']: r#20
[#53 'texture_2d_array']: r#20
[#53 'texture_3d']: r#20
[#53 'texture_cube']: r#20
[#53 'texture_cube_array']: r#20
[#53 'texture_depth_2d']: r#20
[#53 'texture_depth_2d_array']: r#20
[#53 'texture_depth_cube']: r#20
[#53 'texture_depth_cube_array']: r#20
[#53 'texture_depth_multisampled_2d']: r#20
[#53 'texture_multisampled_2d']: r#20
[#53 'texture_storage_1d']: r#20
[#53 'texture_storage_2d']: r#20
[#53 'texture_storage_2d_array']: r#20
[#53 'texture_storage_3d']: r#20
[#53 'u32']: r#20
[#53 'var']: r#20
[#53 'vec2']: r#20
[#53 'vec3']: r#20
[#53 'vec4']: r#20
[#54 'var']: r#21
[#55 'override']: r#22
[#56 'fn']: r#23
[#57 ';']: r#24
[#58 '&&']: r#27
[#58 ')']: r#25
[#58 ',']: r#25
[#58 ':']: r#25
[#58 ';']: r#25
[#58 ']']: r#25
[#58 '{']: r#25
[#58 '||']: r#26
[#59 '||']: s#254
[#60 '&&']: s#252
[#61 ')']: r#28
[#61 ',']: r#28
[#61 ':']: r#28
[#61 ';']: r#28
[#61 ']']: r#28
[#61 '{']: r#28
[#62 '!=']: s#250
[#62 '&&']: r#29
[#62 ')']: r#29
[#62 ',']: r#29
[#62 ':']: r#29
[#62 ';']: r#29
[#62 '<']: s#135
[#62 '<=']: s#247
[#62 '==']: s#249
[#62 '>']: s#246
[#62 '>=']: s#248
[#62 ']']: r#29
[#62 '{']: r#29
[#62 '||']: r#29
[#63 '&']: s#80
[#64 '|']: s#238
[#65 '^']: s#236
[#66 '!=']: r#30
[#66 '&&']: r#30
[#66 ')']: r#30
[#66 '+']: s#234
[#66 ',']: r#30
[#66 '-']: s#76
[#66 ':']: r#30
[#66 ';']: r#30
[#66 '<']: r#30
[#66 '<=']: r#30
[#66 '==']: r#30
[#66 '>']: r#30
[#66 '>=']: r#30
[#66 ']']: r#30
[#66 '{']: r#30
[#66 '||']: r#30
[#67 '!=']: r#34
[#67 '%']: r#34
[#67 '&&']: r#34
[#67 '&']: r#31
[#67 ')']: r#34
[#67 '*']: r#34
[#67 '+']: r#34
[#67 ',']: r#34
[#67 '-']: r#34
[#67 '/']: r#34
[#67 ':']: r#34
[#67 ';']: r#34
[#67 '<']: r#34
[#67 '<<']: s#229
[#67 '<=']: r#34
[#67 '==']: r#34
[#67 '>']: r#34
[#67 '>=']: r#34
[#67 '>>']: s#230
[#67 ']']: r#34
[#67 '^']: r#33
[#67 '{']: r#34
[#67 '|']: r#32
[#67 '||']: r#34
[#68 '!=']: r#35
[#68 '%']: s#226
[#68 '&&']: r#35
[#68 ')']: r#35
[#68 '*']: s#79
[#68 '+']: r#35
[#68 ',']: r#35
[#68 '-']: r#35
[#68 '/']: s#225
[#68 ':']: r#35
[#68 ';']: r#35
[#68 '<']: r#35
[#68 '<=']: r#35
[#68 '==']: r#35
[#68 '>']: r#35
[#68 '>=']: r#35
[#68 ']']: r#35
[#68 '{']: r#35
[#68 '||']: r#35
[#69 '!=']: r#36
[#69 '%']: r#36
[#69 '&&']: r#36
[#69 '&']: r#36
[#69 ')']: r#36
[#69 '*']: r#36
[#69 '+']: r#36
[#69 ',']: r#36
[#69 '-']: r#36
[#69 '/']: r#36
[#69 ':']: r#36
[#69 ';']: r#36
[#69 '<']: r#36
[#69 '<<']: r#36
[#69 '<=']: r#36
[#69 '==']: r#36
[#69 '>']: r#36
[#69 '>=']: r#36
[#69 '>>']: r#36
[#69 ']']: r#36
[#69 '^']: r#36
[#69 '{']: r#36
[#69 '|']: r#36
[#69 '||']: r#36
[#70 '!']: s#77
[#70 '&']: s#80
[#70 '(']: s#13
[#70 '*']: s#79
[#70 '-']: s#76
[#70 '@']: s#38
[#70 'bitcast']: s#85
[#70 'false']: s#98
[#70 'true']: s#97
[#70 '~']: s#78
[#70 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#70 /0[fh]/]: s#102
[#70 /0[iu]?/]: s#99
[#70 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#70 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#70 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#70 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#70 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#70 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#70 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#70 /[1-9][0-9]*[fh]/]: s#103
[#70 /[1-9][0-9]*[iu]?/]: s#100
[#71 '!']: s#77
[#71 '&']: s#80
[#71 '(']: s#13
[#71 '*']: s#79
[#71 '-']: s#76
[#71 '@']: s#38
[#71 'bitcast']: s#85
[#71 'false']: s#98
[#71 'true']: s#97
[#71 '~']: s#78
[#71 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#71 /0[fh]/]: s#102
[#71 /0[iu]?/]: s#99
[#71 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#71 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#71 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#71 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#71 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#71 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#71 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#71 /[1-9][0-9]*[fh]/]: s#103
[#71 /[1-9][0-9]*[iu]?/]: s#100
[#72 '!']: s#77
[#72 '&']: s#80
[#72 '(']: s#13
[#72 '*']: s#79
[#72 '-']: s#76
[#72 '@']: s#38
[#72 'bitcast']: s#85
[#72 'false']: s#98
[#72 'true']: s#97
[#72 '~']: s#78
[#72 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#72 /0[fh]/]: s#102
[#72 /0[iu]?/]: s#99
[#72 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#72 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#72 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#72 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#72 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#72 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#72 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#72 /[1-9][0-9]*[fh]/]: s#103
[#72 /[1-9][0-9]*[iu]?/]: s#100
[#73 '!']: s#77
[#73 '&']: s#80
[#73 '(']: s#13
[#73 '*']: s#79
[#73 '-']: s#76
[#73 '@']: s#38
[#73 'bitcast']: s#85
[#73 'false']: s#98
[#73 'true']: s#97
[#73 '~']: s#78
[#73 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#73 /0[fh]/]: s#102
[#73 /0[iu]?/]: s#99
[#73 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#73 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#73 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#73 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#73 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#73 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#73 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#73 /[1-9][0-9]*[fh]/]: s#103
[#73 /[1-9][0-9]*[iu]?/]: s#100
[#74 '!']: s#77
[#74 '&']: s#80
[#74 '(']: s#13
[#74 '*']: s#79
[#74 '-']: s#76
[#74 '@']: s#38
[#74 'bitcast']: s#85
[#74 'false']: s#98
[#74 'true']: s#97
[#74 '~']: s#78
[#74 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#74 /0[fh]/]: s#102
[#74 /0[iu]?/]: s#99
[#74 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#74 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#74 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#74 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#74 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#74 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#74 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#74 /[1-9][0-9]*[fh]/]: s#103
[#74 /[1-9][0-9]*[iu]?/]: s#100
[#75 '.']: s#215
[#75 '[']: s#214
[#76 '!']: r#37
[#76 '&']: r#37
[#76 '(']: r#37
[#76 '*']: r#37
[#76 '-']: r#37
[#76 '@']: r#37
[#76 'array']: r#37
[#76 'atomic']: r#37
[#76 'bitcast']: r#37
[#76 'bool']: r#37
[#76 'f16']: r#37
[#76 'f32']: r#37
[#76 'false']: r#37
[#76 'i32']: r#37
[#76 'mat2x2']: r#37
[#76 'mat2x3']: r#37
[#76 'mat2x4']: r#37
[#76 'mat3x2']: r#37
[#76 'mat3x3']: r#37
[#76 'mat3x4']: r#37
[#76 'mat4x2']: r#37
[#76 'mat4x3']: r#37
[#76 'mat4x4']: r#37
[#76 'ptr']: r#37
[#76 'sampler']: r#37
[#76 'sampler_comparison']: r#37
[#76 'texture_1d']: r#37
[#76 'texture_2d']: r#37
[#76 'texture_2d_array']: r#37
[#76 'texture_3d']: r#37
[#76 'texture_cube']: r#37
[#76 'texture_cube_array']: r#37
[#76 'texture_depth_2d']: r#37
[#76 'texture_depth_2d_array']: r#37
[#76 'texture_depth_cube']: r#37
[#76 'texture_depth_cube_array']: r#37
[#76 'texture_depth_multisampled_2d']: r#37
[#76 'texture_multisampled_2d']: r#37
[#76 'texture_storage_1d']: r#37
[#76 'texture_storage_2d']: r#37
[#76 'texture_storage_2d_array']: r#37
[#76 'texture_storage_3d']: r#37
[#76 'true']: r#37
[#76 'u32']: r#37
[#76 'vec2']: r#37
[#76 'vec3']: r#37
[#76 'vec4']: r#37
[#76 '~']: r#37
[#76 /0[xX][0-9a-fA-F]+[iu]?/]: r#37
[#77 '!']: r#38
[#77 '&']: r#38
[#77 '(']: r#38
[#77 '*']: r#38
[#77 '-']: r#38
[#77 '@']: r#38
[#77 'array']: r#38
[#77 'atomic']: r#38
[#77 'bitcast']: r#38
[#77 'bool']: r#38
[#77 'f16']: r#38
[#77 'f32']: r#38
[#77 'false']: r#38
[#77 'i32']: r#38
[#77 'mat2x2']: r#38
[#77 'mat2x3']: r#38
[#77 'mat2x4']: r#38
[#77 'mat3x2']: r#38
[#77 'mat3x3']: r#38
[#77 'mat3x4']: r#38
[#77 'mat4x2']: r#38
[#77 'mat4x3']: r#38
[#77 'mat4x4']: r#38
[#77 'ptr']: r#38
[#77 'sampler']: r#38
[#77 'sampler_comparison']: r#38
[#77 'texture_1d']: r#38
[#77 'texture_2d']: r#38
[#77 'texture_2d_array']: r#38
[#77 'texture_3d']: r#38
[#77 'texture_cube']: r#38
[#77 'texture_cube_array']: r#38
[#77 'texture_depth_2d']: r#38
[#77 'texture_depth_2d_array']: r#38
[#77 'texture_depth_cube']: r#38
[#77 'texture_depth_cube_array']: r#38
[#77 'texture_depth_multisampled_2d']: r#38
[#77 'texture_multisampled_2d']: r#38
[#77 'texture_storage_1d']: r#38
[#77 'texture_storage_2d']: r#38
[#77 'texture_storage_2d_array']: r#38
[#77 'texture_storage_3d']: r#38
[#77 'true']: r#38
[#77 'u32']: r#38
[#77 'vec2']: r#38
[#77 'vec3']: r#38
[#77 'vec4']: r#38
[#77 '~']: r#38
[#77 /0[xX][0-9a-fA-F]+[iu]?/]: r#38
[#78 '!']: r#39
[#78 '&']: r#39
[#78 '(']: r#39
[#78 '*']: r#39
[#78 '-']: r#39
[#78 '@']: r#39
[#78 'array']: r#39
[#78 'atomic']: r#39
[#78 'bitcast']: r#39
[#78 'bool']: r#39
[#78 'f16']: r#39
[#78 'f32']: r#39
[#78 'false']: r#39
[#78 'i32']: r#39
[#78 'mat2x2']: r#39
[#78 'mat2x3']: r#39
[#78 'mat2x4']: r#39
[#78 'mat3x2']: r#39
[#78 'mat3x3']: r#39
[#78 'mat3x4']: r#39
[#78 'mat4x2']: r#39
[#78 'mat4x3']: r#39
[#78 'mat4x4']: r#39
[#78 'ptr']: r#39
[#78 'sampler']: r#39
[#78 'sampler_comparison']: r#39
[#78 'texture_1d']: r#39
[#78 'texture_2d']: r#39
[#78 'texture_2d_array']: r#39
[#78 'texture_3d']: r#39
[#78 'texture_cube']: r#39
[#78 'texture_cube_array']: r#39
[#78 'texture_depth_2d']: r#39
[#78 'texture_depth_2d_array']: r#39
[#78 'texture_depth_cube']: r#39
[#78 'texture_depth_cube_array']: r#39
[#78 'texture_depth_multisampled_2d']: r#39
[#78 'texture_multisampled_2d']: r#39
[#78 'texture_storage_1d']: r#39
[#78 'texture_storage_2d']: r#39
[#78 'texture_storage_2d_array']: r#39
[#78 'texture_storage_3d']: r#39
[#78 'true']: r#39
[#78 'u32']: r#39
[#78 'vec2']: r#39
[#78 'vec3']: r#39
[#78 'vec4']: r#39
[#78 '~']: r#39
[#78 /0[xX][0-9a-fA-F]+[iu]?/]: r#39
[#79 '!']: r#40
[#79 '&']: r#40
[#79 '(']: r#40
[#79 '*']: r#40
[#79 '-']: r#40
[#79 '@']: r#40
[#79 'array']: r#40
[#79 'atomic']: r#40
[#79 'bitcast']: r#40
[#79 'bool']: r#40
[#79 'f16']: r#40
[#79 'f32']: r#40
[#79 'false']: r#40
[#79 'i32']: r#40
[#79 'mat2x2']: r#40
[#79 'mat2x3']: r#40
[#79 'mat2x4']: r#40
[#79 'mat3x2']: r#40
[#79 'mat3x3']: r#40
[#79 'mat3x4']: r#40
[#79 'mat4x2']: r#40
[#79 'mat4x3']: r#40
[#79 'mat4x4']: r#40
[#79 'ptr']: r#40
[#79 'sampler']: r#40
[#79 'sampler_comparison']: r#40
[#79 'texture_1d']: r#40
[#79 'texture_2d']: r#40
[#79 'texture_2d_array']: r#40
[#79 'texture_3d']: r#40
[#79 'texture_cube']: r#40
[#79 'texture_cube_array']: r#40
[#79 'texture_depth_2d']: r#40
[#79 'texture_depth_2d_array']: r#40
[#79 'texture_depth_cube']: r#40
[#79 'texture_depth_cube_array']: r#40
[#79 'texture_depth_multisampled_2d']: r#40
[#79 'texture_multisampled_2d']: r#40
[#79 'texture_storage_1d']: r#40
[#79 'texture_storage_2d']: r#40
[#79 'texture_storage_2d_array']: r#40
[#79 'texture_storage_3d']: r#40
[#79 'true']: r#40
[#79 'u32']: r#40
[#79 'vec2']: r#40
[#79 'vec3']: r#40
[#79 'vec4']: r#40
[#79 '~']: r#40
[#79 /0[xX][0-9a-fA-F]+[iu]?/]: r#40
[#80 '!']: r#41
[#80 '&']: r#41
[#80 '(']: r#41
[#80 '*']: r#41
[#80 '-']: r#41
[#80 '@']: r#41
[#80 'array']: r#41
[#80 'atomic']: r#41
[#80 'bitcast']: r#41
[#80 'bool']: r#41
[#80 'f16']: r#41
[#80 'f32']: r#41
[#80 'false']: r#41
[#80 'i32']: r#41
[#80 'mat2x2']: r#41
[#80 'mat2x3']: r#41
[#80 'mat2x4']: r#41
[#80 'mat3x2']: r#41
[#80 'mat3x3']: r#41
[#80 'mat3x4']: r#41
[#80 'mat4x2']: r#41
[#80 'mat4x3']: r#41
[#80 'mat4x4']: r#41
[#80 'ptr']: r#41
[#80 'sampler']: r#41
[#80 'sampler_comparison']: r#41
[#80 'texture_1d']: r#41
[#80 'texture_2d']: r#41
[#80 'texture_2d_array']: r#41
[#80 'texture_3d']: r#41
[#80 'texture_cube']: r#41
[#80 'texture_cube_array']: r#41
[#80 'texture_depth_2d']: r#41
[#80 'texture_depth_2d_array']: r#41
[#80 'texture_depth_cube']: r#41
[#80 'texture_depth_cube_array']: r#41
[#80 'texture_depth_multisampled_2d']: r#41
[#80 'texture_multisampled_2d']: r#41
[#80 'texture_storage_1d']: r#41
[#80 'texture_storage_2d']: r#41
[#80 'texture_storage_2d_array']: r#41
[#80 'texture_storage_3d']: r#41
[#80 'true']: r#41
[#80 'u32']: r#41
[#80 'vec2']: r#41
[#80 'vec3']: r#41
[#80 'vec4']: r#41
[#80 '~']: r#41
[#80 /0[xX][0-9a-fA-F]+[iu]?/]: r#41
[#81 '!=']: r#42
[#81 '%']: r#42
[#81 '&&']: r#42
[#81 '&']: r#42
[#81 ')']: r#42
[#81 '*']: r#42
[#81 '+']: r#42
[#81 ',']: r#42
[#81 '-']: r#42
[#81 '.']: r#42
[#81 '/']: r#42
[#81 ':']: r#42
[#81 ';']: r#42
[#81 '<']: r#42
[#81 '<<']: r#42
[#81 '<=']: r#42
[#81 '==']: r#42
[#81 '>']: r#42
[#81 '>=']: r#42
[#81 '>>']: r#42
[#81 '[']: r#42
[#81 ']']: r#42
[#81 '^']: r#42
[#81 '{']: r#42
[#81 '|']: r#42
[#81 '||']: r#42
[#82 'array']: s#160
[#82 'atomic']: s#168
[#82 'bool']: s#161
[#82 'f16']: s#183
[#82 'f32']: s#182
[#82 'i32']: s#184
[#82 'mat2x2']: s#173
[#82 'mat2x3']: s#174
[#82 'mat2x4']: s#175
[#82 'mat3x2']: s#176
[#82 'mat3x3']: s#177
[#82 'mat3x4']: s#178
[#82 'mat4x2']: s#179
[#82 'mat4x3']: s#180
[#82 'mat4x4']: s#181
[#82 'ptr']: s#186
[#82 'sampler']: s#192
[#82 'sampler_comparison']: s#193
[#82 'texture_1d']: s#199
[#82 'texture_2d']: s#200
[#82 'texture_2d_array']: s#201
[#82 'texture_3d']: s#202
[#82 'texture_cube']: s#203
[#82 'texture_cube_array']: s#204
[#82 'texture_depth_2d']: s#194
[#82 'texture_depth_2d_array']: s#195
[#82 'texture_depth_cube']: s#196
[#82 'texture_depth_cube_array']: s#197
[#82 'texture_depth_multisampled_2d']: s#198
[#82 'texture_multisampled_2d']: s#205
[#82 'texture_storage_1d']: s#206
[#82 'texture_storage_2d']: s#207
[#82 'texture_storage_2d_array']: s#208
[#82 'texture_storage_3d']: s#209
[#82 'u32']: s#185
[#82 'vec2']: s#170
[#82 'vec3']: s#171
[#82 'vec4']: s#172
[#82 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#83 '!=']: r#43
[#83 '%']: r#43
[#83 '&&']: r#43
[#83 '&']: r#43
[#83 ')']: r#43
[#83 '*']: r#43
[#83 '+']: r#43
[#83 ',']: r#43
[#83 '-']: r#43
[#83 '.']: r#43
[#83 '/']: r#43
[#83 ':']: r#43
[#83 ';']: r#43
[#83 '<']: r#43
[#83 '<<']: r#43
[#83 '<=']: r#43
[#83 '==']: r#43
[#83 '>']: r#43
[#83 '>=']: r#43
[#83 '>>']: r#43
[#83 '[']: r#43
[#83 ']']: r#43
[#83 '^']: r#43
[#83 '{']: r#43
[#83 '|']: r#43
[#83 '||']: r#43
[#84 '!=']: r#44
[#84 '%']: r#44
[#84 '&&']: r#44
[#84 '&']: r#44
[#84 ')']: r#44
[#84 '*']: r#44
[#84 '+']: r#44
[#84 ',']: r#44
[#84 '-']: r#44
[#84 '.']: r#44
[#84 '/']: r#44
[#84 ':']: r#44
[#84 ';']: r#44
[#84 '<']: r#44
[#84 '<<']: r#44
[#84 '<=']: r#44
[#84 '==']: r#44
[#84 '>']: r#44
[#84 '>=']: r#44
[#84 '>>']: r#44
[#84 '[']: r#44
[#84 ']']: r#44
[#84 '^']: r#44
[#84 '{']: r#44
[#84 '|']: r#44
[#84 '||']: r#44
[#85 '<']: s#135
[#86 '!=']: r#45
[#86 '%']: r#45
[#86 '%=']: r#45
[#86 '&&']: r#45
[#86 '&']: r#45
[#86 '&=']: r#45
[#86 '(']: r#45
[#86 ')']: r#45
[#86 '*']: r#45
[#86 '*=']: r#45
[#86 '+']: r#45
[#86 '++']: r#45
[#86 '+=']: r#45
[#86 ',']: r#45
[#86 '-']: r#45
[#86 '--']: r#45
[#86 '-=']: r#45
[#86 '.']: r#45
[#86 '/']: r#45
[#86 '/=']: r#45
[#86 ':']: r#45
[#86 ';']: r#45
[#86 '<']: r#45
[#86 '<<']: r#45
[#86 '<<=']: r#45
[#86 '<=']: r#45
[#86 '=']: r#45
[#86 '==']: r#45
[#86 '>']: r#45
[#86 '>=']: r#45
[#86 '>>']: r#45
[#86 '>>=']: r#45
[#86 '[']: r#45
[#86 ']']: r#45
[#86 '^']: r#45
[#86 '^=']: r#45
[#86 '{']: r#45
[#86 '|']: r#45
[#86 '|=']: r#45
[#86 '||']: r#45
[#86 '}']: r#45
[#88 '!=']: r#46
[#88 '%']: r#46
[#88 '&&']: r#46
[#88 '&']: r#46
[#88 ')']: r#46
[#88 '*']: r#46
[#88 '+']: r#46
[#88 ',']: r#46
[#88 '-']: r#46
[#88 '.']: r#46
[#88 '/']: r#46
[#88 ':']: r#46
[#88 ';']: r#46
[#88 '<']: r#46
[#88 '<<']: r#46
[#88 '<=']: r#46
[#88 '==']: r#46
[#88 '>']: r#46
[#88 '>=']: r#46
[#88 '>>']: r#46
[#88 '[']: r#46
[#88 ']']: r#46
[#88 '^']: r#46
[#88 '{']: r#46
[#88 '|']: r#46
[#88 '||']: r#46
[#89 '!=']: r#47
[#89 '%']: r#47
[#89 '&&']: r#47
[#89 '&']: r#47
[#89 ')']: r#47
[#89 '*']: r#47
[#89 '+']: r#47
[#89 ',']: r#47
[#89 '-']: r#47
[#89 '.']: r#47
[#89 '/']: r#47
[#89 ':']: r#47
[#89 ';']: r#47
[#89 '<']: r#47
[#89 '<<']: r#47
[#89 '<=']: r#47
[#89 '==']: r#47
[#89 '>']: r#47
[#89 '>=']: r#47
[#89 '>>']: r#47
[#89 '[']: r#47
[#89 ']']: r#47
[#89 '^']: r#47
[#89 '{']: r#47
[#89 '|']: r#47
[#89 '||']: r#47
[#90 '!=']: r#48
[#90 '%']: r#48
[#90 '&&']: r#48
[#90 '&']: r#48
[#90 ')']: r#48
[#90 '*']: r#48
[#90 '+']: r#48
[#90 ',']: r#48
[#90 '-']: r#48
[#90 '.']: r#48
[#90 '/']: r#48
[#90 ':']: r#48
[#90 ';']: r#48
[#90 '<']: r#48
[#90 '<<']: r#48
[#90 '<=']: r#48
[#90 '==']: r#48
[#90 '>']: r#48
[#90 '>=']: r#48
[#90 '>>']: r#48
[#90 '[']: r#48
[#90 ']']: r#48
[#90 '^']: r#48
[#90 '{']: r#48
[#90 '|']: r#48
[#90 '||']: r#48
[#91 '!']: s#77
[#91 '&']: s#80
[#91 '(']: s#13
[#91 '*']: s#79
[#91 '-']: s#76
[#91 '@']: s#38
[#91 'bitcast']: s#85
[#91 'false']: s#98
[#91 'true']: s#97
[#91 '~']: s#78
[#91 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#91 /0[fh]/]: s#102
[#91 /0[iu]?/]: s#99
[#91 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#91 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#91 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#91 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#91 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#91 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#91 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#91 /[1-9][0-9]*[fh]/]: s#103
[#91 /[1-9][0-9]*[iu]?/]: s#100
[#92 '@']: s#38
[#93 '!=']: r#49
[#93 '%']: r#49
[#93 '&&']: r#49
[#93 '&']: r#49
[#93 ')']: r#49
[#93 '*']: r#49
[#93 '+']: r#49
[#93 ',']: r#49
[#93 '-']: r#49
[#93 '.']: r#49
[#93 '/']: r#49
[#93 ':']: r#49
[#93 ';']: r#49
[#93 '<']: r#49
[#93 '<<']: r#49
[#93 '<=']: r#49
[#93 '==']: r#49
[#93 '>']: r#49
[#93 '>=']: r#49
[#93 '>>']: r#49
[#93 '[']: r#49
[#93 ']']: r#49
[#93 '^']: r#49
[#93 '{']: r#49
[#93 '|']: r#49
[#93 '||']: r#49
[#94 '!=']: r#50
[#94 '%']: r#50
[#94 '&&']: r#50
[#94 '&']: r#50
[#94 ')']: r#50
[#94 '*']: r#50
[#94 '+']: r#50
[#94 ',']: r#50
[#94 '-']: r#50
[#94 '.']: r#50
[#94 '/']: r#50
[#94 ':']: r#50
[#94 ';']: r#50
[#94 '<']: r#50
[#94 '<<']: r#50
[#94 '<=']: r#50
[#94 '==']: r#50
[#94 '>']: r#50
[#94 '>=']: r#50
[#94 '>>']: r#50
[#94 '[']: r#50
[#94 ']']: r#50
[#94 '^']: r#50
[#94 '{']: r#50
[#94 '|']: r#50
[#94 '||']: r#50
[#95 '!=']: r#51
[#95 '%']: r#51
[#95 '&&']: r#51
[#95 '&']: r#51
[#95 ')']: r#51
[#95 '*']: r#51
[#95 '+']: r#51
[#95 ',']: r#51
[#95 '-']: r#51
[#95 '.']: r#51
[#95 '/']: r#51
[#95 ':']: r#51
[#95 ';']: r#51
[#95 '<']: r#51
[#95 '<<']: r#51
[#95 '<=']: r#51
[#95 '==']: r#51
[#95 '>']: r#51
[#95 '>=']: r#51
[#95 '>>']: r#51
[#95 '[']: r#51
[#95 ']']: r#51
[#95 '^']: r#51
[#95 '{']: r#51
[#95 '|']: r#51
[#95 '||']: r#51
[#96 '!=']: r#52
[#96 '%']: r#52
[#96 '&&']: r#52
[#96 '&']: r#52
[#96 ')']: r#52
[#96 '*']: r#52
[#96 '+']: r#52
[#96 ',']: r#52
[#96 '-']: r#52
[#96 '.']: r#52
[#96 '/']: r#52
[#96 ':']: r#52
[#96 ';']: r#52
[#96 '<']: r#52
[#96 '<<']: r#52
[#96 '<=']: r#52
[#96 '==']: r#52
[#96 '>']: r#52
[#96 '>=']: r#52
[#96 '>>']: r#52
[#96 '[']: r#52
[#96 ']']: r#52
[#96 '^']: r#52
[#96 '{']: r#52
[#96 '|']: r#52
[#96 '||']: r#52
[#97 '!=']: r#53
[#97 '%']: r#53
[#97 '&&']: r#53
[#97 '&']: r#53
[#97 ')']: r#53
[#97 '*']: r#53
[#97 '+']: r#53
[#97 ',']: r#53
[#97 '-']: r#53
[#97 '.']: r#53
[#97 '/']: r#53
[#97 ':']: r#53
[#97 ';']: r#53
[#97 '<']: r#53
[#97 '<<']: r#53
[#97 '<=']: r#53
[#97 '==']: r#53
[#97 '>']: r#53
[#97 '>=']: r#53
[#97 '>>']: r#53
[#97 '[']: r#53
[#97 ']']: r#53
[#97 '^']: r#53
[#97 '{']: r#53
[#97 '|']: r#53
[#97 '||']: r#53
[#98 '!=']: r#54
[#98 '%']: r#54
[#98 '&&']: r#54
[#98 '&']: r#54
[#98 ')']: r#54
[#98 '*']: r#54
[#98 '+']: r#54
[#98 ',']: r#54
[#98 '-']: r#54
[#98 '.']: r#54
[#98 '/']: r#54
[#98 ':']: r#54
[#98 ';']: r#54
[#98 '<']: r#54
[#98 '<<']: r#54
[#98 '<=']: r#54
[#98 '==']: r#54
[#98 '>']: r#54
[#98 '>=']: r#54
[#98 '>>']: r#54
[#98 '[']: r#54
[#98 ']']: r#54
[#98 '^']: r#54
[#98 '{']: r#54
[#98 '|']: r#54
[#98 '||']: r#54
[#99 '!=']: r#55
[#99 '%']: r#55
[#99 '&&']: r#55
[#99 '&']: r#55
[#99 ')']: r#55
[#99 '*']: r#55
[#99 '+']: r#55
[#99 ',']: r#55
[#99 '-']: r#55
[#99 '.']: r#55
[#99 '/']: r#55
[#99 ':']: r#55
[#99 ';']: r#55
[#99 '<']: r#55
[#99 '<<']: r#55
[#99 '<=']: r#55
[#99 '==']: r#55
[#99 '>']: r#55
[#99 '>=']: r#55
[#99 '>>']: r#55
[#99 '[']: r#55
[#99 ']']: r#55
[#99 '^']: r#55
[#99 '{']: r#55
[#99 '|']: r#55
[#99 '||']: r#55
[#100 '!=']: r#56
[#100 '%']: r#56
[#100 '&&']: r#56
[#100 '&']: r#56
[#100 ')']: r#56
[#100 '*']: r#56
[#100 '+']: r#56
[#100 ',']: r#56
[#100 '-']: r#56
[#100 '.']: r#56
[#100 '/']: r#56
[#100 ':']: r#56
[#100 ';']: r#56
[#100 '<']: r#56
[#100 '<<']: r#56
[#100 '<=']: r#56
[#100 '==']: r#56
[#100 '>']: r#56
[#100 '>=']: r#56
[#100 '>>']: r#56
[#100 '[']: r#56
[#100 ']']: r#56
[#100 '^']: r#56
[#100 '{']: r#56
[#100 '|']: r#56
[#100 '||']: r#56
[#101 '!=']: r#57
[#101 '%']: r#57
[#101 '&&']: r#57
[#101 '&']: r#57
[#101 ')']: r#57
[#101 '*']: r#57
[#101 '+']: r#57
[#101 ',']: r#57
[#101 '-']: r#57
[#101 '.']: r#57
[#101 '/']: r#57
[#101 ':']: r#57
[#101 ';']: r#57
[#101 '<']: r#57
[#101 '<<']: r#57
[#101 '<=']: r#57
[#101 '==']: r#57
[#101 '>']: r#57
[#101 '>=']: r#57
[#101 '>>']: r#57
[#101 '[']: r#57
[#101 ']']: r#57
[#101 '^']: r#57
[#101 '{']: r#57
[#101 '|']: r#57
[#101 '||']: r#57
[#102 '!=']: r#58
[#102 '%']: r#58
[#102 '&&']: r#58
[#102 '&']: r#58
[#102 ')']: r#58
[#102 '*']: r#58
[#102 '+']: r#58
[#102 ',']: r#58
[#102 '-']: r#58
[#102 '.']: r#58
[#102 '/']: r#58
[#102 ':']: r#58
[#102 ';']: r#58
[#102 '<']: r#58
[#102 '<<']: r#58
[#102 '<=']: r#58
[#102 '==']: r#58
[#102 '>']: r#58
[#102 '>=']: r#58
[#102 '>>']: r#58
[#102 '[']: r#58
[#102 ']']: r#58
[#102 '^']: r#58
[#102 '{']: r#58
[#102 '|']: r#58
[#102 '||']: r#58
[#103 '!=']: r#59
[#103 '%']: r#59
[#103 '&&']: r#59
[#103 '&']: r#59
[#103 ')']: r#59
[#103 '*']: r#59
[#103 '+']: r#59
[#103 ',']: r#59
[#103 '-']: r#59
[#103 '.']: r#59
[#103 '/']: r#59
[#103 ':']: r#59
[#103 ';']: r#59
[#103 '<']: r#59
[#103 '<<']: r#59
[#103 '<=']: r#59
[#103 '==']: r#59
[#103 '>']: r#59
[#103 '>=']: r#59
[#103 '>>']: r#59
[#103 '[']: r#59
[#103 ']']: r#59
[#103 '^']: r#59
[#103 '{']: r#59
[#103 '|']: r#59
[#103 '||']: r#59
[#104 '!=']: r#60
[#104 '%']: r#60
[#104 '&&']: r#60
[#104 '&']: r#60
[#104 ')']: r#60
[#104 '*']: r#60
[#104 '+']: r#60
[#104 ',']: r#60
[#104 '-']: r#60
[#104 '.']: r#60
[#104 '/']: r#60
[#104 ':']: r#60
[#104 ';']: r#60
[#104 '<']: r#60
[#104 '<<']: r#60
[#104 '<=']: r#60
[#104 '==']: r#60
[#104 '>']: r#60
[#104 '>=']: r#60
[#104 '>>']: r#60
[#104 '[']: r#60
[#104 ']']: r#60
[#104 '^']: r#60
[#104 '{']: r#60
[#104 '|']: r#60
[#104 '||']: r#60
[#105 '!=']: r#61
[#105 '%']: r#61
[#105 '&&']: r#61
[#105 '&']: r#61
[#105 ')']: r#61
[#105 '*']: r#61
[#105 '+']: r#61
[#105 ',']: r#61
[#105 '-']: r#61
[#105 '.']: r#61
[#105 '/']: r#61
[#105 ':']: r#61
[#105 ';']: r#61
[#105 '<']: r#61
[#105 '<<']: r#61
[#105 '<=']: r#61
[#105 '==']: r#61
[#105 '>']: r#61
[#105 '>=']: r#61
[#105 '>>']: r#61
[#105 '[']: r#61
[#105 ']']: r#61
[#105 '^']: r#61
[#105 '{']: r#61
[#105 '|']: r#61
[#105 '||']: r#61
[#106 '!=']: r#62
[#106 '%']: r#62
[#106 '&&']: r#62
[#106 '&']: r#62
[#106 ')']: r#62
[#106 '*']: r#62
[#106 '+']: r#62
[#106 ',']: r#62
[#106 '-']: r#62
[#106 '.']: r#62
[#106 '/']: r#62
[#106 ':']: r#62
[#106 ';']: r#62
[#106 '<']: r#62
[#106 '<<']: r#62
[#106 '<=']: r#62
[#106 '==']: r#62
[#106 '>']: r#62
[#106 '>=']: r#62
[#106 '>>']: r#62
[#106 '[']: r#62
[#106 ']']: r#62
[#106 '^']: r#62
[#106 '{']: r#62
[#106 '|']: r#62
[#106 '||']: r#62
[#107 '!=']: r#63
[#107 '%']: r#63
[#107 '&&']: r#63
[#107 '&']: r#63
[#107 ')']: r#63
[#107 '*']: r#63
[#107 '+']: r#63
[#107 ',']: r#63
[#107 '-']: r#63
[#107 '.']: r#63
[#107 '/']: r#63
[#107 ':']: r#63
[#107 ';']: r#63
[#107 '<']: r#63
[#107 '<<']: r#63
[#107 '<=']: r#63
[#107 '==']: r#63
[#107 '>']: r#63
[#107 '>=']: r#63
[#107 '>>']: r#63
[#107 '[']: r#63
[#107 ']']: r#63
[#107 '^']: r#63
[#107 '{']: r#63
[#107 '|']: r#63
[#107 '||']: r#63
[#108 '!=']: r#64
[#108 '%']: r#64
[#108 '&&']: r#64
[#108 '&']: r#64
[#108 ')']: r#64
[#108 '*']: r#64
[#108 '+']: r#64
[#108 ',']: r#64
[#108 '-']: r#64
[#108 '.']: r#64
[#108 '/']: r#64
[#108 ':']: r#64
[#108 ';']: r#64
[#108 '<']: r#64
[#108 '<<']: r#64
[#108 '<=']: r#64
[#108 '==']: r#64
[#108 '>']: r#64
[#108 '>=']: r#64
[#108 '>>']: r#64
[#108 '[']: r#64
[#108 ']']: r#64
[#108 '^']: r#64
[#108 '{']: r#64
[#108 '|']: r#64
[#108 '||']: r#64
[#109 '!=']: r#65
[#109 '%']: r#65
[#109 '&&']: r#65
[#109 '&']: r#65
[#109 ')']: r#65
[#109 '*']: r#65
[#109 '+']: r#65
[#109 ',']: r#65
[#109 '-']: r#65
[#109 '.']: r#65
[#109 '/']: r#65
[#109 ':']: r#65
[#109 ';']: r#65
[#109 '<']: r#65
[#109 '<<']: r#65
[#109 '<=']: r#65
[#109 '==']: r#65
[#109 '>']: r#65
[#109 '>=']: r#65
[#109 '>>']: r#65
[#109 '[']: r#65
[#109 ']']: r#65
[#109 '^']: r#65
[#109 '{']: r#65
[#109 '|']: r#65
[#109 '||']: r#65
[#110 '{']: s#147
[#111 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#112 '{']: s#147
[#113 '=']: s#138
[#114 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#115 '=']: s#138
[#116 ':']: s#141
[#117 '=']: s#138
[#118 '<']: s#135
[#119 ';']: r#66
[#119 '@']: r#66
[#119 'const']: r#66
[#119 'fn']: r#66
[#119 'override']: r#66
[#119 'static_assert']: r#66
[#119 'struct']: r#66
[#119 'type']: r#66
[#119 'var']: r#66
[#119 EndOfText]: r#66
[#120 ';']: r#67
[#120 '@']: r#67
[#120 'const']: r#67
[#120 'fn']: r#67
[#120 'override']: r#67
[#120 'static_assert']: r#67
[#120 'struct']: r#67
[#120 'type']: r#67
[#120 'var']: r#67
[#120 EndOfText]: r#67
[#121 ';']: r#68
[#121 '@']: r#68
[#121 'const']: r#68
[#121 'fn']: r#68
[#121 'override']: r#68
[#121 'static_assert']: r#68
[#121 'struct']: r#68
[#121 'type']: r#68
[#121 'var']: r#68
[#121 EndOfText]: r#68
[#122 ';']: r#69
[#122 '@']: r#69
[#122 'const']: r#69
[#122 'fn']: r#69
[#122 'override']: r#69
[#122 'static_assert']: r#69
[#122 'struct']: r#69
[#122 'type']: r#69
[#122 'var']: r#69
[#122 EndOfText]: r#69
[#123 EndOfText]: r#70
[#124 ',']: s#131
[#125 ',']: r#71
[#126 ',']: r#72
[#127 ',']: r#73
[#128 ';']: r#74
[#128 '@']: r#74
[#128 'const']: r#74
[#128 'diagnostic']: r#74
[#128 'enable']: r#74
[#128 'fn']: r#74
[#128 'override']: r#74
[#128 'static_assert']: r#74
[#128 'struct']: r#74
[#128 'type']: r#74
[#128 'var']: r#74
[#128 EndOfText]: r#74
[#129 ';']: r#75
[#129 '@']: r#75
[#129 'const']: r#75
[#129 'diagnostic']: r#75
[#129 'enable']: r#75
[#129 'fn']: r#75
[#129 'override']: r#75
[#129 'static_assert']: r#75
[#129 'struct']: r#75
[#129 'type']: r#75
[#129 'var']: r#75
[#129 EndOfText]: r#75
[#130 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#399
[#131 '!']: r#76
[#131 '&']: r#76
[#131 '(']: r#76
[#131 ')']: r#76
[#131 '*']: r#76
[#131 '-']: r#76
[#131 ':']: r#76
[#131 '@']: r#76
[#131 'array']: r#76
[#131 'atomic']: r#76
[#131 'bitcast']: r#76
[#131 'bool']: r#76
[#131 'default']: r#76
[#131 'f16']: r#76
[#131 'f32']: r#76
[#131 'false']: r#76
[#131 'i32']: r#76
[#131 'mat2x2']: r#76
[#131 'mat2x3']: r#76
[#131 'mat2x4']: r#76
[#131 'mat3x2']: r#76
[#131 'mat3x3']: r#76
[#131 'mat3x4']: r#76
[#131 'mat4x2']: r#76
[#131 'mat4x3']: r#76
[#131 'mat4x4']: r#76
[#131 'ptr']: r#76
[#131 'sampler']: r#76
[#131 'sampler_comparison']: r#76
[#131 'texture_1d']: r#76
[#131 'texture_2d']: r#76
[#131 'texture_2d_array']: r#76
[#131 'texture_3d']: r#76
[#131 'texture_cube']: r#76
[#131 'texture_cube_array']: r#76
[#131 'texture_depth_2d']: r#76
[#131 'texture_depth_2d_array']: r#76
[#131 'texture_depth_cube']: r#76
[#131 'texture_depth_cube_array']: r#76
[#131 'texture_depth_multisampled_2d']: r#76
[#131 'texture_multisampled_2d']: r#76
[#131 'texture_storage_1d']: r#76
[#131 'texture_storage_2d']: r#76
[#131 'texture_storage_2d_array']: r#76
[#131 'texture_storage_3d']: r#76
[#131 'true']: r#76
[#131 'u32']: r#76
[#131 'vec2']: r#76
[#131 'vec3']: r#76
[#131 'vec4']: r#76
[#131 '{']: r#76
[#131 '}']: r#76
[#131 '~']: r#76
[#131 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#76
[#131 /0[xX][0-9a-fA-F]+[iu]?/]: r#76
[#132 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#133 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#77
[#134 'function']: s#392
[#134 'private']: s#393
[#134 'storage']: s#396
[#134 'uniform']: s#395
[#134 'workgroup']: s#394
[#135 '!']: r#78
[#135 '&']: r#78
[#135 '(']: r#78
[#135 '*']: r#78
[#135 '-']: r#78
[#135 '@']: r#78
[#135 'array']: r#78
[#135 'atomic']: r#78
[#135 'bitcast']: r#78
[#135 'bool']: r#78
[#135 'f16']: r#78
[#135 'f32']: r#78
[#135 'false']: r#78
[#135 'i32']: r#78
[#135 'mat2x2']: r#78
[#135 'mat2x3']: r#78
[#135 'mat2x4']: r#78
[#135 'mat3x2']: r#78
[#135 'mat3x3']: r#78
[#135 'mat3x4']: r#78
[#135 'mat4x2']: r#78
[#135 'mat4x3']: r#78
[#135 'mat4x4']: r#78
[#135 'ptr']: r#78
[#135 'sampler']: r#78
[#135 'sampler_comparison']: r#78
[#135 'texture_1d']: r#78
[#135 'texture_2d']: r#78
[#135 'texture_2d_array']: r#78
[#135 'texture_3d']: r#78
[#135 'texture_cube']: r#78
[#135 'texture_cube_array']: r#78
[#135 'texture_depth_2d']: r#78
[#135 'texture_depth_2d_array']: r#78
[#135 'texture_depth_cube']: r#78
[#135 'texture_depth_cube_array']: r#78
[#135 'texture_depth_multisampled_2d']: r#78
[#135 'texture_multisampled_2d']: r#78
[#135 'texture_storage_1d']: r#78
[#135 'texture_storage_2d']: r#78
[#135 'texture_storage_2d_array']: r#78
[#135 'texture_storage_3d']: r#78
[#135 'true']: r#78
[#135 'u32']: r#78
[#135 'vec2']: r#78
[#135 'vec3']: r#78
[#135 'vec4']: r#78
[#135 '~']: r#78
[#135 /0[xX][0-9a-fA-F]+[iu]?/]: r#78
[#136 ';']: r#79
[#137 '!']: s#77
[#137 '&']: s#80
[#137 '(']: s#13
[#137 '*']: s#79
[#137 '-']: s#76
[#137 '@']: s#38
[#137 'bitcast']: s#85
[#137 'false']: s#98
[#137 'true']: s#97
[#137 '~']: s#78
[#137 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#137 /0[fh]/]: s#102
[#137 /0[iu]?/]: s#99
[#137 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#137 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#137 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#137 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#137 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#137 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#137 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#137 /[1-9][0-9]*[fh]/]: s#103
[#137 /[1-9][0-9]*[iu]?/]: s#100
[#138 '!']: r#80
[#138 '&']: r#80
[#138 '(']: r#80
[#138 '*']: r#80
[#138 '-']: r#80
[#138 '@']: r#80
[#138 'array']: r#80
[#138 'atomic']: r#80
[#138 'bitcast']: r#80
[#138 'bool']: r#80
[#138 'f16']: r#80
[#138 'f32']: r#80
[#138 'false']: r#80
[#138 'i32']: r#80
[#138 'mat2x2']: r#80
[#138 'mat2x3']: r#80
[#138 'mat2x4']: r#80
[#138 'mat3x2']: r#80
[#138 'mat3x3']: r#80
[#138 'mat3x4']: r#80
[#138 'mat4x2']: r#80
[#138 'mat4x3']: r#80
[#138 'mat4x4']: r#80
[#138 'ptr']: r#80
[#138 'sampler']: r#80
[#138 'sampler_comparison']: r#80
[#138 'texture_1d']: r#80
[#138 'texture_2d']: r#80
[#138 'texture_2d_array']: r#80
[#138 'texture_3d']: r#80
[#138 'texture_cube']: r#80
[#138 'texture_cube_array']: r#80
[#138 'texture_depth_2d']: r#80
[#138 'texture_depth_2d_array']: r#80
[#138 'texture_depth_cube']: r#80
[#138 'texture_depth_cube_array']: r#80
[#138 'texture_depth_multisampled_2d']: r#80
[#138 'texture_multisampled_2d']: r#80
[#138 'texture_storage_1d']: r#80
[#138 'texture_storage_2d']: r#80
[#138 'texture_storage_2d_array']: r#80
[#138 'texture_storage_3d']: r#80
[#138 'true']: r#80
[#138 'u32']: r#80
[#138 'vec2']: r#80
[#138 'vec3']: r#80
[#138 'vec4']: r#80
[#138 '~']: r#80
[#138 /0[xX][0-9a-fA-F]+[iu]?/]: r#80
[#139 ';']: r#81
[#139 '=']: r#81
[#140 'array']: s#333
[#140 'atomic']: s#168
[#140 'bool']: s#161
[#140 'f16']: s#183
[#140 'f32']: s#182
[#140 'i32']: s#184
[#140 'mat2x2']: s#173
[#140 'mat2x3']: s#174
[#140 'mat2x4']: s#175
[#140 'mat3x2']: s#176
[#140 'mat3x3']: s#177
[#140 'mat3x4']: s#178
[#140 'mat4x2']: s#179
[#140 'mat4x3']: s#180
[#140 'mat4x4']: s#181
[#140 'ptr']: s#186
[#140 'sampler']: s#192
[#140 'sampler_comparison']: s#193
[#140 'texture_1d']: s#199
[#140 'texture_2d']: s#200
[#140 'texture_2d_array']: s#201
[#140 'texture_3d']: s#202
[#140 'texture_cube']: s#203
[#140 'texture_cube_array']: s#204
[#140 'texture_depth_2d']: s#194
[#140 'texture_depth_2d_array']: s#195
[#140 'texture_depth_cube']: s#196
[#140 'texture_depth_cube_array']: s#197
[#140 'texture_depth_multisampled_2d']: s#198
[#140 'texture_multisampled_2d']: s#205
[#140 'texture_storage_1d']: s#206
[#140 'texture_storage_2d']: s#207
[#140 'texture_storage_2d_array']: s#208
[#140 'texture_storage_3d']: s#209
[#140 'u32']: s#185
[#140 'vec2']: s#170
[#140 'vec3']: s#171
[#140 'vec4']: s#172
[#140 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#141 'array']: r#82
[#141 'atomic']: r#82
[#141 'bool']: r#82
[#141 'f16']: r#82
[#141 'f32']: r#82
[#141 'i32']: r#82
[#141 'mat2x2']: r#82
[#141 'mat2x3']: r#82
[#141 'mat2x4']: r#82
[#141 'mat3x2']: r#82
[#141 'mat3x3']: r#82
[#141 'mat3x4']: r#82
[#141 'mat4x2']: r#82
[#141 'mat4x3']: r#82
[#141 'mat4x4']: r#82
[#141 'ptr']: r#82
[#141 'sampler']: r#82
[#141 'sampler_comparison']: r#82
[#141 'texture_1d']: r#82
[#141 'texture_2d']: r#82
[#141 'texture_2d_array']: r#82
[#141 'texture_3d']: r#82
[#141 'texture_cube']: r#82
[#141 'texture_cube_array']: r#82
[#141 'texture_depth_2d']: r#82
[#141 'texture_depth_2d_array']: r#82
[#141 'texture_depth_cube']: r#82
[#141 'texture_depth_cube_array']: r#82
[#141 'texture_depth_multisampled_2d']: r#82
[#141 'texture_multisampled_2d']: r#82
[#141 'texture_storage_1d']: r#82
[#141 'texture_storage_2d']: r#82
[#141 'texture_storage_2d_array']: r#82
[#141 'texture_storage_3d']: r#82
[#141 'u32']: r#82
[#141 'vec2']: r#82
[#141 'vec3']: r#82
[#141 'vec4']: r#82
[#141 '{']: r#82
[#142 '!']: s#77
[#142 '&']: s#80
[#142 '(']: s#13
[#142 '*']: s#79
[#142 '-']: s#76
[#142 '@']: s#38
[#142 'bitcast']: s#85
[#142 'false']: s#98
[#142 'true']: s#97
[#142 '~']: s#78
[#142 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#142 /0[fh]/]: s#102
[#142 /0[iu]?/]: s#99
[#142 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#142 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#142 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#142 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#142 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#142 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#142 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#142 /[1-9][0-9]*[fh]/]: s#103
[#142 /[1-9][0-9]*[iu]?/]: s#100
[#143 '=']: s#138
[#144 'array']: s#333
[#144 'atomic']: s#168
[#144 'bool']: s#161
[#144 'f16']: s#183
[#144 'f32']: s#182
[#144 'i32']: s#184
[#144 'mat2x2']: s#173
[#144 'mat2x3']: s#174
[#144 'mat2x4']: s#175
[#144 'mat3x2']: s#176
[#144 'mat3x3']: s#177
[#144 'mat3x4']: s#178
[#144 'mat4x2']: s#179
[#144 'mat4x3']: s#180
[#144 'mat4x4']: s#181
[#144 'ptr']: s#186
[#144 'sampler']: s#192
[#144 'sampler_comparison']: s#193
[#144 'texture_1d']: s#199
[#144 'texture_2d']: s#200
[#144 'texture_2d_array']: s#201
[#144 'texture_3d']: s#202
[#144 'texture_cube']: s#203
[#144 'texture_cube_array']: s#204
[#144 'texture_depth_2d']: s#194
[#144 'texture_depth_2d_array']: s#195
[#144 'texture_depth_cube']: s#196
[#144 'texture_depth_cube_array']: s#197
[#144 'texture_depth_multisampled_2d']: s#198
[#144 'texture_multisampled_2d']: s#205
[#144 'texture_storage_1d']: s#206
[#144 'texture_storage_2d']: s#207
[#144 'texture_storage_2d_array']: s#208
[#144 'texture_storage_3d']: s#209
[#144 'u32']: s#185
[#144 'vec2']: s#170
[#144 'vec3']: s#171
[#144 'vec4']: s#172
[#144 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#145 ';']: r#83
[#145 '@']: r#83
[#145 'const']: r#83
[#145 'fn']: r#83
[#145 'override']: r#83
[#145 'static_assert']: r#83
[#145 'struct']: r#83
[#145 'type']: r#83
[#145 'var']: r#83
[#145 EndOfText]: r#83
[#146 '@']: s#38
[#147 '&']: r#84
[#147 '(']: r#84
[#147 '*']: r#84
[#147 ';']: r#84
[#147 '@']: r#84
[#147 '_']: r#84
[#147 'array']: r#84
[#147 'atomic']: r#84
[#147 'bool']: r#84
[#147 'break']: r#84
[#147 'case']: r#84
[#147 'const']: r#84
[#147 'continue']: r#84
[#147 'continuing']: r#84
[#147 'default']: r#84
[#147 'discard']: r#84
[#147 'f16']: r#84
[#147 'f32']: r#84
[#147 'for']: r#84
[#147 'i32']: r#84
[#147 'if']: r#84
[#147 'let']: r#84
[#147 'loop']: r#84
[#147 'mat2x2']: r#84
[#147 'mat2x3']: r#84
[#147 'mat2x4']: r#84
[#147 'mat3x2']: r#84
[#147 'mat3x3']: r#84
[#147 'mat3x4']: r#84
[#147 'mat4x2']: r#84
[#147 'mat4x3']: r#84
[#147 'mat4x4']: r#84
[#147 'ptr']: r#84
[#147 'return']: r#84
[#147 'sampler']: r#84
[#147 'sampler_comparison']: r#84
[#147 'static_assert']: r#84
[#147 'switch']: r#84
[#147 'texture_1d']: r#84
[#147 'texture_2d']: r#84
[#147 'texture_2d_array']: r#84
[#147 'texture_3d']: r#84
[#147 'texture_cube']: r#84
[#147 'texture_cube_array']: r#84
[#147 'texture_depth_2d']: r#84
[#147 'texture_depth_2d_array']: r#84
[#147 'texture_depth_cube']: r#84
[#147 'texture_depth_cube_array']: r#84
[#147 'texture_depth_multisampled_2d']: r#84
[#147 'texture_multisampled_2d']: r#84
[#147 'texture_storage_1d']: r#84
[#147 'texture_storage_2d']: r#84
[#147 'texture_storage_2d_array']: r#84
[#147 'texture_storage_3d']: r#84
[#147 'u32']: r#84
[#147 'var']: r#84
[#147 'vec2']: r#84
[#147 'vec3']: r#84
[#147 'vec4']: r#84
[#147 'while']: r#84
[#147 '{']: r#84
[#147 '}']: r#84
[#147 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#84
[#148 '(']: s#13
[#149 ';']: r#85
[#149 '@']: r#85
[#149 'const']: r#85
[#149 'fn']: r#85
[#149 'override']: r#85
[#149 'static_assert']: r#85
[#149 'struct']: r#85
[#149 'type']: r#85
[#149 'var']: r#85
[#149 EndOfText]: r#85
[#150 '&']: s#80
[#150 '(']: s#13
[#150 '*']: s#79
[#150 ';']: s#25
[#150 '@']: s#38
[#150 '_']: s#377
[#150 'break']: s#364
[#150 'const']: s#363
[#150 'continue']: s#365
[#150 'discard']: s#350
[#150 'for']: s#358
[#150 'if']: s#369
[#150 'let']: s#362
[#150 'loop']: s#357
[#150 'return']: s#354
[#150 'static_assert']: s#32
[#150 'switch']: s#356
[#150 'var']: s#118
[#150 'while']: s#359
[#150 '{']: s#147
[#150 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#152 ')']: s#335
[#153 'array']: s#333
[#153 'atomic']: s#168
[#153 'bool']: s#161
[#153 'f16']: s#183
[#153 'f32']: s#182
[#153 'i32']: s#184
[#153 'mat2x2']: s#173
[#153 'mat2x3']: s#174
[#153 'mat2x4']: s#175
[#153 'mat3x2']: s#176
[#153 'mat3x3']: s#177
[#153 'mat3x4']: s#178
[#153 'mat4x2']: s#179
[#153 'mat4x3']: s#180
[#153 'mat4x4']: s#181
[#153 'ptr']: s#186
[#153 'sampler']: s#192
[#153 'sampler_comparison']: s#193
[#153 'texture_1d']: s#199
[#153 'texture_2d']: s#200
[#153 'texture_2d_array']: s#201
[#153 'texture_3d']: s#202
[#153 'texture_cube']: s#203
[#153 'texture_cube_array']: s#204
[#153 'texture_depth_2d']: s#194
[#153 'texture_depth_2d_array']: s#195
[#153 'texture_depth_cube']: s#196
[#153 'texture_depth_cube_array']: s#197
[#153 'texture_depth_multisampled_2d']: s#198
[#153 'texture_multisampled_2d']: s#205
[#153 'texture_storage_1d']: s#206
[#153 'texture_storage_2d']: s#207
[#153 'texture_storage_2d_array']: s#208
[#153 'texture_storage_3d']: s#209
[#153 'u32']: s#185
[#153 'vec2']: s#170
[#153 'vec3']: s#171
[#153 'vec4']: s#172
[#153 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#154 '!=']: r#86
[#154 '%']: r#86
[#154 '&&']: r#86
[#154 '&']: r#86
[#154 ')']: r#86
[#154 '*']: r#86
[#154 '+']: r#86
[#154 ',']: r#86
[#154 '-']: r#86
[#154 '.']: r#86
[#154 '/']: r#86
[#154 ':']: r#86
[#154 ';']: r#86
[#154 '<']: r#86
[#154 '<<']: r#86
[#154 '<=']: r#86
[#154 '==']: r#86
[#154 '>']: r#86
[#154 '>=']: r#86
[#154 '>>']: r#86
[#154 '[']: r#86
[#154 ']']: r#86
[#154 '^']: r#86
[#154 '{']: r#86
[#154 '|']: r#86
[#154 '||']: r#86
[#155 '(']: s#13
[#156 '(']: r#87
[#157 '(']: r#88
[#158 '(']: r#89
[#158 '<']: s#135
[#159 '(']: r#90
[#159 '<']: s#135
[#160 '(']: r#91
[#160 '<']: s#135
[#161 '(']: r#92
[#161 ')']: r#92
[#161 ',']: r#92
[#161 ';']: r#92
[#161 '=']: r#92
[#161 '>']: r#92
[#161 '{']: r#92
[#161 '}']: r#92
[#162 '(']: r#93
[#162 ')']: r#93
[#162 ',']: r#93
[#162 ';']: r#93
[#162 '=']: r#93
[#162 '>']: r#93
[#162 '{']: r#93
[#162 '}']: r#93
[#163 '(']: r#94
[#163 ')']: r#94
[#163 ',']: r#94
[#163 ';']: r#94
[#163 '=']: r#94
[#163 '>']: r#94
[#163 '{']: r#94
[#163 '}']: r#94
[#164 '(']: r#95
[#164 ')']: r#95
[#164 ',']: r#95
[#164 ';']: r#95
[#164 '=']: r#95
[#164 '>']: r#95
[#164 '{']: r#95
[#164 '}']: r#95
[#165 '(']: r#96
[#165 ')']: r#96
[#165 ',']: r#96
[#165 ';']: r#96
[#165 '=']: r#96
[#165 '>']: r#96
[#165 '{']: r#96
[#165 '}']: r#96
[#166 '<']: s#135
[#167 '(']: r#97
[#167 ')']: r#97
[#167 ',']: r#97
[#167 ';']: r#97
[#167 '=']: r#97
[#167 '>']: r#97
[#167 '{']: r#97
[#167 '}']: r#97
[#168 '<']: s#135
[#169 '(']: r#98
[#169 ')']: r#98
[#169 ',']: r#98
[#169 ';']: r#98
[#169 '=']: r#98
[#169 '>']: r#98
[#169 '{']: r#98
[#169 '}']: r#98
[#170 '(']: r#99
[#170 '<']: r#99
[#171 '(']: r#100
[#171 '<']: r#100
[#172 '(']: r#101
[#172 '<']: r#101
[#173 '(']: r#102
[#173 '<']: r#102
[#174 '(']: r#103
[#174 '<']: r#103
[#175 '(']: r#104
[#175 '<']: r#104
[#176 '(']: r#105
[#176 '<']: r#105
[#177 '(']: r#106
[#177 '<']: r#106
[#178 '(']: r#107
[#178 '<']: r#107
[#179 '(']: r#108
[#179 '<']: r#108
[#180 '(']: r#109
[#180 '<']: r#109
[#181 '(']: r#110
[#181 '<']: r#110
[#182 '(']: r#111
[#182 ')']: r#111
[#182 ',']: r#111
[#182 ';']: r#111
[#182 '=']: r#111
[#182 '>']: r#111
[#182 '{']: r#111
[#182 '}']: r#111
[#183 '(']: r#112
[#183 ')']: r#112
[#183 ',']: r#112
[#183 ';']: r#112
[#183 '=']: r#112
[#183 '>']: r#112
[#183 '{']: r#112
[#183 '}']: r#112
[#184 '(']: r#113
[#184 ')']: r#113
[#184 ',']: r#113
[#184 ';']: r#113
[#184 '=']: r#113
[#184 '>']: r#113
[#184 '{']: r#113
[#184 '}']: r#113
[#185 '(']: r#114
[#185 ')']: r#114
[#185 ',']: r#114
[#185 ';']: r#114
[#185 '=']: r#114
[#185 '>']: r#114
[#185 '{']: r#114
[#185 '}']: r#114
[#186 '<']: r#115
[#187 '(']: r#116
[#187 ')']: r#116
[#187 ',']: r#116
[#187 ';']: r#116
[#187 '=']: r#116
[#187 '>']: r#116
[#187 '{']: r#116
[#187 '}']: r#116
[#188 '(']: r#117
[#188 ')']: r#117
[#188 ',']: r#117
[#188 ';']: r#117
[#188 '=']: r#117
[#188 '>']: r#117
[#188 '{']: r#117
[#188 '}']: r#117
[#189 '<']: s#135
[#190 '<']: s#135
[#191 '<']: s#135
[#192 '(']: r#118
[#192 ')']: r#118
[#192 ',']: r#118
[#192 ';']: r#118
[#192 '=']: r#118
[#192 '>']: r#118
[#192 '{']: r#118
[#192 '}']: r#118
[#193 '(']: r#119
[#193 ')']: r#119
[#193 ',']: r#119
[#193 ';']: r#119
[#193 '=']: r#119
[#193 '>']: r#119
[#193 '{']: r#119
[#193 '}']: r#119
[#194 '(']: r#120
[#194 ')']: r#120
[#194 ',']: r#120
[#194 ';']: r#120
[#194 '=']: r#120
[#194 '>']: r#120
[#194 '{']: r#120
[#194 '}']: r#120
[#195 '(']: r#121
[#195 ')']: r#121
[#195 ',']: r#121
[#195 ';']: r#121
[#195 '=']: r#121
[#195 '>']: r#121
[#195 '{']: r#121
[#195 '}']: r#121
[#196 '(']: r#122
[#196 ')']: r#122
[#196 ',']: r#122
[#196 ';']: r#122
[#196 '=']: r#122
[#196 '>']: r#122
[#196 '{']: r#122
[#196 '}']: r#122
[#197 '(']: r#123
[#197 ')']: r#123
[#197 ',']: r#123
[#197 ';']: r#123
[#197 '=']: r#123
[#197 '>']: r#123
[#197 '{']: r#123
[#197 '}']: r#123
[#198 '(']: r#124
[#198 ')']: r#124
[#198 ',']: r#124
[#198 ';']: r#124
[#198 '=']: r#124
[#198 '>']: r#124
[#198 '{']: r#124
[#198 '}']: r#124
[#199 '<']: r#125
[#200 '<']: r#126
[#201 '<']: r#127
[#202 '<']: r#128
[#203 '<']: r#129
[#204 '<']: r#130
[#205 '<']: r#131
[#206 '<']: r#132
[#207 '<']: r#133
[#208 '<']: r#134
[#209 '<']: r#135
[#210 '!=']: r#136
[#210 '%']: r#136
[#210 '&&']: r#136
[#210 '&']: r#136
[#210 ')']: r#136
[#210 '*']: r#136
[#210 '+']: r#136
[#210 ',']: r#136
[#210 '-']: r#136
[#210 '/']: r#136
[#210 ':']: r#136
[#210 ';']: r#136
[#210 '<']: r#136
[#210 '<<']: r#136
[#210 '<=']: r#136
[#210 '==']: r#136
[#210 '>']: r#136
[#210 '>=']: r#136
[#210 '>>']: r#136
[#210 ']']: r#136
[#210 '^']: r#136
[#210 '{']: r#136
[#210 '|']: r#136
[#210 '||']: r#136
[#211 '!=']: r#137
[#211 '%']: r#137
[#211 '&&']: r#137
[#211 '&']: r#137
[#211 ')']: r#137
[#211 '*']: r#137
[#211 '+']: r#137
[#211 ',']: r#137
[#211 '-']: r#137
[#211 '/']: r#137
[#211 ':']: r#137
[#211 ';']: r#137
[#211 '<']: r#137
[#211 '<<']: r#137
[#211 '<=']: r#137
[#211 '==']: r#137
[#211 '>']: r#137
[#211 '>=']: r#137
[#211 '>>']: r#137
[#211 ']']: r#137
[#211 '^']: r#137
[#211 '{']: r#137
[#211 '|']: r#137
[#211 '||']: r#137
[#212 '!']: s#77
[#212 '&']: s#80
[#212 '(']: s#13
[#212 '*']: s#79
[#212 '-']: s#76
[#212 '@']: s#38
[#212 'bitcast']: s#85
[#212 'false']: s#98
[#212 'true']: s#97
[#212 '~']: s#78
[#212 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#212 /0[fh]/]: s#102
[#212 /0[iu]?/]: s#99
[#212 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#212 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#212 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#212 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#212 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#212 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#212 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#212 /[1-9][0-9]*[fh]/]: s#103
[#212 /[1-9][0-9]*[iu]?/]: s#100
[#213 '/[rgba]/']: s#309
[#213 '/[rgba][rgba]/']: s#310
[#213 '/[rgba][rgba][rgba]/']: s#311
[#213 '/[rgba][rgba][rgba][rgba]/']: s#312
[#213 '/[xyzw]/']: s#313
[#213 '/[xyzw][xyzw]/']: s#314
[#213 '/[xyzw][xyzw][xyzw]/']: s#315
[#213 '/[xyzw][xyzw][xyzw][xyzw]/']: s#316
[#213 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#308
[#214 '!']: r#138
[#214 '&']: r#138
[#214 '(']: r#138
[#214 '*']: r#138
[#214 '-']: r#138
[#214 '@']: r#138
[#214 'array']: r#138
[#214 'atomic']: r#138
[#214 'bitcast']: r#138
[#214 'bool']: r#138
[#214 'f16']: r#138
[#214 'f32']: r#138
[#214 'false']: r#138
[#214 'i32']: r#138
[#214 'mat2x2']: r#138
[#214 'mat2x3']: r#138
[#214 'mat2x4']: r#138
[#214 'mat3x2']: r#138
[#214 'mat3x3']: r#138
[#214 'mat3x4']: r#138
[#214 'mat4x2']: r#138
[#214 'mat4x3']: r#138
[#214 'mat4x4']: r#138
[#214 'ptr']: r#138
[#214 'sampler']: r#138
[#214 'sampler_comparison']: r#138
[#214 'texture_1d']: r#138
[#214 'texture_2d']: r#138
[#214 'texture_2d_array']: r#138
[#214 'texture_3d']: r#138
[#214 'texture_cube']: r#138
[#214 'texture_cube_array']: r#138
[#214 'texture_depth_2d']: r#138
[#214 'texture_depth_2d_array']: r#138
[#214 'texture_depth_cube']: r#138
[#214 'texture_depth_cube_array']: r#138
[#214 'texture_depth_multisampled_2d']: r#138
[#214 'texture_multisampled_2d']: r#138
[#214 'texture_storage_1d']: r#138
[#214 'texture_storage_2d']: r#138
[#214 'texture_storage_2d_array']: r#138
[#214 'texture_storage_3d']: r#138
[#214 'true']: r#138
[#214 'u32']: r#138
[#214 'vec2']: r#138
[#214 'vec3']: r#138
[#214 'vec4']: r#138
[#214 '~']: r#138
[#214 /0[xX][0-9a-fA-F]+[iu]?/]: r#138
[#216 '!=']: r#139
[#216 '%']: r#139
[#216 '&&']: r#139
[#216 '&']: r#139
[#216 ')']: r#139
[#216 '*']: r#139
[#216 '+']: r#139
[#216 ',']: r#139
[#216 '-']: r#139
[#216 '/']: r#139
[#216 ':']: r#139
[#216 ';']: r#139
[#216 '<']: r#139
[#216 '<<']: r#139
[#216 '<=']: r#139
[#216 '==']: r#139
[#216 '>']: r#139
[#216 '>=']: r#139
[#216 '>>']: r#139
[#216 ']']: r#139
[#216 '^']: r#139
[#216 '{']: r#139
[#216 '|']: r#139
[#216 '||']: r#139
[#217 '!=']: r#140
[#217 '%']: r#140
[#217 '&&']: r#140
[#217 '&']: r#140
[#217 ')']: r#140
[#217 '*']: r#140
[#217 '+']: r#140
[#217 ',']: r#140
[#217 '-']: r#140
[#217 '/']: r#140
[#217 ':']: r#140
[#217 ';']: r#140
[#217 '<']: r#140
[#217 '<<']: r#140
[#217 '<=']: r#140
[#217 '==']: r#140
[#217 '>']: r#140
[#217 '>=']: r#140
[#217 '>>']: r#140
[#217 ']']: r#140
[#217 '^']: r#140
[#217 '{']: r#140
[#217 '|']: r#140
[#217 '||']: r#140
[#218 '!=']: r#141
[#218 '%']: r#141
[#218 '&&']: r#141
[#218 '&']: r#141
[#218 ')']: r#141
[#218 '*']: r#141
[#218 '+']: r#141
[#218 ',']: r#141
[#218 '-']: r#141
[#218 '/']: r#141
[#218 ':']: r#141
[#218 ';']: r#141
[#218 '<']: r#141
[#218 '<<']: r#141
[#218 '<=']: r#141
[#218 '==']: r#141
[#218 '>']: r#141
[#218 '>=']: r#141
[#218 '>>']: r#141
[#218 ']']: r#141
[#218 '^']: r#141
[#218 '{']: r#141
[#218 '|']: r#141
[#218 '||']: r#141
[#219 '!=']: r#142
[#219 '%']: r#142
[#219 '&&']: r#142
[#219 '&']: r#142
[#219 ')']: r#142
[#219 '*']: r#142
[#219 '+']: r#142
[#219 ',']: r#142
[#219 '-']: r#142
[#219 '/']: r#142
[#219 ':']: r#142
[#219 ';']: r#142
[#219 '<']: r#142
[#219 '<<']: r#142
[#219 '<=']: r#142
[#219 '==']: r#142
[#219 '>']: r#142
[#219 '>=']: r#142
[#219 '>>']: r#142
[#219 ']']: r#142
[#219 '^']: r#142
[#219 '{']: r#142
[#219 '|']: r#142
[#219 '||']: r#142
[#220 '!=']: r#143
[#220 '%']: r#143
[#220 '&&']: r#143
[#220 '&']: r#143
[#220 ')']: r#143
[#220 '*']: r#143
[#220 '+']: r#143
[#220 ',']: r#143
[#220 '-']: r#143
[#220 '/']: r#143
[#220 ':']: r#143
[#220 ';']: r#143
[#220 '<']: r#143
[#220 '<<']: r#143
[#220 '<=']: r#143
[#220 '==']: r#143
[#220 '>']: r#143
[#220 '>=']: r#143
[#220 '>>']: r#143
[#220 ']']: r#143
[#220 '^']: r#143
[#220 '{']: r#143
[#220 '|']: r#143
[#220 '||']: r#143
[#221 '!']: s#77
[#221 '&']: s#80
[#221 '(']: s#13
[#221 '*']: s#79
[#221 '-']: s#76
[#221 '@']: s#38
[#221 'bitcast']: s#85
[#221 'false']: s#98
[#221 'true']: s#97
[#221 '~']: s#78
[#221 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#221 /0[fh]/]: s#102
[#221 /0[iu]?/]: s#99
[#221 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#221 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#221 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#221 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#221 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#221 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#221 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#221 /[1-9][0-9]*[fh]/]: s#103
[#221 /[1-9][0-9]*[iu]?/]: s#100
[#222 '!']: r#144
[#222 '&']: r#144
[#222 '(']: r#144
[#222 '*']: r#144
[#222 '-']: r#144
[#222 '@']: r#144
[#222 'array']: r#144
[#222 'atomic']: r#144
[#222 'bitcast']: r#144
[#222 'bool']: r#144
[#222 'f16']: r#144
[#222 'f32']: r#144
[#222 'false']: r#144
[#222 'i32']: r#144
[#222 'mat2x2']: r#144
[#222 'mat2x3']: r#144
[#222 'mat2x4']: r#144
[#222 'mat3x2']: r#144
[#222 'mat3x3']: r#144
[#222 'mat3x4']: r#144
[#222 'mat4x2']: r#144
[#222 'mat4x3']: r#144
[#222 'mat4x4']: r#144
[#222 'ptr']: r#144
[#222 'sampler']: r#144
[#222 'sampler_comparison']: r#144
[#222 'texture_1d']: r#144
[#222 'texture_2d']: r#144
[#222 'texture_2d_array']: r#144
[#222 'texture_3d']: r#144
[#222 'texture_cube']: r#144
[#222 'texture_cube_array']: r#144
[#222 'texture_depth_2d']: r#144
[#222 'texture_depth_2d_array']: r#144
[#222 'texture_depth_cube']: r#144
[#222 'texture_depth_cube_array']: r#144
[#222 'texture_depth_multisampled_2d']: r#144
[#222 'texture_multisampled_2d']: r#144
[#222 'texture_storage_1d']: r#144
[#222 'texture_storage_2d']: r#144
[#222 'texture_storage_2d_array']: r#144
[#222 'texture_storage_3d']: r#144
[#222 'true']: r#144
[#222 'u32']: r#144
[#222 'vec2']: r#144
[#222 'vec3']: r#144
[#222 'vec4']: r#144
[#222 '~']: r#144
[#222 /0[xX][0-9a-fA-F]+[iu]?/]: r#144
[#223 '!']: r#145
[#223 '&']: r#145
[#223 '(']: r#145
[#223 '*']: r#145
[#223 '-']: r#145
[#223 '@']: r#145
[#223 'array']: r#145
[#223 'atomic']: r#145
[#223 'bitcast']: r#145
[#223 'bool']: r#145
[#223 'f16']: r#145
[#223 'f32']: r#145
[#223 'false']: r#145
[#223 'i32']: r#145
[#223 'mat2x2']: r#145
[#223 'mat2x3']: r#145
[#223 'mat2x4']: r#145
[#223 'mat3x2']: r#145
[#223 'mat3x3']: r#145
[#223 'mat3x4']: r#145
[#223 'mat4x2']: r#145
[#223 'mat4x3']: r#145
[#223 'mat4x4']: r#145
[#223 'ptr']: r#145
[#223 'sampler']: r#145
[#223 'sampler_comparison']: r#145
[#223 'texture_1d']: r#145
[#223 'texture_2d']: r#145
[#223 'texture_2d_array']: r#145
[#223 'texture_3d']: r#145
[#223 'texture_cube']: r#145
[#223 'texture_cube_array']: r#145
[#223 'texture_depth_2d']: r#145
[#223 'texture_depth_2d_array']: r#145
[#223 'texture_depth_cube']: r#145
[#223 'texture_depth_cube_array']: r#145
[#223 'texture_depth_multisampled_2d']: r#145
[#223 'texture_multisampled_2d']: r#145
[#223 'texture_storage_1d']: r#145
[#223 'texture_storage_2d']: r#145
[#223 'texture_storage_2d_array']: r#145
[#223 'texture_storage_3d']: r#145
[#223 'true']: r#145
[#223 'u32']: r#145
[#223 'vec2']: r#145
[#223 'vec3']: r#145
[#223 'vec4']: r#145
[#223 '~']: r#145
[#223 /0[xX][0-9a-fA-F]+[iu]?/]: r#145
[#224 '!']: r#146
[#224 '&']: r#146
[#224 '(']: r#146
[#224 '*']: r#146
[#224 '-']: r#146
[#224 '@']: r#146
[#224 'array']: r#146
[#224 'atomic']: r#146
[#224 'bitcast']: r#146
[#224 'bool']: r#146
[#224 'f16']: r#146
[#224 'f32']: r#146
[#224 'false']: r#146
[#224 'i32']: r#146
[#224 'mat2x2']: r#146
[#224 'mat2x3']: r#146
[#224 'mat2x4']: r#146
[#224 'mat3x2']: r#146
[#224 'mat3x3']: r#146
[#224 'mat3x4']: r#146
[#224 'mat4x2']: r#146
[#224 'mat4x3']: r#146
[#224 'mat4x4']: r#146
[#224 'ptr']: r#146
[#224 'sampler']: r#146
[#224 'sampler_comparison']: r#146
[#224 'texture_1d']: r#146
[#224 'texture_2d']: r#146
[#224 'texture_2d_array']: r#146
[#224 'texture_3d']: r#146
[#224 'texture_cube']: r#146
[#224 'texture_cube_array']: r#146
[#224 'texture_depth_2d']: r#146
[#224 'texture_depth_2d_array']: r#146
[#224 'texture_depth_cube']: r#146
[#224 'texture_depth_cube_array']: r#146
[#224 'texture_depth_multisampled_2d']: r#146
[#224 'texture_multisampled_2d']: r#146
[#224 'texture_storage_1d']: r#146
[#224 'texture_storage_2d']: r#146
[#224 'texture_storage_2d_array']: r#146
[#224 'texture_storage_3d']: r#146
[#224 'true']: r#146
[#224 'u32']: r#146
[#224 'vec2']: r#146
[#224 'vec3']: r#146
[#224 'vec4']: r#146
[#224 '~']: r#146
[#224 /0[xX][0-9a-fA-F]+[iu]?/]: r#146
[#225 '!']: r#147
[#225 '&']: r#147
[#225 '(']: r#147
[#225 '*']: r#147
[#225 '-']: r#147
[#225 '@']: r#147
[#225 'array']: r#147
[#225 'atomic']: r#147
[#225 'bitcast']: r#147
[#225 'bool']: r#147
[#225 'f16']: r#147
[#225 'f32']: r#147
[#225 'false']: r#147
[#225 'i32']: r#147
[#225 'mat2x2']: r#147
[#225 'mat2x3']: r#147
[#225 'mat2x4']: r#147
[#225 'mat3x2']: r#147
[#225 'mat3x3']: r#147
[#225 'mat3x4']: r#147
[#225 'mat4x2']: r#147
[#225 'mat4x3']: r#147
[#225 'mat4x4']: r#147
[#225 'ptr']: r#147
[#225 'sampler']: r#147
[#225 'sampler_comparison']: r#147
[#225 'texture_1d']: r#147
[#225 'texture_2d']: r#147
[#225 'texture_2d_array']: r#147
[#225 'texture_3d']: r#147
[#225 'texture_cube']: r#147
[#225 'texture_cube_array']: r#147
[#225 'texture_depth_2d']: r#147
[#225 'texture_depth_2d_array']: r#147
[#225 'texture_depth_cube']: r#147
[#225 'texture_depth_cube_array']: r#147
[#225 'texture_depth_multisampled_2d']: r#147
[#225 'texture_multisampled_2d']: r#147
[#225 'texture_storage_1d']: r#147
[#225 'texture_storage_2d']: r#147
[#225 'texture_storage_2d_array']: r#147
[#225 'texture_storage_3d']: r#147
[#225 'true']: r#147
[#225 'u32']: r#147
[#225 'vec2']: r#147
[#225 'vec3']: r#147
[#225 'vec4']: r#147
[#225 '~']: r#147
[#225 /0[xX][0-9a-fA-F]+[iu]?/]: r#147
[#226 '!']: r#148
[#226 '&']: r#148
[#226 '(']: r#148
[#226 '*']: r#148
[#226 '-']: r#148
[#226 '@']: r#148
[#226 'array']: r#148
[#226 'atomic']: r#148
[#226 'bitcast']: r#148
[#226 'bool']: r#148
[#226 'f16']: r#148
[#226 'f32']: r#148
[#226 'false']: r#148
[#226 'i32']: r#148
[#226 'mat2x2']: r#148
[#226 'mat2x3']: r#148
[#226 'mat2x4']: r#148
[#226 'mat3x2']: r#148
[#226 'mat3x3']: r#148
[#226 'mat3x4']: r#148
[#226 'mat4x2']: r#148
[#226 'mat4x3']: r#148
[#226 'mat4x4']: r#148
[#226 'ptr']: r#148
[#226 'sampler']: r#148
[#226 'sampler_comparison']: r#148
[#226 'texture_1d']: r#148
[#226 'texture_2d']: r#148
[#226 'texture_2d_array']: r#148
[#226 'texture_3d']: r#148
[#226 'texture_cube']: r#148
[#226 'texture_cube_array']: r#148
[#226 'texture_depth_2d']: r#148
[#226 'texture_depth_2d_array']: r#148
[#226 'texture_depth_cube']: r#148
[#226 'texture_depth_cube_array']: r#148
[#226 'texture_depth_multisampled_2d']: r#148
[#226 'texture_multisampled_2d']: r#148
[#226 'texture_storage_1d']: r#148
[#226 'texture_storage_2d']: r#148
[#226 'texture_storage_2d_array']: r#148
[#226 'texture_storage_3d']: r#148
[#226 'true']: r#148
[#226 'u32']: r#148
[#226 'vec2']: r#148
[#226 'vec3']: r#148
[#226 'vec4']: r#148
[#226 '~']: r#148
[#226 /0[xX][0-9a-fA-F]+[iu]?/]: r#148
[#227 '!']: s#77
[#227 '&']: s#80
[#227 '(']: s#13
[#227 '*']: s#79
[#227 '-']: s#76
[#227 '@']: s#38
[#227 'bitcast']: s#85
[#227 'false']: s#98
[#227 'true']: s#97
[#227 '~']: s#78
[#227 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#227 /0[fh]/]: s#102
[#227 /0[iu]?/]: s#99
[#227 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#227 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#227 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#227 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#227 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#227 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#227 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#227 /[1-9][0-9]*[fh]/]: s#103
[#227 /[1-9][0-9]*[iu]?/]: s#100
[#228 '!']: s#77
[#228 '&']: s#80
[#228 '(']: s#13
[#228 '*']: s#79
[#228 '-']: s#76
[#228 '@']: s#38
[#228 'bitcast']: s#85
[#228 'false']: s#98
[#228 'true']: s#97
[#228 '~']: s#78
[#228 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#228 /0[fh]/]: s#102
[#228 /0[iu]?/]: s#99
[#228 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#228 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#228 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#228 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#228 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#228 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#228 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#228 /[1-9][0-9]*[fh]/]: s#103
[#228 /[1-9][0-9]*[iu]?/]: s#100
[#229 '!']: r#149
[#229 '&']: r#149
[#229 '(']: r#149
[#229 '*']: r#149
[#229 '-']: r#149
[#229 '@']: r#149
[#229 'array']: r#149
[#229 'atomic']: r#149
[#229 'bitcast']: r#149
[#229 'bool']: r#149
[#229 'f16']: r#149
[#229 'f32']: r#149
[#229 'false']: r#149
[#229 'i32']: r#149
[#229 'mat2x2']: r#149
[#229 'mat2x3']: r#149
[#229 'mat2x4']: r#149
[#229 'mat3x2']: r#149
[#229 'mat3x3']: r#149
[#229 'mat3x4']: r#149
[#229 'mat4x2']: r#149
[#229 'mat4x3']: r#149
[#229 'mat4x4']: r#149
[#229 'ptr']: r#149
[#229 'sampler']: r#149
[#229 'sampler_comparison']: r#149
[#229 'texture_1d']: r#149
[#229 'texture_2d']: r#149
[#229 'texture_2d_array']: r#149
[#229 'texture_3d']: r#149
[#229 'texture_cube']: r#149
[#229 'texture_cube_array']: r#149
[#229 'texture_depth_2d']: r#149
[#229 'texture_depth_2d_array']: r#149
[#229 'texture_depth_cube']: r#149
[#229 'texture_depth_cube_array']: r#149
[#229 'texture_depth_multisampled_2d']: r#149
[#229 'texture_multisampled_2d']: r#149
[#229 'texture_storage_1d']: r#149
[#229 'texture_storage_2d']: r#149
[#229 'texture_storage_2d_array']: r#149
[#229 'texture_storage_3d']: r#149
[#229 'true']: r#149
[#229 'u32']: r#149
[#229 'vec2']: r#149
[#229 'vec3']: r#149
[#229 'vec4']: r#149
[#229 '~']: r#149
[#229 /0[xX][0-9a-fA-F]+[iu]?/]: r#149
[#230 '!']: r#150
[#230 '&']: r#150
[#230 '(']: r#150
[#230 '*']: r#150
[#230 '-']: r#150
[#230 '@']: r#150
[#230 'array']: r#150
[#230 'atomic']: r#150
[#230 'bitcast']: r#150
[#230 'bool']: r#150
[#230 'f16']: r#150
[#230 'f32']: r#150
[#230 'false']: r#150
[#230 'i32']: r#150
[#230 'mat2x2']: r#150
[#230 'mat2x3']: r#150
[#230 'mat2x4']: r#150
[#230 'mat3x2']: r#150
[#230 'mat3x3']: r#150
[#230 'mat3x4']: r#150
[#230 'mat4x2']: r#150
[#230 'mat4x3']: r#150
[#230 'mat4x4']: r#150
[#230 'ptr']: r#150
[#230 'sampler']: r#150
[#230 'sampler_comparison']: r#150
[#230 'texture_1d']: r#150
[#230 'texture_2d']: r#150
[#230 'texture_2d_array']: r#150
[#230 'texture_3d']: r#150
[#230 'texture_cube']: r#150
[#230 'texture_cube_array']: r#150
[#230 'texture_depth_2d']: r#150
[#230 'texture_depth_2d_array']: r#150
[#230 'texture_depth_cube']: r#150
[#230 'texture_depth_cube_array']: r#150
[#230 'texture_depth_multisampled_2d']: r#150
[#230 'texture_multisampled_2d']: r#150
[#230 'texture_storage_1d']: r#150
[#230 'texture_storage_2d']: r#150
[#230 'texture_storage_2d_array']: r#150
[#230 'texture_storage_3d']: r#150
[#230 'true']: r#150
[#230 'u32']: r#150
[#230 'vec2']: r#150
[#230 'vec3']: r#150
[#230 'vec4']: r#150
[#230 '~']: r#150
[#230 /0[xX][0-9a-fA-F]+[iu]?/]: r#150
[#231 '!']: s#77
[#231 '&']: s#80
[#231 '(']: s#13
[#231 '*']: s#79
[#231 '-']: s#76
[#231 '@']: s#38
[#231 'bitcast']: s#85
[#231 'false']: s#98
[#231 'true']: s#97
[#231 '~']: s#78
[#231 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#231 /0[fh]/]: s#102
[#231 /0[iu]?/]: s#99
[#231 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#231 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#231 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#231 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#231 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#231 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#231 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#231 /[1-9][0-9]*[fh]/]: s#103
[#231 /[1-9][0-9]*[iu]?/]: s#100
[#232 '!']: r#151
[#232 '&']: r#151
[#232 '(']: r#151
[#232 '*']: r#151
[#232 '-']: r#151
[#232 '@']: r#151
[#232 'array']: r#151
[#232 'atomic']: r#151
[#232 'bitcast']: r#151
[#232 'bool']: r#151
[#232 'f16']: r#151
[#232 'f32']: r#151
[#232 'false']: r#151
[#232 'i32']: r#151
[#232 'mat2x2']: r#151
[#232 'mat2x3']: r#151
[#232 'mat2x4']: r#151
[#232 'mat3x2']: r#151
[#232 'mat3x3']: r#151
[#232 'mat3x4']: r#151
[#232 'mat4x2']: r#151
[#232 'mat4x3']: r#151
[#232 'mat4x4']: r#151
[#232 'ptr']: r#151
[#232 'sampler']: r#151
[#232 'sampler_comparison']: r#151
[#232 'texture_1d']: r#151
[#232 'texture_2d']: r#151
[#232 'texture_2d_array']: r#151
[#232 'texture_3d']: r#151
[#232 'texture_cube']: r#151
[#232 'texture_cube_array']: r#151
[#232 'texture_depth_2d']: r#151
[#232 'texture_depth_2d_array']: r#151
[#232 'texture_depth_cube']: r#151
[#232 'texture_depth_cube_array']: r#151
[#232 'texture_depth_multisampled_2d']: r#151
[#232 'texture_multisampled_2d']: r#151
[#232 'texture_storage_1d']: r#151
[#232 'texture_storage_2d']: r#151
[#232 'texture_storage_2d_array']: r#151
[#232 'texture_storage_3d']: r#151
[#232 'true']: r#151
[#232 'u32']: r#151
[#232 'vec2']: r#151
[#232 'vec3']: r#151
[#232 'vec4']: r#151
[#232 '~']: r#151
[#232 /0[xX][0-9a-fA-F]+[iu]?/]: r#151
[#233 '!']: r#152
[#233 '&']: r#152
[#233 '(']: r#152
[#233 '*']: r#152
[#233 '-']: r#152
[#233 '@']: r#152
[#233 'array']: r#152
[#233 'atomic']: r#152
[#233 'bitcast']: r#152
[#233 'bool']: r#152
[#233 'f16']: r#152
[#233 'f32']: r#152
[#233 'false']: r#152
[#233 'i32']: r#152
[#233 'mat2x2']: r#152
[#233 'mat2x3']: r#152
[#233 'mat2x4']: r#152
[#233 'mat3x2']: r#152
[#233 'mat3x3']: r#152
[#233 'mat3x4']: r#152
[#233 'mat4x2']: r#152
[#233 'mat4x3']: r#152
[#233 'mat4x4']: r#152
[#233 'ptr']: r#152
[#233 'sampler']: r#152
[#233 'sampler_comparison']: r#152
[#233 'texture_1d']: r#152
[#233 'texture_2d']: r#152
[#233 'texture_2d_array']: r#152
[#233 'texture_3d']: r#152
[#233 'texture_cube']: r#152
[#233 'texture_cube_array']: r#152
[#233 'texture_depth_2d']: r#152
[#233 'texture_depth_2d_array']: r#152
[#233 'texture_depth_cube']: r#152
[#233 'texture_depth_cube_array']: r#152
[#233 'texture_depth_multisampled_2d']: r#152
[#233 'texture_multisampled_2d']: r#152
[#233 'texture_storage_1d']: r#152
[#233 'texture_storage_2d']: r#152
[#233 'texture_storage_2d_array']: r#152
[#233 'texture_storage_3d']: r#152
[#233 'true']: r#152
[#233 'u32']: r#152
[#233 'vec2']: r#152
[#233 'vec3']: r#152
[#233 'vec4']: r#152
[#233 '~']: r#152
[#233 /0[xX][0-9a-fA-F]+[iu]?/]: r#152
[#234 '!']: r#153
[#234 '&']: r#153
[#234 '(']: r#153
[#234 '*']: r#153
[#234 '-']: r#153
[#234 '@']: r#153
[#234 'array']: r#153
[#234 'atomic']: r#153
[#234 'bitcast']: r#153
[#234 'bool']: r#153
[#234 'f16']: r#153
[#234 'f32']: r#153
[#234 'false']: r#153
[#234 'i32']: r#153
[#234 'mat2x2']: r#153
[#234 'mat2x3']: r#153
[#234 'mat2x4']: r#153
[#234 'mat3x2']: r#153
[#234 'mat3x3']: r#153
[#234 'mat3x4']: r#153
[#234 'mat4x2']: r#153
[#234 'mat4x3']: r#153
[#234 'mat4x4']: r#153
[#234 'ptr']: r#153
[#234 'sampler']: r#153
[#234 'sampler_comparison']: r#153
[#234 'texture_1d']: r#153
[#234 'texture_2d']: r#153
[#234 'texture_2d_array']: r#153
[#234 'texture_3d']: r#153
[#234 'texture_cube']: r#153
[#234 'texture_cube_array']: r#153
[#234 'texture_depth_2d']: r#153
[#234 'texture_depth_2d_array']: r#153
[#234 'texture_depth_cube']: r#153
[#234 'texture_depth_cube_array']: r#153
[#234 'texture_depth_multisampled_2d']: r#153
[#234 'texture_multisampled_2d']: r#153
[#234 'texture_storage_1d']: r#153
[#234 'texture_storage_2d']: r#153
[#234 'texture_storage_2d_array']: r#153
[#234 'texture_storage_3d']: r#153
[#234 'true']: r#153
[#234 'u32']: r#153
[#234 'vec2']: r#153
[#234 'vec3']: r#153
[#234 'vec4']: r#153
[#234 '~']: r#153
[#234 /0[xX][0-9a-fA-F]+[iu]?/]: r#153
[#235 '!']: s#77
[#235 '&']: s#80
[#235 '(']: s#13
[#235 '*']: s#79
[#235 '-']: s#76
[#235 '@']: s#38
[#235 'bitcast']: s#85
[#235 'false']: s#98
[#235 'true']: s#97
[#235 '~']: s#78
[#235 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#235 /0[fh]/]: s#102
[#235 /0[iu]?/]: s#99
[#235 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#235 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#235 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#235 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#235 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#235 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#235 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#235 /[1-9][0-9]*[fh]/]: s#103
[#235 /[1-9][0-9]*[iu]?/]: s#100
[#236 '!']: r#154
[#236 '&']: r#154
[#236 '(']: r#154
[#236 '*']: r#154
[#236 '-']: r#154
[#236 '@']: r#154
[#236 'array']: r#154
[#236 'atomic']: r#154
[#236 'bitcast']: r#154
[#236 'bool']: r#154
[#236 'f16']: r#154
[#236 'f32']: r#154
[#236 'false']: r#154
[#236 'i32']: r#154
[#236 'mat2x2']: r#154
[#236 'mat2x3']: r#154
[#236 'mat2x4']: r#154
[#236 'mat3x2']: r#154
[#236 'mat3x3']: r#154
[#236 'mat3x4']: r#154
[#236 'mat4x2']: r#154
[#236 'mat4x3']: r#154
[#236 'mat4x4']: r#154
[#236 'ptr']: r#154
[#236 'sampler']: r#154
[#236 'sampler_comparison']: r#154
[#236 'texture_1d']: r#154
[#236 'texture_2d']: r#154
[#236 'texture_2d_array']: r#154
[#236 'texture_3d']: r#154
[#236 'texture_cube']: r#154
[#236 'texture_cube_array']: r#154
[#236 'texture_depth_2d']: r#154
[#236 'texture_depth_2d_array']: r#154
[#236 'texture_depth_cube']: r#154
[#236 'texture_depth_cube_array']: r#154
[#236 'texture_depth_multisampled_2d']: r#154
[#236 'texture_multisampled_2d']: r#154
[#236 'texture_storage_1d']: r#154
[#236 'texture_storage_2d']: r#154
[#236 'texture_storage_2d_array']: r#154
[#236 'texture_storage_3d']: r#154
[#236 'true']: r#154
[#236 'u32']: r#154
[#236 'vec2']: r#154
[#236 'vec3']: r#154
[#236 'vec4']: r#154
[#236 '~']: r#154
[#236 /0[xX][0-9a-fA-F]+[iu]?/]: r#154
[#237 '!']: s#77
[#237 '&']: s#80
[#237 '(']: s#13
[#237 '*']: s#79
[#237 '-']: s#76
[#237 '@']: s#38
[#237 'bitcast']: s#85
[#237 'false']: s#98
[#237 'true']: s#97
[#237 '~']: s#78
[#237 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#237 /0[fh]/]: s#102
[#237 /0[iu]?/]: s#99
[#237 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#237 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#237 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#237 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#237 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#237 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#237 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#237 /[1-9][0-9]*[fh]/]: s#103
[#237 /[1-9][0-9]*[iu]?/]: s#100
[#238 '!']: r#155
[#238 '&']: r#155
[#238 '(']: r#155
[#238 '*']: r#155
[#238 '-']: r#155
[#238 '@']: r#155
[#238 'array']: r#155
[#238 'atomic']: r#155
[#238 'bitcast']: r#155
[#238 'bool']: r#155
[#238 'f16']: r#155
[#238 'f32']: r#155
[#238 'false']: r#155
[#238 'i32']: r#155
[#238 'mat2x2']: r#155
[#238 'mat2x3']: r#155
[#238 'mat2x4']: r#155
[#238 'mat3x2']: r#155
[#238 'mat3x3']: r#155
[#238 'mat3x4']: r#155
[#238 'mat4x2']: r#155
[#238 'mat4x3']: r#155
[#238 'mat4x4']: r#155
[#238 'ptr']: r#155
[#238 'sampler']: r#155
[#238 'sampler_comparison']: r#155
[#238 'texture_1d']: r#155
[#238 'texture_2d']: r#155
[#238 'texture_2d_array']: r#155
[#238 'texture_3d']: r#155
[#238 'texture_cube']: r#155
[#238 'texture_cube_array']: r#155
[#238 'texture_depth_2d']: r#155
[#238 'texture_depth_2d_array']: r#155
[#238 'texture_depth_cube']: r#155
[#238 'texture_depth_cube_array']: r#155
[#238 'texture_depth_multisampled_2d']: r#155
[#238 'texture_multisampled_2d']: r#155
[#238 'texture_storage_1d']: r#155
[#238 'texture_storage_2d']: r#155
[#238 'texture_storage_2d_array']: r#155
[#238 'texture_storage_3d']: r#155
[#238 'true']: r#155
[#238 'u32']: r#155
[#238 'vec2']: r#155
[#238 'vec3']: r#155
[#238 'vec4']: r#155
[#238 '~']: r#155
[#238 /0[xX][0-9a-fA-F]+[iu]?/]: r#155
[#239 '!']: s#77
[#239 '&']: s#80
[#239 '(']: s#13
[#239 '*']: s#79
[#239 '-']: s#76
[#239 '@']: s#38
[#239 'bitcast']: s#85
[#239 'false']: s#98
[#239 'true']: s#97
[#239 '~']: s#78
[#239 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#239 /0[fh]/]: s#102
[#239 /0[iu]?/]: s#99
[#239 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#239 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#239 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#239 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#239 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#239 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#239 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#239 /[1-9][0-9]*[fh]/]: s#103
[#239 /[1-9][0-9]*[iu]?/]: s#100
[#240 '!']: s#77
[#240 '&']: s#80
[#240 '(']: s#13
[#240 '*']: s#79
[#240 '-']: s#76
[#240 '@']: s#38
[#240 'bitcast']: s#85
[#240 'false']: s#98
[#240 'true']: s#97
[#240 '~']: s#78
[#240 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#240 /0[fh]/]: s#102
[#240 /0[iu]?/]: s#99
[#240 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#240 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#240 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#240 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#240 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#240 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#240 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#240 /[1-9][0-9]*[fh]/]: s#103
[#240 /[1-9][0-9]*[iu]?/]: s#100
[#241 '!']: s#77
[#241 '&']: s#80
[#241 '(']: s#13
[#241 '*']: s#79
[#241 '-']: s#76
[#241 '@']: s#38
[#241 'bitcast']: s#85
[#241 'false']: s#98
[#241 'true']: s#97
[#241 '~']: s#78
[#241 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#241 /0[fh]/]: s#102
[#241 /0[iu]?/]: s#99
[#241 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#241 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#241 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#241 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#241 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#241 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#241 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#241 /[1-9][0-9]*[fh]/]: s#103
[#241 /[1-9][0-9]*[iu]?/]: s#100
[#242 '!']: s#77
[#242 '&']: s#80
[#242 '(']: s#13
[#242 '*']: s#79
[#242 '-']: s#76
[#242 '@']: s#38
[#242 'bitcast']: s#85
[#242 'false']: s#98
[#242 'true']: s#97
[#242 '~']: s#78
[#242 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#242 /0[fh]/]: s#102
[#242 /0[iu]?/]: s#99
[#242 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#242 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#242 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#242 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#242 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#242 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#242 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#242 /[1-9][0-9]*[fh]/]: s#103
[#242 /[1-9][0-9]*[iu]?/]: s#100
[#243 '!']: s#77
[#243 '&']: s#80
[#243 '(']: s#13
[#243 '*']: s#79
[#243 '-']: s#76
[#243 '@']: s#38
[#243 'bitcast']: s#85
[#243 'false']: s#98
[#243 'true']: s#97
[#243 '~']: s#78
[#243 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#243 /0[fh]/]: s#102
[#243 /0[iu]?/]: s#99
[#243 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#243 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#243 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#243 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#243 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#243 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#243 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#243 /[1-9][0-9]*[fh]/]: s#103
[#243 /[1-9][0-9]*[iu]?/]: s#100
[#244 '!']: s#77
[#244 '&']: s#80
[#244 '(']: s#13
[#244 '*']: s#79
[#244 '-']: s#76
[#244 '@']: s#38
[#244 'bitcast']: s#85
[#244 'false']: s#98
[#244 'true']: s#97
[#244 '~']: s#78
[#244 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#244 /0[fh]/]: s#102
[#244 /0[iu]?/]: s#99
[#244 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#244 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#244 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#244 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#244 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#244 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#244 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#244 /[1-9][0-9]*[fh]/]: s#103
[#244 /[1-9][0-9]*[iu]?/]: s#100
[#245 '!']: s#77
[#245 '&']: s#80
[#245 '(']: s#13
[#245 '*']: s#79
[#245 '-']: s#76
[#245 '@']: s#38
[#245 'bitcast']: s#85
[#245 'false']: s#98
[#245 'true']: s#97
[#245 '~']: s#78
[#245 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#245 /0[fh]/]: s#102
[#245 /0[iu]?/]: s#99
[#245 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#245 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#245 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#245 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#245 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#245 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#245 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#245 /[1-9][0-9]*[fh]/]: s#103
[#245 /[1-9][0-9]*[iu]?/]: s#100
[#246 '!']: r#156
[#246 '&']: r#156
[#246 '(']: r#156
[#246 ')']: r#156
[#246 '*']: r#156
[#246 ',']: r#156
[#246 '-']: r#156
[#246 ';']: r#156
[#246 '=']: r#156
[#246 '>']: r#156
[#246 '@']: r#156
[#246 'array']: r#156
[#246 'atomic']: r#156
[#246 'bitcast']: r#156
[#246 'bool']: r#156
[#246 'f16']: r#156
[#246 'f32']: r#156
[#246 'false']: r#156
[#246 'i32']: r#156
[#246 'mat2x2']: r#156
[#246 'mat2x3']: r#156
[#246 'mat2x4']: r#156
[#246 'mat3x2']: r#156
[#246 'mat3x3']: r#156
[#246 'mat3x4']: r#156
[#246 'mat4x2']: r#156
[#246 'mat4x3']: r#156
[#246 'mat4x4']: r#156
[#246 'ptr']: r#156
[#246 'sampler']: r#156
[#246 'sampler_comparison']: r#156
[#246 'texture_1d']: r#156
[#246 'texture_2d']: r#156
[#246 'texture_2d_array']: r#156
[#246 'texture_3d']: r#156
[#246 'texture_cube']: r#156
[#246 'texture_cube_array']: r#156
[#246 'texture_depth_2d']: r#156
[#246 'texture_depth_2d_array']: r#156
[#246 'texture_depth_cube']: r#156
[#246 'texture_depth_cube_array']: r#156
[#246 'texture_depth_multisampled_2d']: r#156
[#246 'texture_multisampled_2d']: r#156
[#246 'texture_storage_1d']: r#156
[#246 'texture_storage_2d']: r#156
[#246 'texture_storage_2d_array']: r#156
[#246 'texture_storage_3d']: r#156
[#246 'true']: r#156
[#246 'u32']: r#156
[#246 'vec2']: r#156
[#246 'vec3']: r#156
[#246 'vec4']: r#156
[#246 '{']: r#156
[#246 '}']: r#156
[#246 '~']: r#156
[#246 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#156
[#246 /0[xX][0-9a-fA-F]+[iu]?/]: r#156
[#247 '!']: r#157
[#247 '&']: r#157
[#247 '(']: r#157
[#247 '*']: r#157
[#247 '-']: r#157
[#247 '@']: r#157
[#247 'array']: r#157
[#247 'atomic']: r#157
[#247 'bitcast']: r#157
[#247 'bool']: r#157
[#247 'f16']: r#157
[#247 'f32']: r#157
[#247 'false']: r#157
[#247 'i32']: r#157
[#247 'mat2x2']: r#157
[#247 'mat2x3']: r#157
[#247 'mat2x4']: r#157
[#247 'mat3x2']: r#157
[#247 'mat3x3']: r#157
[#247 'mat3x4']: r#157
[#247 'mat4x2']: r#157
[#247 'mat4x3']: r#157
[#247 'mat4x4']: r#157
[#247 'ptr']: r#157
[#247 'sampler']: r#157
[#247 'sampler_comparison']: r#157
[#247 'texture_1d']: r#157
[#247 'texture_2d']: r#157
[#247 'texture_2d_array']: r#157
[#247 'texture_3d']: r#157
[#247 'texture_cube']: r#157
[#247 'texture_cube_array']: r#157
[#247 'texture_depth_2d']: r#157
[#247 'texture_depth_2d_array']: r#157
[#247 'texture_depth_cube']: r#157
[#247 'texture_depth_cube_array']: r#157
[#247 'texture_depth_multisampled_2d']: r#157
[#247 'texture_multisampled_2d']: r#157
[#247 'texture_storage_1d']: r#157
[#247 'texture_storage_2d']: r#157
[#247 'texture_storage_2d_array']: r#157
[#247 'texture_storage_3d']: r#157
[#247 'true']: r#157
[#247 'u32']: r#157
[#247 'vec2']: r#157
[#247 'vec3']: r#157
[#247 'vec4']: r#157
[#247 '~']: r#157
[#247 /0[xX][0-9a-fA-F]+[iu]?/]: r#157
[#248 '!']: r#158
[#248 '&']: r#158
[#248 '(']: r#158
[#248 '*']: r#158
[#248 '-']: r#158
[#248 '@']: r#158
[#248 'array']: r#158
[#248 'atomic']: r#158
[#248 'bitcast']: r#158
[#248 'bool']: r#158
[#248 'f16']: r#158
[#248 'f32']: r#158
[#248 'false']: r#158
[#248 'i32']: r#158
[#248 'mat2x2']: r#158
[#248 'mat2x3']: r#158
[#248 'mat2x4']: r#158
[#248 'mat3x2']: r#158
[#248 'mat3x3']: r#158
[#248 'mat3x4']: r#158
[#248 'mat4x2']: r#158
[#248 'mat4x3']: r#158
[#248 'mat4x4']: r#158
[#248 'ptr']: r#158
[#248 'sampler']: r#158
[#248 'sampler_comparison']: r#158
[#248 'texture_1d']: r#158
[#248 'texture_2d']: r#158
[#248 'texture_2d_array']: r#158
[#248 'texture_3d']: r#158
[#248 'texture_cube']: r#158
[#248 'texture_cube_array']: r#158
[#248 'texture_depth_2d']: r#158
[#248 'texture_depth_2d_array']: r#158
[#248 'texture_depth_cube']: r#158
[#248 'texture_depth_cube_array']: r#158
[#248 'texture_depth_multisampled_2d']: r#158
[#248 'texture_multisampled_2d']: r#158
[#248 'texture_storage_1d']: r#158
[#248 'texture_storage_2d']: r#158
[#248 'texture_storage_2d_array']: r#158
[#248 'texture_storage_3d']: r#158
[#248 'true']: r#158
[#248 'u32']: r#158
[#248 'vec2']: r#158
[#248 'vec3']: r#158
[#248 'vec4']: r#158
[#248 '~']: r#158
[#248 /0[xX][0-9a-fA-F]+[iu]?/]: r#158
[#249 '!']: r#159
[#249 '&']: r#159
[#249 '(']: r#159
[#249 '*']: r#159
[#249 '-']: r#159
[#249 '@']: r#159
[#249 'array']: r#159
[#249 'atomic']: r#159
[#249 'bitcast']: r#159
[#249 'bool']: r#159
[#249 'f16']: r#159
[#249 'f32']: r#159
[#249 'false']: r#159
[#249 'i32']: r#159
[#249 'mat2x2']: r#159
[#249 'mat2x3']: r#159
[#249 'mat2x4']: r#159
[#249 'mat3x2']: r#159
[#249 'mat3x3']: r#159
[#249 'mat3x4']: r#159
[#249 'mat4x2']: r#159
[#249 'mat4x3']: r#159
[#249 'mat4x4']: r#159
[#249 'ptr']: r#159
[#249 'sampler']: r#159
[#249 'sampler_comparison']: r#159
[#249 'texture_1d']: r#159
[#249 'texture_2d']: r#159
[#249 'texture_2d_array']: r#159
[#249 'texture_3d']: r#159
[#249 'texture_cube']: r#159
[#249 'texture_cube_array']: r#159
[#249 'texture_depth_2d']: r#159
[#249 'texture_depth_2d_array']: r#159
[#249 'texture_depth_cube']: r#159
[#249 'texture_depth_cube_array']: r#159
[#249 'texture_depth_multisampled_2d']: r#159
[#249 'texture_multisampled_2d']: r#159
[#249 'texture_storage_1d']: r#159
[#249 'texture_storage_2d']: r#159
[#249 'texture_storage_2d_array']: r#159
[#249 'texture_storage_3d']: r#159
[#249 'true']: r#159
[#249 'u32']: r#159
[#249 'vec2']: r#159
[#249 'vec3']: r#159
[#249 'vec4']: r#159
[#249 '~']: r#159
[#249 /0[xX][0-9a-fA-F]+[iu]?/]: r#159
[#250 '!']: r#160
[#250 '&']: r#160
[#250 '(']: r#160
[#250 '*']: r#160
[#250 '-']: r#160
[#250 '@']: r#160
[#250 'array']: r#160
[#250 'atomic']: r#160
[#250 'bitcast']: r#160
[#250 'bool']: r#160
[#250 'f16']: r#160
[#250 'f32']: r#160
[#250 'false']: r#160
[#250 'i32']: r#160
[#250 'mat2x2']: r#160
[#250 'mat2x3']: r#160
[#250 'mat2x4']: r#160
[#250 'mat3x2']: r#160
[#250 'mat3x3']: r#160
[#250 'mat3x4']: r#160
[#250 'mat4x2']: r#160
[#250 'mat4x3']: r#160
[#250 'mat4x4']: r#160
[#250 'ptr']: r#160
[#250 'sampler']: r#160
[#250 'sampler_comparison']: r#160
[#250 'texture_1d']: r#160
[#250 'texture_2d']: r#160
[#250 'texture_2d_array']: r#160
[#250 'texture_3d']: r#160
[#250 'texture_cube']: r#160
[#250 'texture_cube_array']: r#160
[#250 'texture_depth_2d']: r#160
[#250 'texture_depth_2d_array']: r#160
[#250 'texture_depth_cube']: r#160
[#250 'texture_depth_cube_array']: r#160
[#250 'texture_depth_multisampled_2d']: r#160
[#250 'texture_multisampled_2d']: r#160
[#250 'texture_storage_1d']: r#160
[#250 'texture_storage_2d']: r#160
[#250 'texture_storage_2d_array']: r#160
[#250 'texture_storage_3d']: r#160
[#250 'true']: r#160
[#250 'u32']: r#160
[#250 'vec2']: r#160
[#250 'vec3']: r#160
[#250 'vec4']: r#160
[#250 '~']: r#160
[#250 /0[xX][0-9a-fA-F]+[iu]?/]: r#160
[#251 '!']: s#77
[#251 '&']: s#80
[#251 '(']: s#13
[#251 '*']: s#79
[#251 '-']: s#76
[#251 '@']: s#38
[#251 'bitcast']: s#85
[#251 'false']: s#98
[#251 'true']: s#97
[#251 '~']: s#78
[#251 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#251 /0[fh]/]: s#102
[#251 /0[iu]?/]: s#99
[#251 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#251 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#251 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#251 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#251 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#251 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#251 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#251 /[1-9][0-9]*[fh]/]: s#103
[#251 /[1-9][0-9]*[iu]?/]: s#100
[#252 '!']: r#161
[#252 '&']: r#161
[#252 '(']: r#161
[#252 '*']: r#161
[#252 '-']: r#161
[#252 '@']: r#161
[#252 'array']: r#161
[#252 'atomic']: r#161
[#252 'bitcast']: r#161
[#252 'bool']: r#161
[#252 'f16']: r#161
[#252 'f32']: r#161
[#252 'false']: r#161
[#252 'i32']: r#161
[#252 'mat2x2']: r#161
[#252 'mat2x3']: r#161
[#252 'mat2x4']: r#161
[#252 'mat3x2']: r#161
[#252 'mat3x3']: r#161
[#252 'mat3x4']: r#161
[#252 'mat4x2']: r#161
[#252 'mat4x3']: r#161
[#252 'mat4x4']: r#161
[#252 'ptr']: r#161
[#252 'sampler']: r#161
[#252 'sampler_comparison']: r#161
[#252 'texture_1d']: r#161
[#252 'texture_2d']: r#161
[#252 'texture_2d_array']: r#161
[#252 'texture_3d']: r#161
[#252 'texture_cube']: r#161
[#252 'texture_cube_array']: r#161
[#252 'texture_depth_2d']: r#161
[#252 'texture_depth_2d_array']: r#161
[#252 'texture_depth_cube']: r#161
[#252 'texture_depth_cube_array']: r#161
[#252 'texture_depth_multisampled_2d']: r#161
[#252 'texture_multisampled_2d']: r#161
[#252 'texture_storage_1d']: r#161
[#252 'texture_storage_2d']: r#161
[#252 'texture_storage_2d_array']: r#161
[#252 'texture_storage_3d']: r#161
[#252 'true']: r#161
[#252 'u32']: r#161
[#252 'vec2']: r#161
[#252 'vec3']: r#161
[#252 'vec4']: r#161
[#252 '~']: r#161
[#252 /0[xX][0-9a-fA-F]+[iu]?/]: r#161
[#253 '!']: s#77
[#253 '&']: s#80
[#253 '(']: s#13
[#253 '*']: s#79
[#253 '-']: s#76
[#253 '@']: s#38
[#253 'bitcast']: s#85
[#253 'false']: s#98
[#253 'true']: s#97
[#253 '~']: s#78
[#253 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#253 /0[fh]/]: s#102
[#253 /0[iu]?/]: s#99
[#253 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#253 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#253 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#253 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#253 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#253 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#253 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#253 /[1-9][0-9]*[fh]/]: s#103
[#253 /[1-9][0-9]*[iu]?/]: s#100
[#254 '!']: r#162
[#254 '&']: r#162
[#254 '(']: r#162
[#254 '*']: r#162
[#254 '-']: r#162
[#254 '@']: r#162
[#254 'array']: r#162
[#254 'atomic']: r#162
[#254 'bitcast']: r#162
[#254 'bool']: r#162
[#254 'f16']: r#162
[#254 'f32']: r#162
[#254 'false']: r#162
[#254 'i32']: r#162
[#254 'mat2x2']: r#162
[#254 'mat2x3']: r#162
[#254 'mat2x4']: r#162
[#254 'mat3x2']: r#162
[#254 'mat3x3']: r#162
[#254 'mat3x4']: r#162
[#254 'mat4x2']: r#162
[#254 'mat4x3']: r#162
[#254 'mat4x4']: r#162
[#254 'ptr']: r#162
[#254 'sampler']: r#162
[#254 'sampler_comparison']: r#162
[#254 'texture_1d']: r#162
[#254 'texture_2d']: r#162
[#254 'texture_2d_array']: r#162
[#254 'texture_3d']: r#162
[#254 'texture_cube']: r#162
[#254 'texture_cube_array']: r#162
[#254 'texture_depth_2d']: r#162
[#254 'texture_depth_2d_array']: r#162
[#254 'texture_depth_cube']: r#162
[#254 'texture_depth_cube_array']: r#162
[#254 'texture_depth_multisampled_2d']: r#162
[#254 'texture_multisampled_2d']: r#162
[#254 'texture_storage_1d']: r#162
[#254 'texture_storage_2d']: r#162
[#254 'texture_storage_2d_array']: r#162
[#254 'texture_storage_3d']: r#162
[#254 'true']: r#162
[#254 'u32']: r#162
[#254 'vec2']: r#162
[#254 'vec3']: r#162
[#254 'vec4']: r#162
[#254 '~']: r#162
[#254 /0[xX][0-9a-fA-F]+[iu]?/]: r#162
[#255 '!']: s#77
[#255 '&']: s#80
[#255 '(']: s#13
[#255 '*']: s#79
[#255 '-']: s#76
[#255 '@']: s#38
[#255 'bitcast']: s#85
[#255 'false']: s#98
[#255 'true']: s#97
[#255 '~']: s#78
[#255 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#255 /0[fh]/]: s#102
[#255 /0[iu]?/]: s#99
[#255 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#255 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#255 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#255 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#255 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#255 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#255 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#255 /[1-9][0-9]*[fh]/]: s#103
[#255 /[1-9][0-9]*[iu]?/]: s#100
[#256 '!']: s#77
[#256 '&']: s#80
[#256 '(']: s#13
[#256 '*']: s#79
[#256 '-']: s#76
[#256 '@']: s#38
[#256 'bitcast']: s#85
[#256 'false']: s#98
[#256 'true']: s#97
[#256 '~']: s#78
[#256 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#256 /0[fh]/]: s#102
[#256 /0[iu]?/]: s#99
[#256 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#256 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#256 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#256 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#256 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#256 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#256 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#256 /[1-9][0-9]*[fh]/]: s#103
[#256 /[1-9][0-9]*[iu]?/]: s#100
[#257 '!']: s#77
[#257 '&']: s#80
[#257 '(']: s#13
[#257 '*']: s#79
[#257 '-']: s#76
[#257 '@']: s#38
[#257 'bitcast']: s#85
[#257 'false']: s#98
[#257 'true']: s#97
[#257 '~']: s#78
[#257 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#257 /0[fh]/]: s#102
[#257 /0[iu]?/]: s#99
[#257 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#257 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#257 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#257 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#257 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#257 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#257 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#257 /[1-9][0-9]*[fh]/]: s#103
[#257 /[1-9][0-9]*[iu]?/]: s#100
[#258 'flat']: s#285
[#258 'linear']: s#284
[#258 'perspective']: s#283
[#259 '!']: s#77
[#259 '&']: s#80
[#259 '(']: s#13
[#259 '*']: s#79
[#259 '-']: s#76
[#259 '@']: s#38
[#259 'bitcast']: s#85
[#259 'false']: s#98
[#259 'true']: s#97
[#259 '~']: s#78
[#259 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#259 /0[fh]/]: s#102
[#259 /0[iu]?/]: s#99
[#259 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#259 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#259 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#259 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#259 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#259 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#259 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#259 /[1-9][0-9]*[fh]/]: s#103
[#259 /[1-9][0-9]*[iu]?/]: s#100
[#260 '!']: s#77
[#260 '&']: s#80
[#260 '(']: s#13
[#260 '*']: s#79
[#260 '-']: s#76
[#260 '@']: s#38
[#260 'bitcast']: s#85
[#260 'false']: s#98
[#260 'true']: s#97
[#260 '~']: s#78
[#260 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#260 /0[fh]/]: s#102
[#260 /0[iu]?/]: s#99
[#260 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#260 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#260 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#260 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#260 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#260 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#260 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#260 /[1-9][0-9]*[fh]/]: s#103
[#260 /[1-9][0-9]*[iu]?/]: s#100
[#261 '@']: r#163
[#261 'array']: r#163
[#261 'atomic']: r#163
[#261 'bool']: r#163
[#261 'f16']: r#163
[#261 'f32']: r#163
[#261 'fn']: r#163
[#261 'i32']: r#163
[#261 'mat2x2']: r#163
[#261 'mat2x3']: r#163
[#261 'mat2x4']: r#163
[#261 'mat3x2']: r#163
[#261 'mat3x3']: r#163
[#261 'mat3x4']: r#163
[#261 'mat4x2']: r#163
[#261 'mat4x3']: r#163
[#261 'mat4x4']: r#163
[#261 'override']: r#163
[#261 'ptr']: r#163
[#261 'sampler']: r#163
[#261 'sampler_comparison']: r#163
[#261 'texture_1d']: r#163
[#261 'texture_2d']: r#163
[#261 'texture_2d_array']: r#163
[#261 'texture_3d']: r#163
[#261 'texture_cube']: r#163
[#261 'texture_cube_array']: r#163
[#261 'texture_depth_2d']: r#163
[#261 'texture_depth_2d_array']: r#163
[#261 'texture_depth_cube']: r#163
[#261 'texture_depth_cube_array']: r#163
[#261 'texture_depth_multisampled_2d']: r#163
[#261 'texture_multisampled_2d']: r#163
[#261 'texture_storage_1d']: r#163
[#261 'texture_storage_2d']: r#163
[#261 'texture_storage_2d_array']: r#163
[#261 'texture_storage_3d']: r#163
[#261 'u32']: r#163
[#261 'var']: r#163
[#261 'vec2']: r#163
[#261 'vec3']: r#163
[#261 'vec4']: r#163
[#262 'frag_depth']: s#272
[#262 'front_facing']: s#271
[#262 'global_invocation_id']: s#275
[#262 'instance_index']: s#269
[#262 'local_invocation_id']: s#273
[#262 'local_invocation_index']: s#274
[#262 'num_workgroups']: s#277
[#262 'position']: s#270
[#262 'sample_index']: s#278
[#262 'sample_mask']: s#279
[#262 'vertex_index']: s#268
[#262 'workgroup_id']: s#276
[#263 '!']: s#77
[#263 '&']: s#80
[#263 '(']: s#13
[#263 '*']: s#79
[#263 '-']: s#76
[#263 '@']: s#38
[#263 'bitcast']: s#85
[#263 'false']: s#98
[#263 'true']: s#97
[#263 '~']: s#78
[#263 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#263 /0[fh]/]: s#102
[#263 /0[iu]?/]: s#99
[#263 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#263 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#263 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#263 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#263 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#263 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#263 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#263 /[1-9][0-9]*[fh]/]: s#103
[#263 /[1-9][0-9]*[iu]?/]: s#100
[#264 '!']: s#77
[#264 '&']: s#80
[#264 '(']: s#13
[#264 '*']: s#79
[#264 '-']: s#76
[#264 '@']: s#38
[#264 'bitcast']: s#85
[#264 'false']: s#98
[#264 'true']: s#97
[#264 '~']: s#78
[#264 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#264 /0[fh]/]: s#102
[#264 /0[iu]?/]: s#99
[#264 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#264 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#264 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#264 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#264 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#264 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#264 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#264 /[1-9][0-9]*[fh]/]: s#103
[#264 /[1-9][0-9]*[iu]?/]: s#100
[#265 ',']: s#131
[#266 ',']: s#131
[#267 ',']: s#131
[#268 ')']: r#164
[#268 ',']: r#164
[#269 ')']: r#165
[#269 ',']: r#165
[#270 ')']: r#166
[#270 ',']: r#166
[#271 ')']: r#167
[#271 ',']: r#167
[#272 ')']: r#168
[#272 ',']: r#168
[#273 ')']: r#169
[#273 ',']: r#169
[#274 ')']: r#170
[#274 ',']: r#170
[#275 ')']: r#171
[#275 ',']: r#171
[#276 ')']: r#172
[#276 ',']: r#172
[#277 ')']: r#173
[#277 ',']: r#173
[#278 ')']: r#174
[#278 ',']: r#174
[#279 ')']: r#175
[#279 ',']: r#175
[#280 ',']: s#131
[#281 ',']: s#131
[#282 ',']: s#131
[#283 ')']: r#176
[#283 ',']: r#176
[#284 ')']: r#177
[#284 ',']: r#177
[#285 ')']: r#178
[#285 ',']: r#178
[#286 ',']: s#131
[#287 ',']: s#131
[#288 ',']: s#131
[#289 ')']: r#179
[#289 ',']: r#179
[#289 ':']: r#179
[#289 ';']: r#179
[#289 ']']: r#179
[#289 '{']: r#179
[#289 '||']: r#180
[#290 '!=']: r#34
[#290 '%']: r#34
[#290 '&&']: r#34
[#290 ')']: r#34
[#290 '*']: r#34
[#290 '+']: r#34
[#290 ',']: r#34
[#290 '-']: r#34
[#290 '/']: r#34
[#290 ':']: r#34
[#290 ';']: r#34
[#290 '<']: r#34
[#290 '<<']: s#229
[#290 '<=']: r#34
[#290 '==']: r#34
[#290 '>']: r#34
[#290 '>=']: r#34
[#290 '>>']: s#230
[#290 ']']: r#34
[#290 '{']: r#34
[#290 '||']: r#34
[#291 '&&']: r#182
[#291 ')']: r#181
[#291 ',']: r#181
[#291 ':']: r#181
[#291 ';']: r#181
[#291 ']']: r#181
[#291 '{']: r#181
[#292 '&&']: r#183
[#292 ')']: r#183
[#292 ',']: r#183
[#292 ':']: r#183
[#292 ';']: r#183
[#292 ']']: r#183
[#292 '{']: r#183
[#292 '||']: r#183
[#293 '&&']: r#184
[#293 ')']: r#184
[#293 ',']: r#184
[#293 ':']: r#184
[#293 ';']: r#184
[#293 ']']: r#184
[#293 '{']: r#184
[#293 '||']: r#184
[#294 '&&']: r#185
[#294 ')']: r#185
[#294 ',']: r#185
[#294 ':']: r#185
[#294 ';']: r#185
[#294 ']']: r#185
[#294 '{']: r#185
[#294 '||']: r#185
[#295 '&&']: r#186
[#295 ')']: r#186
[#295 ',']: r#186
[#295 ':']: r#186
[#295 ';']: r#186
[#295 ']']: r#186
[#295 '{']: r#186
[#295 '||']: r#186
[#296 '&&']: r#187
[#296 ')']: r#187
[#296 ',']: r#187
[#296 ':']: r#187
[#296 ';']: r#187
[#296 ']']: r#187
[#296 '{']: r#187
[#296 '||']: r#187
[#297 '&&']: r#188
[#297 ')']: r#188
[#297 ',']: r#188
[#297 ':']: r#188
[#297 ';']: r#188
[#297 ']']: r#188
[#297 '{']: r#188
[#297 '||']: r#188
[#298 '&']: r#190
[#298 ')']: r#189
[#298 ',']: r#189
[#298 ':']: r#189
[#298 ';']: r#189
[#298 '>']: r#189
[#298 ']']: r#189
[#298 '{']: r#189
[#299 ')']: r#191
[#299 ',']: r#191
[#299 ':']: r#191
[#299 ';']: r#191
[#299 '>']: r#191
[#299 ']']: r#191
[#299 '{']: r#191
[#299 '|']: r#192
[#300 ')']: r#193
[#300 ',']: r#193
[#300 ':']: r#193
[#300 ';']: r#193
[#300 '>']: r#193
[#300 ']']: r#193
[#300 '^']: r#194
[#300 '{']: r#193
[#301 '!=']: r#195
[#301 '%']: s#226
[#301 '&&']: r#195
[#301 ')']: r#195
[#301 '*']: s#79
[#301 '+']: r#195
[#301 ',']: r#195
[#301 '-']: r#195
[#301 '/']: s#225
[#301 ':']: r#195
[#301 ';']: r#195
[#301 '<']: r#195
[#301 '<=']: r#195
[#301 '==']: r#195
[#301 '>']: r#195
[#301 '>=']: r#195
[#301 ']']: r#195
[#301 '{']: r#195
[#301 '||']: r#195
[#302 '!=']: r#34
[#302 '%']: r#34
[#302 '&&']: r#34
[#302 ')']: r#34
[#302 '*']: r#34
[#302 '+']: r#34
[#302 ',']: r#34
[#302 '-']: r#34
[#302 '/']: r#34
[#302 ':']: r#34
[#302 ';']: r#34
[#302 '<']: r#34
[#302 '<=']: r#34
[#302 '==']: r#34
[#302 '>']: r#34
[#302 '>=']: r#34
[#302 ']']: r#34
[#302 '{']: r#34
[#302 '||']: r#34
[#303 '!=']: r#196
[#303 '&&']: r#196
[#303 ')']: r#196
[#303 ',']: r#196
[#303 ':']: r#196
[#303 ';']: r#196
[#303 '<']: r#196
[#303 '<=']: r#196
[#303 '==']: r#196
[#303 '>']: r#196
[#303 '>=']: r#196
[#303 ']']: r#196
[#303 '{']: r#196
[#303 '||']: r#196
[#304 '!=']: r#197
[#304 '&&']: r#197
[#304 ')']: r#197
[#304 ',']: r#197
[#304 ':']: r#197
[#304 ';']: r#197
[#304 '<']: r#197
[#304 '<=']: r#197
[#304 '==']: r#197
[#304 '>']: r#197
[#304 '>=']: r#197
[#304 ']']: r#197
[#304 '{']: r#197
[#304 '||']: r#197
[#305 '!=']: r#198
[#305 '%']: r#198
[#305 '&&']: r#198
[#305 ')']: r#198
[#305 '*']: r#198
[#305 '+']: r#198
[#305 ',']: r#198
[#305 '-']: r#198
[#305 '/']: r#198
[#305 ':']: r#198
[#305 ';']: r#198
[#305 '<']: r#198
[#305 '<=']: r#198
[#305 '==']: r#198
[#305 '>']: r#198
[#305 '>=']: r#198
[#305 ']']: r#198
[#305 '{']: r#198
[#305 '||']: r#198
[#306 '.']: s#215
[#306 '[']: s#214
[#307 '.']: s#215
[#307 '[']: s#214
[#308 '!=']: r#199
[#308 '%']: r#199
[#308 '%=']: r#199
[#308 '&&']: r#199
[#308 '&']: r#199
[#308 '&=']: r#199
[#308 ')']: r#199
[#308 '*']: r#199
[#308 '*=']: r#199
[#308 '+']: r#199
[#308 '++']: r#199
[#308 '+=']: r#199
[#308 ',']: r#199
[#308 '-']: r#199
[#308 '--']: r#199
[#308 '-=']: r#199
[#308 '.']: r#199
[#308 '/']: r#199
[#308 '/=']: r#199
[#308 ':']: r#199
[#308 ';']: r#199
[#308 '<']: r#199
[#308 '<<']: r#199
[#308 '<<=']: r#199
[#308 '<=']: r#199
[#308 '=']: r#199
[#308 '==']: r#199
[#308 '>']: r#199
[#308 '>=']: r#199
[#308 '>>']: r#199
[#308 '>>=']: r#199
[#308 '[']: r#199
[#308 ']']: r#199
[#308 '^']: r#199
[#308 '^=']: r#199
[#308 '{']: r#199
[#308 '|']: r#199
[#308 '|=']: r#199
[#308 '||']: r#199
[#309 '!=']: r#200
[#309 '%']: r#200
[#309 '%=']: r#200
[#309 '&&']: r#200
[#309 '&']: r#200
[#309 '&=']: r#200
[#309 ')']: r#200
[#309 '*']: r#200
[#309 '*=']: r#200
[#309 '+']: r#200
[#309 '++']: r#200
[#309 '+=']: r#200
[#309 ',']: r#200
[#309 '-']: r#200
[#309 '--']: r#200
[#309 '-=']: r#200
[#309 '.']: r#200
[#309 '/']: r#200
[#309 '/=']: r#200
[#309 ':']: r#200
[#309 ';']: r#200
[#309 '<']: r#200
[#309 '<<']: r#200
[#309 '<<=']: r#200
[#309 '<=']: r#200
[#309 '=']: r#200
[#309 '==']: r#200
[#309 '>']: r#200
[#309 '>=']: r#200
[#309 '>>']: r#200
[#309 '>>=']: r#200
[#309 '[']: r#200
[#309 ']']: r#200
[#309 '^']: r#200
[#309 '^=']: r#200
[#309 '{']: r#200
[#309 '|']: r#200
[#309 '|=']: r#200
[#309 '||']: r#200
[#310 '!=']: r#201
[#310 '%']: r#201
[#310 '%=']: r#201
[#310 '&&']: r#201
[#310 '&']: r#201
[#310 '&=']: r#201
[#310 ')']: r#201
[#310 '*']: r#201
[#310 '*=']: r#201
[#310 '+']: r#201
[#310 '++']: r#201
[#310 '+=']: r#201
[#310 ',']: r#201
[#310 '-']: r#201
[#310 '--']: r#201
[#310 '-=']: r#201
[#310 '.']: r#201
[#310 '/']: r#201
[#310 '/=']: r#201
[#310 ':']: r#201
[#310 ';']: r#201
[#310 '<']: r#201
[#310 '<<']: r#201
[#310 '<<=']: r#201
[#310 '<=']: r#201
[#310 '=']: r#201
[#310 '==']: r#201
[#310 '>']: r#201
[#310 '>=']: r#201
[#310 '>>']: r#201
[#310 '>>=']: r#201
[#310 '[']: r#201
[#310 ']']: r#201
[#310 '^']: r#201
[#310 '^=']: r#201
[#310 '{']: r#201
[#310 '|']: r#201
[#310 '|=']: r#201
[#310 '||']: r#201
[#311 '!=']: r#202
[#311 '%']: r#202
[#311 '%=']: r#202
[#311 '&&']: r#202
[#311 '&']: r#202
[#311 '&=']: r#202
[#311 ')']: r#202
[#311 '*']: r#202
[#311 '*=']: r#202
[#311 '+']: r#202
[#311 '++']: r#202
[#311 '+=']: r#202
[#311 ',']: r#202
[#311 '-']: r#202
[#311 '--']: r#202
[#311 '-=']: r#202
[#311 '.']: r#202
[#311 '/']: r#202
[#311 '/=']: r#202
[#311 ':']: r#202
[#311 ';']: r#202
[#311 '<']: r#202
[#311 '<<']: r#202
[#311 '<<=']: r#202
[#311 '<=']: r#202
[#311 '=']: r#202
[#311 '==']: r#202
[#311 '>']: r#202
[#311 '>=']: r#202
[#311 '>>']: r#202
[#311 '>>=']: r#202
[#311 '[']: r#202
[#311 ']']: r#202
[#311 '^']: r#202
[#311 '^=']: r#202
[#311 '{']: r#202
[#311 '|']: r#202
[#311 '|=']: r#202
[#311 '||']: r#202
[#312 '!=']: r#203
[#312 '%']: r#203
[#312 '%=']: r#203
[#312 '&&']: r#203
[#312 '&']: r#203
[#312 '&=']: r#203
[#312 ')']: r#203
[#312 '*']: r#203
[#312 '*=']: r#203
[#312 '+']: r#203
[#312 '++']: r#203
[#312 '+=']: r#203
[#312 ',']: r#203
[#312 '-']: r#203
[#312 '--']: r#203
[#312 '-=']: r#203
[#312 '.']: r#203
[#312 '/']: r#203
[#312 '/=']: r#203
[#312 ':']: r#203
[#312 ';']: r#203
[#312 '<']: r#203
[#312 '<<']: r#203
[#312 '<<=']: r#203
[#312 '<=']: r#203
[#312 '=']: r#203
[#312 '==']: r#203
[#312 '>']: r#203
[#312 '>=']: r#203
[#312 '>>']: r#203
[#312 '>>=']: r#203
[#312 '[']: r#203
[#312 ']']: r#203
[#312 '^']: r#203
[#312 '^=']: r#203
[#312 '{']: r#203
[#312 '|']: r#203
[#312 '|=']: r#203
[#312 '||']: r#203
[#313 '!=']: r#204
[#313 '%']: r#204
[#313 '%=']: r#204
[#313 '&&']: r#204
[#313 '&']: r#204
[#313 '&=']: r#204
[#313 ')']: r#204
[#313 '*']: r#204
[#313 '*=']: r#204
[#313 '+']: r#204
[#313 '++']: r#204
[#313 '+=']: r#204
[#313 ',']: r#204
[#313 '-']: r#204
[#313 '--']: r#204
[#313 '-=']: r#204
[#313 '.']: r#204
[#313 '/']: r#204
[#313 '/=']: r#204
[#313 ':']: r#204
[#313 ';']: r#204
[#313 '<']: r#204
[#313 '<<']: r#204
[#313 '<<=']: r#204
[#313 '<=']: r#204
[#313 '=']: r#204
[#313 '==']: r#204
[#313 '>']: r#204
[#313 '>=']: r#204
[#313 '>>']: r#204
[#313 '>>=']: r#204
[#313 '[']: r#204
[#313 ']']: r#204
[#313 '^']: r#204
[#313 '^=']: r#204
[#313 '{']: r#204
[#313 '|']: r#204
[#313 '|=']: r#204
[#313 '||']: r#204
[#314 '!=']: r#205
[#314 '%']: r#205
[#314 '%=']: r#205
[#314 '&&']: r#205
[#314 '&']: r#205
[#314 '&=']: r#205
[#314 ')']: r#205
[#314 '*']: r#205
[#314 '*=']: r#205
[#314 '+']: r#205
[#314 '++']: r#205
[#314 '+=']: r#205
[#314 ',']: r#205
[#314 '-']: r#205
[#314 '--']: r#205
[#314 '-=']: r#205
[#314 '.']: r#205
[#314 '/']: r#205
[#314 '/=']: r#205
[#314 ':']: r#205
[#314 ';']: r#205
[#314 '<']: r#205
[#314 '<<']: r#205
[#314 '<<=']: r#205
[#314 '<=']: r#205
[#314 '=']: r#205
[#314 '==']: r#205
[#314 '>']: r#205
[#314 '>=']: r#205
[#314 '>>']: r#205
[#314 '>>=']: r#205
[#314 '[']: r#205
[#314 ']']: r#205
[#314 '^']: r#205
[#314 '^=']: r#205
[#314 '{']: r#205
[#314 '|']: r#205
[#314 '|=']: r#205
[#314 '||']: r#205
[#315 '!=']: r#206
[#315 '%']: r#206
[#315 '%=']: r#206
[#315 '&&']: r#206
[#315 '&']: r#206
[#315 '&=']: r#206
[#315 ')']: r#206
[#315 '*']: r#206
[#315 '*=']: r#206
[#315 '+']: r#206
[#315 '++']: r#206
[#315 '+=']: r#206
[#315 ',']: r#206
[#315 '-']: r#206
[#315 '--']: r#206
[#315 '-=']: r#206
[#315 '.']: r#206
[#315 '/']: r#206
[#315 '/=']: r#206
[#315 ':']: r#206
[#315 ';']: r#206
[#315 '<']: r#206
[#315 '<<']: r#206
[#315 '<<=']: r#206
[#315 '<=']: r#206
[#315 '=']: r#206
[#315 '==']: r#206
[#315 '>']: r#206
[#315 '>=']: r#206
[#315 '>>']: r#206
[#315 '>>=']: r#206
[#315 '[']: r#206
[#315 ']']: r#206
[#315 '^']: r#206
[#315 '^=']: r#206
[#315 '{']: r#206
[#315 '|']: r#206
[#315 '|=']: r#206
[#315 '||']: r#206
[#316 '!=']: r#207
[#316 '%']: r#207
[#316 '%=']: r#207
[#316 '&&']: r#207
[#316 '&']: r#207
[#316 '&=']: r#207
[#316 ')']: r#207
[#316 '*']: r#207
[#316 '*=']: r#207
[#316 '+']: r#207
[#316 '++']: r#207
[#316 '+=']: r#207
[#316 ',']: r#207
[#316 '-']: r#207
[#316 '--']: r#207
[#316 '-=']: r#207
[#316 '.']: r#207
[#316 '/']: r#207
[#316 '/=']: r#207
[#316 ':']: r#207
[#316 ';']: r#207
[#316 '<']: r#207
[#316 '<<']: r#207
[#316 '<<=']: r#207
[#316 '<=']: r#207
[#316 '=']: r#207
[#316 '==']: r#207
[#316 '>']: r#207
[#316 '>=']: r#207
[#316 '>>']: r#207
[#316 '>>=']: r#207
[#316 '[']: r#207
[#316 ']']: r#207
[#316 '^']: r#207
[#316 '^=']: r#207
[#316 '{']: r#207
[#316 '|']: r#207
[#316 '|=']: r#207
[#316 '||']: r#207
[#317 ']']: s#508
[#318 'r32float']: s#500
[#318 'r32sint']: s#499
[#318 'r32uint']: s#498
[#318 'rg32float']: s#503
[#318 'rg32sint']: s#502
[#318 'rg32uint']: s#501
[#318 'rgba16float']: s#497
[#318 'rgba16sint']: s#496
[#318 'rgba16uint']: s#495
[#318 'rgba32float']: s#506
[#318 'rgba32sint']: s#505
[#318 'rgba32uint']: s#504
[#318 'rgba8sint']: s#494
[#318 'rgba8snorm']: s#492
[#318 'rgba8uint']: s#493
[#318 'rgba8unorm']: s#491
[#319 'array']: s#333
[#319 'atomic']: s#168
[#319 'bool']: s#161
[#319 'f16']: s#183
[#319 'f32']: s#182
[#319 'i32']: s#184
[#319 'mat2x2']: s#173
[#319 'mat2x3']: s#174
[#319 'mat2x4']: s#175
[#319 'mat3x2']: s#176
[#319 'mat3x3']: s#177
[#319 'mat3x4']: s#178
[#319 'mat4x2']: s#179
[#319 'mat4x3']: s#180
[#319 'mat4x4']: s#181
[#319 'ptr']: s#186
[#319 'sampler']: s#192
[#319 'sampler_comparison']: s#193
[#319 'texture_1d']: s#199
[#319 'texture_2d']: s#200
[#319 'texture_2d_array']: s#201
[#319 'texture_3d']: s#202
[#319 'texture_cube']: s#203
[#319 'texture_cube_array']: s#204
[#319 'texture_depth_2d']: s#194
[#319 'texture_depth_2d_array']: s#195
[#319 'texture_depth_cube']: s#196
[#319 'texture_depth_cube_array']: s#197
[#319 'texture_depth_multisampled_2d']: s#198
[#319 'texture_multisampled_2d']: s#205
[#319 'texture_storage_1d']: s#206
[#319 'texture_storage_2d']: s#207
[#319 'texture_storage_2d_array']: s#208
[#319 'texture_storage_3d']: s#209
[#319 'u32']: s#185
[#319 'vec2']: s#170
[#319 'vec3']: s#171
[#319 'vec4']: s#172
[#319 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#320 'array']: s#333
[#320 'atomic']: s#168
[#320 'bool']: s#161
[#320 'f16']: s#183
[#320 'f32']: s#182
[#320 'i32']: s#184
[#320 'mat2x2']: s#173
[#320 'mat2x3']: s#174
[#320 'mat2x4']: s#175
[#320 'mat3x2']: s#176
[#320 'mat3x3']: s#177
[#320 'mat3x4']: s#178
[#320 'mat4x2']: s#179
[#320 'mat4x3']: s#180
[#320 'mat4x4']: s#181
[#320 'ptr']: s#186
[#320 'sampler']: s#192
[#320 'sampler_comparison']: s#193
[#320 'texture_1d']: s#199
[#320 'texture_2d']: s#200
[#320 'texture_2d_array']: s#201
[#320 'texture_3d']: s#202
[#320 'texture_cube']: s#203
[#320 'texture_cube_array']: s#204
[#320 'texture_depth_2d']: s#194
[#320 'texture_depth_2d_array']: s#195
[#320 'texture_depth_cube']: s#196
[#320 'texture_depth_cube_array']: s#197
[#320 'texture_depth_multisampled_2d']: s#198
[#320 'texture_multisampled_2d']: s#205
[#320 'texture_storage_1d']: s#206
[#320 'texture_storage_2d']: s#207
[#320 'texture_storage_2d_array']: s#208
[#320 'texture_storage_3d']: s#209
[#320 'u32']: s#185
[#320 'vec2']: s#170
[#320 'vec3']: s#171
[#320 'vec4']: s#172
[#320 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#321 'array']: s#333
[#321 'atomic']: s#168
[#321 'bool']: s#161
[#321 'f16']: s#183
[#321 'f32']: s#182
[#321 'i32']: s#184
[#321 'mat2x2']: s#173
[#321 'mat2x3']: s#174
[#321 'mat2x4']: s#175
[#321 'mat3x2']: s#176
[#321 'mat3x3']: s#177
[#321 'mat3x4']: s#178
[#321 'mat4x2']: s#179
[#321 'mat4x3']: s#180
[#321 'mat4x4']: s#181
[#321 'ptr']: s#186
[#321 'sampler']: s#192
[#321 'sampler_comparison']: s#193
[#321 'texture_1d']: s#199
[#321 'texture_2d']: s#200
[#321 'texture_2d_array']: s#201
[#321 'texture_3d']: s#202
[#321 'texture_cube']: s#203
[#321 'texture_cube_array']: s#204
[#321 'texture_depth_2d']: s#194
[#321 'texture_depth_2d_array']: s#195
[#321 'texture_depth_cube']: s#196
[#321 'texture_depth_cube_array']: s#197
[#321 'texture_depth_multisampled_2d']: s#198
[#321 'texture_multisampled_2d']: s#205
[#321 'texture_storage_1d']: s#206
[#321 'texture_storage_2d']: s#207
[#321 'texture_storage_2d_array']: s#208
[#321 'texture_storage_3d']: s#209
[#321 'u32']: s#185
[#321 'vec2']: s#170
[#321 'vec3']: s#171
[#321 'vec4']: s#172
[#321 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#322 'function']: s#392
[#322 'private']: s#393
[#322 'storage']: s#396
[#322 'uniform']: s#395
[#322 'workgroup']: s#394
[#323 'array']: s#333
[#323 'atomic']: s#168
[#323 'bool']: s#161
[#323 'f16']: s#183
[#323 'f32']: s#182
[#323 'i32']: s#184
[#323 'mat2x2']: s#173
[#323 'mat2x3']: s#174
[#323 'mat2x4']: s#175
[#323 'mat3x2']: s#176
[#323 'mat3x3']: s#177
[#323 'mat3x4']: s#178
[#323 'mat4x2']: s#179
[#323 'mat4x3']: s#180
[#323 'mat4x4']: s#181
[#323 'ptr']: s#186
[#323 'sampler']: s#192
[#323 'sampler_comparison']: s#193
[#323 'texture_1d']: s#199
[#323 'texture_2d']: s#200
[#323 'texture_2d_array']: s#201
[#323 'texture_3d']: s#202
[#323 'texture_cube']: s#203
[#323 'texture_cube_array']: s#204
[#323 'texture_depth_2d']: s#194
[#323 'texture_depth_2d_array']: s#195
[#323 'texture_depth_cube']: s#196
[#323 'texture_depth_cube_array']: s#197
[#323 'texture_depth_multisampled_2d']: s#198
[#323 'texture_multisampled_2d']: s#205
[#323 'texture_storage_1d']: s#206
[#323 'texture_storage_2d']: s#207
[#323 'texture_storage_2d_array']: s#208
[#323 'texture_storage_3d']: s#209
[#323 'u32']: s#185
[#323 'vec2']: s#170
[#323 'vec3']: s#171
[#323 'vec4']: s#172
[#323 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#324 'array']: s#333
[#324 'atomic']: s#168
[#324 'bool']: s#161
[#324 'f16']: s#183
[#324 'f32']: s#182
[#324 'i32']: s#184
[#324 'mat2x2']: s#173
[#324 'mat2x3']: s#174
[#324 'mat2x4']: s#175
[#324 'mat3x2']: s#176
[#324 'mat3x3']: s#177
[#324 'mat3x4']: s#178
[#324 'mat4x2']: s#179
[#324 'mat4x3']: s#180
[#324 'mat4x4']: s#181
[#324 'ptr']: s#186
[#324 'sampler']: s#192
[#324 'sampler_comparison']: s#193
[#324 'texture_1d']: s#199
[#324 'texture_2d']: s#200
[#324 'texture_2d_array']: s#201
[#324 'texture_3d']: s#202
[#324 'texture_cube']: s#203
[#324 'texture_cube_array']: s#204
[#324 'texture_depth_2d']: s#194
[#324 'texture_depth_2d_array']: s#195
[#324 'texture_depth_cube']: s#196
[#324 'texture_depth_cube_array']: s#197
[#324 'texture_depth_multisampled_2d']: s#198
[#324 'texture_multisampled_2d']: s#205
[#324 'texture_storage_1d']: s#206
[#324 'texture_storage_2d']: s#207
[#324 'texture_storage_2d_array']: s#208
[#324 'texture_storage_3d']: s#209
[#324 'u32']: s#185
[#324 'vec2']: s#170
[#324 'vec3']: s#171
[#324 'vec4']: s#172
[#324 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#325 'array']: s#333
[#325 'atomic']: s#168
[#325 'bool']: s#161
[#325 'f16']: s#183
[#325 'f32']: s#182
[#325 'i32']: s#184
[#325 'mat2x2']: s#173
[#325 'mat2x3']: s#174
[#325 'mat2x4']: s#175
[#325 'mat3x2']: s#176
[#325 'mat3x3']: s#177
[#325 'mat3x4']: s#178
[#325 'mat4x2']: s#179
[#325 'mat4x3']: s#180
[#325 'mat4x4']: s#181
[#325 'ptr']: s#186
[#325 'sampler']: s#192
[#325 'sampler_comparison']: s#193
[#325 'texture_1d']: s#199
[#325 'texture_2d']: s#200
[#325 'texture_2d_array']: s#201
[#325 'texture_3d']: s#202
[#325 'texture_cube']: s#203
[#325 'texture_cube_array']: s#204
[#325 'texture_depth_2d']: s#194
[#325 'texture_depth_2d_array']: s#195
[#325 'texture_depth_cube']: s#196
[#325 'texture_depth_cube_array']: s#197
[#325 'texture_depth_multisampled_2d']: s#198
[#325 'texture_multisampled_2d']: s#205
[#325 'texture_storage_1d']: s#206
[#325 'texture_storage_2d']: s#207
[#325 'texture_storage_2d_array']: s#208
[#325 'texture_storage_3d']: s#209
[#325 'u32']: s#185
[#325 'vec2']: s#170
[#325 'vec3']: s#171
[#325 'vec4']: s#172
[#325 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#326 '!=']: r#208
[#326 '%']: r#208
[#326 '&&']: r#208
[#326 '&']: r#208
[#326 ')']: r#208
[#326 '*']: r#208
[#326 '+']: r#208
[#326 ',']: r#208
[#326 '-']: r#208
[#326 '.']: r#208
[#326 '/']: r#208
[#326 ':']: r#208
[#326 ';']: r#208
[#326 '<']: r#208
[#326 '<<']: r#208
[#326 '<=']: r#208
[#326 '==']: r#208
[#326 '>']: r#208
[#326 '>=']: r#208
[#326 '>>']: r#208
[#326 '[']: r#208
[#326 ']']: r#208
[#326 '^']: r#208
[#326 '{']: r#208
[#326 '|']: r#208
[#326 '||']: r#208
[#327 '!']: s#77
[#327 '&']: s#80
[#327 '(']: s#13
[#327 '*']: s#79
[#327 '-']: s#76
[#327 '@']: s#38
[#327 'bitcast']: s#85
[#327 'false']: s#98
[#327 'true']: s#97
[#327 '~']: s#78
[#327 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#327 /0[fh]/]: s#102
[#327 /0[iu]?/]: s#99
[#327 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#327 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#327 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#327 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#327 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#327 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#327 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#327 /[1-9][0-9]*[fh]/]: s#103
[#327 /[1-9][0-9]*[iu]?/]: s#100
[#328 '>']: s#246
[#329 ')']: r#209
[#329 ',']: r#209
[#329 ';']: r#209
[#329 '=']: r#209
[#329 '>']: r#209
[#329 '{']: r#209
[#329 '}']: r#209
[#330 ')']: r#210
[#330 ',']: r#210
[#330 ';']: r#210
[#330 '=']: r#210
[#330 '>']: r#210
[#330 '{']: r#210
[#330 '}']: r#210
[#331 '<']: s#135
[#332 '<']: s#135
[#333 '<']: s#135
[#334 '!=']: r#211
[#334 '%']: r#211
[#334 '&&']: r#211
[#334 '&']: r#211
[#334 ')']: r#211
[#334 '*']: r#211
[#334 '+']: r#211
[#334 ',']: r#211
[#334 '-']: r#211
[#334 '.']: r#211
[#334 '/']: r#211
[#334 ':']: r#211
[#334 ';']: r#211
[#334 '<']: r#211
[#334 '<<']: r#211
[#334 '<=']: r#211
[#334 '==']: r#211
[#334 '>']: r#211
[#334 '>=']: r#211
[#334 '>>']: r#211
[#334 '[']: r#211
[#334 ']']: r#211
[#334 '^']: r#211
[#334 '{']: r#211
[#334 '|']: r#211
[#334 '||']: r#211
[#335 '!=']: r#212
[#335 '%']: r#212
[#335 '%=']: r#212
[#335 '&&']: r#212
[#335 '&']: r#212
[#335 '&=']: r#212
[#335 ')']: r#212
[#335 '*']: r#212
[#335 '*=']: r#212
[#335 '+']: r#212
[#335 '++']: r#212
[#335 '+=']: r#212
[#335 ',']: r#212
[#335 '-']: r#212
[#335 '--']: r#212
[#335 '-=']: r#212
[#335 '->']: r#212
[#335 '.']: r#212
[#335 '/']: r#212
[#335 '/=']: r#212
[#335 ':']: r#212
[#335 ';']: r#212
[#335 '<']: r#212
[#335 '<<']: r#212
[#335 '<<=']: r#212
[#335 '<=']: r#212
[#335 '=']: r#212
[#335 '==']: r#212
[#335 '>']: r#212
[#335 '>=']: r#212
[#335 '>>']: r#212
[#335 '>>=']: r#212
[#335 '@']: r#212
[#335 '[']: r#212
[#335 ']']: r#212
[#335 '^']: r#212
[#335 '^=']: r#212
[#335 'array']: r#212
[#335 'atomic']: r#212
[#335 'bool']: r#212
[#335 'f16']: r#212
[#335 'f32']: r#212
[#335 'fn']: r#212
[#335 'i32']: r#212
[#335 'mat2x2']: r#212
[#335 'mat2x3']: r#212
[#335 'mat2x4']: r#212
[#335 'mat3x2']: r#212
[#335 'mat3x3']: r#212
[#335 'mat3x4']: r#212
[#335 'mat4x2']: r#212
[#335 'mat4x3']: r#212
[#335 'mat4x4']: r#212
[#335 'override']: r#212
[#335 'ptr']: r#212
[#335 'sampler']: r#212
[#335 'sampler_comparison']: r#212
[#335 'texture_1d']: r#212
[#335 'texture_2d']: r#212
[#335 'texture_2d_array']: r#212
[#335 'texture_3d']: r#212
[#335 'texture_cube']: r#212
[#335 'texture_cube_array']: r#212
[#335 'texture_depth_2d']: r#212
[#335 'texture_depth_2d_array']: r#212
[#335 'texture_depth_cube']: r#212
[#335 'texture_depth_cube_array']: r#212
[#335 'texture_depth_multisampled_2d']: r#212
[#335 'texture_multisampled_2d']: r#212
[#335 'texture_storage_1d']: r#212
[#335 'texture_storage_2d']: r#212
[#335 'texture_storage_2d_array']: r#212
[#335 'texture_storage_3d']: r#212
[#335 'u32']: r#212
[#335 'var']: r#212
[#335 'vec2']: r#212
[#335 'vec3']: r#212
[#335 'vec4']: r#212
[#335 '{']: r#212
[#335 '|']: r#212
[#335 '|=']: r#212
[#335 '||']: r#212
[#336 '}']: s#478
[#337 '}']: r#213
[#338 '&']: s#80
[#338 '(']: s#13
[#338 '*']: s#79
[#338 ';']: s#25
[#338 '@']: s#38
[#338 '_']: s#377
[#338 'break']: s#364
[#338 'const']: s#363
[#338 'continue']: s#365
[#338 'discard']: s#350
[#338 'for']: s#358
[#338 'if']: s#369
[#338 'let']: s#362
[#338 'loop']: s#357
[#338 'return']: s#354
[#338 'static_assert']: s#32
[#338 'switch']: s#356
[#338 'var']: s#118
[#338 'while']: s#359
[#338 '{']: s#147
[#338 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#339 '&']: r#214
[#339 '(']: r#214
[#339 '*']: r#214
[#339 ';']: r#214
[#339 '@']: r#214
[#339 '_']: r#214
[#339 'array']: r#214
[#339 'atomic']: r#214
[#339 'bool']: r#214
[#339 'break']: r#214
[#339 'const']: r#214
[#339 'continue']: r#214
[#339 'continuing']: r#214
[#339 'discard']: r#214
[#339 'f16']: r#214
[#339 'f32']: r#214
[#339 'for']: r#214
[#339 'i32']: r#214
[#339 'if']: r#214
[#339 'let']: r#214
[#339 'loop']: r#214
[#339 'mat2x2']: r#214
[#339 'mat2x3']: r#214
[#339 'mat2x4']: r#214
[#339 'mat3x2']: r#214
[#339 'mat3x3']: r#214
[#339 'mat3x4']: r#214
[#339 'mat4x2']: r#214
[#339 'mat4x3']: r#214
[#339 'mat4x4']: r#214
[#339 'ptr']: r#214
[#339 'return']: r#214
[#339 'sampler']: r#214
[#339 'sampler_comparison']: r#214
[#339 'static_assert']: r#214
[#339 'switch']: r#214
[#339 'texture_1d']: r#214
[#339 'texture_2d']: r#214
[#339 'texture_2d_array']: r#214
[#339 'texture_3d']: r#214
[#339 'texture_cube']: r#214
[#339 'texture_cube_array']: r#214
[#339 'texture_depth_2d']: r#214
[#339 'texture_depth_2d_array']: r#214
[#339 'texture_depth_cube']: r#214
[#339 'texture_depth_cube_array']: r#214
[#339 'texture_depth_multisampled_2d']: r#214
[#339 'texture_multisampled_2d']: r#214
[#339 'texture_storage_1d']: r#214
[#339 'texture_storage_2d']: r#214
[#339 'texture_storage_2d_array']: r#214
[#339 'texture_storage_3d']: r#214
[#339 'u32']: r#214
[#339 'var']: r#214
[#339 'vec2']: r#214
[#339 'vec3']: r#214
[#339 'vec4']: r#214
[#339 'while']: r#214
[#339 '{']: r#214
[#339 '}']: r#214
[#340 ';']: s#25
[#341 '&']: r#215
[#341 '(']: r#215
[#341 '*']: r#215
[#341 ';']: r#215
[#341 '@']: r#215
[#341 '_']: r#215
[#341 'array']: r#215
[#341 'atomic']: r#215
[#341 'bool']: r#215
[#341 'break']: r#215
[#341 'const']: r#215
[#341 'continue']: r#215
[#341 'continuing']: r#215
[#341 'discard']: r#215
[#341 'f16']: r#215
[#341 'f32']: r#215
[#341 'for']: r#215
[#341 'i32']: r#215
[#341 'if']: r#215
[#341 'let']: r#215
[#341 'loop']: r#215
[#341 'mat2x2']: r#215
[#341 'mat2x3']: r#215
[#341 'mat2x4']: r#215
[#341 'mat3x2']: r#215
[#341 'mat3x3']: r#215
[#341 'mat3x4']: r#215
[#341 'mat4x2']: r#215
[#341 'mat4x3']: r#215
[#341 'mat4x4']: r#215
[#341 'ptr']: r#215
[#341 'return']: r#215
[#341 'sampler']: r#215
[#341 'sampler_comparison']: r#215
[#341 'static_assert']: r#215
[#341 'switch']: r#215
[#341 'texture_1d']: r#215
[#341 'texture_2d']: r#215
[#341 'texture_2d_array']: r#215
[#341 'texture_3d']: r#215
[#341 'texture_cube']: r#215
[#341 'texture_cube_array']: r#215
[#341 'texture_depth_2d']: r#215
[#341 'texture_depth_2d_array']: r#215
[#341 'texture_depth_cube']: r#215
[#341 'texture_depth_cube_array']: r#215
[#341 'texture_depth_multisampled_2d']: r#215
[#341 'texture_multisampled_2d']: r#215
[#341 'texture_storage_1d']: r#215
[#341 'texture_storage_2d']: r#215
[#341 'texture_storage_2d_array']: r#215
[#341 'texture_storage_3d']: r#215
[#341 'u32']: r#215
[#341 'var']: r#215
[#341 'vec2']: r#215
[#341 'vec3']: r#215
[#341 'vec4']: r#215
[#341 'while']: r#215
[#341 '{']: r#215
[#341 '}']: r#215
[#342 '&']: r#216
[#342 '(']: r#216
[#342 '*']: r#216
[#342 ';']: r#216
[#342 '@']: r#216
[#342 '_']: r#216
[#342 'array']: r#216
[#342 'atomic']: r#216
[#342 'bool']: r#216
[#342 'break']: r#216
[#342 'const']: r#216
[#342 'continue']: r#216
[#342 'continuing']: r#216
[#342 'discard']: r#216
[#342 'f16']: r#216
[#342 'f32']: r#216
[#342 'for']: r#216
[#342 'i32']: r#216
[#342 'if']: r#216
[#342 'let']: r#216
[#342 'loop']: r#216
[#342 'mat2x2']: r#216
[#342 'mat2x3']: r#216
[#342 'mat2x4']: r#216
[#342 'mat3x2']: r#216
[#342 'mat3x3']: r#216
[#342 'mat3x4']: r#216
[#342 'mat4x2']: r#216
[#342 'mat4x3']: r#216
[#342 'mat4x4']: r#216
[#342 'ptr']: r#216
[#342 'return']: r#216
[#342 'sampler']: r#216
[#342 'sampler_comparison']: r#216
[#342 'static_assert']: r#216
[#342 'switch']: r#216
[#342 'texture_1d']: r#216
[#342 'texture_2d']: r#216
[#342 'texture_2d_array']: r#216
[#342 'texture_3d']: r#216
[#342 'texture_cube']: r#216
[#342 'texture_cube_array']: r#216
[#342 'texture_depth_2d']: r#216
[#342 'texture_depth_2d_array']: r#216
[#342 'texture_depth_cube']: r#216
[#342 'texture_depth_cube_array']: r#216
[#342 'texture_depth_multisampled_2d']: r#216
[#342 'texture_multisampled_2d']: r#216
[#342 'texture_storage_1d']: r#216
[#342 'texture_storage_2d']: r#216
[#342 'texture_storage_2d_array']: r#216
[#342 'texture_storage_3d']: r#216
[#342 'u32']: r#216
[#342 'var']: r#216
[#342 'vec2']: r#216
[#342 'vec3']: r#216
[#342 'vec4']: r#216
[#342 'while']: r#216
[#342 '{']: r#216
[#342 '}']: r#216
[#343 '&']: r#217
[#343 '(']: r#217
[#343 '*']: r#217
[#343 ';']: r#217
[#343 '@']: r#217
[#343 '_']: r#217
[#343 'array']: r#217
[#343 'atomic']: r#217
[#343 'bool']: r#217
[#343 'break']: r#217
[#343 'const']: r#217
[#343 'continue']: r#217
[#343 'continuing']: r#217
[#343 'discard']: r#217
[#343 'f16']: r#217
[#343 'f32']: r#217
[#343 'for']: r#217
[#343 'i32']: r#217
[#343 'if']: r#217
[#343 'let']: r#217
[#343 'loop']: r#217
[#343 'mat2x2']: r#217
[#343 'mat2x3']: r#217
[#343 'mat2x4']: r#217
[#343 'mat3x2']: r#217
[#343 'mat3x3']: r#217
[#343 'mat3x4']: r#217
[#343 'mat4x2']: r#217
[#343 'mat4x3']: r#217
[#343 'mat4x4']: r#217
[#343 'ptr']: r#217
[#343 'return']: r#217
[#343 'sampler']: r#217
[#343 'sampler_comparison']: r#217
[#343 'static_assert']: r#217
[#343 'switch']: r#217
[#343 'texture_1d']: r#217
[#343 'texture_2d']: r#217
[#343 'texture_2d_array']: r#217
[#343 'texture_3d']: r#217
[#343 'texture_cube']: r#217
[#343 'texture_cube_array']: r#217
[#343 'texture_depth_2d']: r#217
[#343 'texture_depth_2d_array']: r#217
[#343 'texture_depth_cube']: r#217
[#343 'texture_depth_cube_array']: r#217
[#343 'texture_depth_multisampled_2d']: r#217
[#343 'texture_multisampled_2d']: r#217
[#343 'texture_storage_1d']: r#217
[#343 'texture_storage_2d']: r#217
[#343 'texture_storage_2d_array']: r#217
[#343 'texture_storage_3d']: r#217
[#343 'u32']: r#217
[#343 'var']: r#217
[#343 'vec2']: r#217
[#343 'vec3']: r#217
[#343 'vec4']: r#217
[#343 'while']: r#217
[#343 '{']: r#217
[#343 '}']: r#217
[#344 '&']: r#218
[#344 '(']: r#218
[#344 '*']: r#218
[#344 ';']: r#218
[#344 '@']: r#218
[#344 '_']: r#218
[#344 'array']: r#218
[#344 'atomic']: r#218
[#344 'bool']: r#218
[#344 'break']: r#218
[#344 'const']: r#218
[#344 'continue']: r#218
[#344 'continuing']: r#218
[#344 'discard']: r#218
[#344 'f16']: r#218
[#344 'f32']: r#218
[#344 'for']: r#218
[#344 'i32']: r#218
[#344 'if']: r#218
[#344 'let']: r#218
[#344 'loop']: r#218
[#344 'mat2x2']: r#218
[#344 'mat2x3']: r#218
[#344 'mat2x4']: r#218
[#344 'mat3x2']: r#218
[#344 'mat3x3']: r#218
[#344 'mat3x4']: r#218
[#344 'mat4x2']: r#218
[#344 'mat4x3']: r#218
[#344 'mat4x4']: r#218
[#344 'ptr']: r#218
[#344 'return']: r#218
[#344 'sampler']: r#218
[#344 'sampler_comparison']: r#218
[#344 'static_assert']: r#218
[#344 'switch']: r#218
[#344 'texture_1d']: r#218
[#344 'texture_2d']: r#218
[#344 'texture_2d_array']: r#218
[#344 'texture_3d']: r#218
[#344 'texture_cube']: r#218
[#344 'texture_cube_array']: r#218
[#344 'texture_depth_2d']: r#218
[#344 'texture_depth_2d_array']: r#218
[#344 'texture_depth_cube']: r#218
[#344 'texture_depth_cube_array']: r#218
[#344 'texture_depth_multisampled_2d']: r#218
[#344 'texture_multisampled_2d']: r#218
[#344 'texture_storage_1d']: r#218
[#344 'texture_storage_2d']: r#218
[#344 'texture_storage_2d_array']: r#218
[#344 'texture_storage_3d']: r#218
[#344 'u32']: r#218
[#344 'var']: r#218
[#344 'vec2']: r#218
[#344 'vec3']: r#218
[#344 'vec4']: r#218
[#344 'while']: r#218
[#344 '{']: r#218
[#344 '}']: r#218
[#345 '&']: r#219
[#345 '(']: r#219
[#345 '*']: r#219
[#345 ';']: r#219
[#345 '@']: r#219
[#345 '_']: r#219
[#345 'array']: r#219
[#345 'atomic']: r#219
[#345 'bool']: r#219
[#345 'break']: r#219
[#345 'const']: r#219
[#345 'continue']: r#219
[#345 'continuing']: r#219
[#345 'discard']: r#219
[#345 'f16']: r#219
[#345 'f32']: r#219
[#345 'for']: r#219
[#345 'i32']: r#219
[#345 'if']: r#219
[#345 'let']: r#219
[#345 'loop']: r#219
[#345 'mat2x2']: r#219
[#345 'mat2x3']: r#219
[#345 'mat2x4']: r#219
[#345 'mat3x2']: r#219
[#345 'mat3x3']: r#219
[#345 'mat3x4']: r#219
[#345 'mat4x2']: r#219
[#345 'mat4x3']: r#219
[#345 'mat4x4']: r#219
[#345 'ptr']: r#219
[#345 'return']: r#219
[#345 'sampler']: r#219
[#345 'sampler_comparison']: r#219
[#345 'static_assert']: r#219
[#345 'switch']: r#219
[#345 'texture_1d']: r#219
[#345 'texture_2d']: r#219
[#345 'texture_2d_array']: r#219
[#345 'texture_3d']: r#219
[#345 'texture_cube']: r#219
[#345 'texture_cube_array']: r#219
[#345 'texture_depth_2d']: r#219
[#345 'texture_depth_2d_array']: r#219
[#345 'texture_depth_cube']: r#219
[#345 'texture_depth_cube_array']: r#219
[#345 'texture_depth_multisampled_2d']: r#219
[#345 'texture_multisampled_2d']: r#219
[#345 'texture_storage_1d']: r#219
[#345 'texture_storage_2d']: r#219
[#345 'texture_storage_2d_array']: r#219
[#345 'texture_storage_3d']: r#219
[#345 'u32']: r#219
[#345 'var']: r#219
[#345 'vec2']: r#219
[#345 'vec3']: r#219
[#345 'vec4']: r#219
[#345 'while']: r#219
[#345 '{']: r#219
[#345 '}']: r#219
[#346 ';']: s#25
[#347 ';']: s#25
[#348 ';']: s#25
[#349 ';']: s#25
[#350 ';']: s#25
[#351 ';']: s#25
[#352 '&']: r#220
[#352 '(']: r#220
[#352 '*']: r#220
[#352 ';']: r#220
[#352 '@']: r#220
[#352 '_']: r#220
[#352 'array']: r#220
[#352 'atomic']: r#220
[#352 'bool']: r#220
[#352 'break']: r#220
[#352 'const']: r#220
[#352 'continue']: r#220
[#352 'continuing']: r#220
[#352 'discard']: r#220
[#352 'f16']: r#220
[#352 'f32']: r#220
[#352 'for']: r#220
[#352 'i32']: r#220
[#352 'if']: r#220
[#352 'let']: r#220
[#352 'loop']: r#220
[#352 'mat2x2']: r#220
[#352 'mat2x3']: r#220
[#352 'mat2x4']: r#220
[#352 'mat3x2']: r#220
[#352 'mat3x3']: r#220
[#352 'mat3x4']: r#220
[#352 'mat4x2']: r#220
[#352 'mat4x3']: r#220
[#352 'mat4x4']: r#220
[#352 'ptr']: r#220
[#352 'return']: r#220
[#352 'sampler']: r#220
[#352 'sampler_comparison']: r#220
[#352 'static_assert']: r#220
[#352 'switch']: r#220
[#352 'texture_1d']: r#220
[#352 'texture_2d']: r#220
[#352 'texture_2d_array']: r#220
[#352 'texture_3d']: r#220
[#352 'texture_cube']: r#220
[#352 'texture_cube_array']: r#220
[#352 'texture_depth_2d']: r#220
[#352 'texture_depth_2d_array']: r#220
[#352 'texture_depth_cube']: r#220
[#352 'texture_depth_cube_array']: r#220
[#352 'texture_depth_multisampled_2d']: r#220
[#352 'texture_multisampled_2d']: r#220
[#352 'texture_storage_1d']: r#220
[#352 'texture_storage_2d']: r#220
[#352 'texture_storage_2d_array']: r#220
[#352 'texture_storage_3d']: r#220
[#352 'u32']: r#220
[#352 'var']: r#220
[#352 'vec2']: r#220
[#352 'vec3']: r#220
[#352 'vec4']: r#220
[#352 'while']: r#220
[#352 '{']: r#220
[#352 '}']: r#220
[#353 ';']: s#25
[#354 '!']: s#77
[#354 '&']: s#80
[#354 '(']: s#13
[#354 '*']: s#79
[#354 '-']: s#76
[#354 '@']: s#38
[#354 'bitcast']: s#85
[#354 'false']: s#98
[#354 'true']: s#97
[#354 '~']: s#78
[#354 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#354 /0[fh]/]: s#102
[#354 /0[iu]?/]: s#99
[#354 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#354 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#354 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#354 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#354 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#354 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#354 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#354 /[1-9][0-9]*[fh]/]: s#103
[#354 /[1-9][0-9]*[iu]?/]: s#100
[#355 'else']: s#465
[#356 '!']: s#77
[#356 '&']: s#80
[#356 '(']: s#13
[#356 '*']: s#79
[#356 '-']: s#76
[#356 '@']: s#38
[#356 'bitcast']: s#85
[#356 'false']: s#98
[#356 'true']: s#97
[#356 '~']: s#78
[#356 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#356 /0[fh]/]: s#102
[#356 /0[iu]?/]: s#99
[#356 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#356 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#356 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#356 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#356 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#356 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#356 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#356 /[1-9][0-9]*[fh]/]: s#103
[#356 /[1-9][0-9]*[iu]?/]: s#100
[#357 '{']: s#147
[#358 '(']: s#13
[#359 '!']: s#77
[#359 '&']: s#80
[#359 '(']: s#13
[#359 '*']: s#79
[#359 '-']: s#76
[#359 '@']: s#38
[#359 'bitcast']: s#85
[#359 'false']: s#98
[#359 'true']: s#97
[#359 '~']: s#78
[#359 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#359 /0[fh]/]: s#102
[#359 /0[iu]?/]: s#99
[#359 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#359 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#359 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#359 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#359 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#359 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#359 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#359 /[1-9][0-9]*[fh]/]: s#103
[#359 /[1-9][0-9]*[iu]?/]: s#100
[#360 'array']: s#160
[#360 'atomic']: s#168
[#360 'bool']: s#161
[#360 'f16']: s#183
[#360 'f32']: s#182
[#360 'i32']: s#184
[#360 'mat2x2']: s#173
[#360 'mat2x3']: s#174
[#360 'mat2x4']: s#175
[#360 'mat3x2']: s#176
[#360 'mat3x3']: s#177
[#360 'mat3x4']: s#178
[#360 'mat4x2']: s#179
[#360 'mat4x3']: s#180
[#360 'mat4x4']: s#181
[#360 'ptr']: s#186
[#360 'sampler']: s#192
[#360 'sampler_comparison']: s#193
[#360 'texture_1d']: s#199
[#360 'texture_2d']: s#200
[#360 'texture_2d_array']: s#201
[#360 'texture_3d']: s#202
[#360 'texture_cube']: s#203
[#360 'texture_cube_array']: s#204
[#360 'texture_depth_2d']: s#194
[#360 'texture_depth_2d_array']: s#195
[#360 'texture_depth_cube']: s#196
[#360 'texture_depth_cube_array']: s#197
[#360 'texture_depth_multisampled_2d']: s#198
[#360 'texture_multisampled_2d']: s#205
[#360 'texture_storage_1d']: s#206
[#360 'texture_storage_2d']: s#207
[#360 'texture_storage_2d_array']: s#208
[#360 'texture_storage_3d']: s#209
[#360 'u32']: s#185
[#360 'vec2']: s#170
[#360 'vec3']: s#171
[#360 'vec4']: s#172
[#360 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#361 ';']: r#221
[#361 '=']: s#138
[#362 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#363 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#364 ';']: r#222
[#365 ';']: r#223
[#366 ')']: r#224
[#366 ';']: r#224
[#367 ')']: r#225
[#367 ';']: r#225
[#368 ')']: r#226
[#368 ';']: r#226
[#369 '!']: s#77
[#369 '&']: s#80
[#369 '(']: s#13
[#369 '*']: s#79
[#369 '-']: s#76
[#369 '@']: s#38
[#369 'bitcast']: s#85
[#369 'false']: s#98
[#369 'true']: s#97
[#369 '~']: s#78
[#369 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#369 /0[fh]/]: s#102
[#369 /0[iu]?/]: s#99
[#369 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#369 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#369 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#369 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#369 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#369 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#369 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#369 /[1-9][0-9]*[fh]/]: s#103
[#369 /[1-9][0-9]*[iu]?/]: s#100
[#370 'array']: r#227
[#370 'atomic']: r#227
[#370 'bool']: r#227
[#370 'f16']: r#227
[#370 'f32']: r#227
[#370 'i32']: r#227
[#370 'mat2x2']: r#227
[#370 'mat2x3']: r#227
[#370 'mat2x4']: r#227
[#370 'mat3x2']: r#227
[#370 'mat3x3']: r#227
[#370 'mat3x4']: r#227
[#370 'mat4x2']: r#227
[#370 'mat4x3']: r#227
[#370 'mat4x4']: r#227
[#370 'ptr']: r#227
[#370 'sampler']: r#227
[#370 'sampler_comparison']: r#227
[#370 'texture_1d']: r#227
[#370 'texture_2d']: r#227
[#370 'texture_2d_array']: r#227
[#370 'texture_3d']: r#227
[#370 'texture_cube']: r#227
[#370 'texture_cube_array']: r#227
[#370 'texture_depth_2d']: r#227
[#370 'texture_depth_2d_array']: r#227
[#370 'texture_depth_cube']: r#227
[#370 'texture_depth_cube_array']: r#227
[#370 'texture_depth_multisampled_2d']: r#227
[#370 'texture_multisampled_2d']: r#227
[#370 'texture_storage_1d']: r#227
[#370 'texture_storage_2d']: r#227
[#370 'texture_storage_2d_array']: r#227
[#370 'texture_storage_3d']: r#227
[#370 'u32']: r#227
[#370 'vec2']: r#227
[#370 'vec3']: r#227
[#370 'vec4']: r#227
[#371 '%=']: s#446
[#371 '&=']: s#447
[#371 '*=']: s#444
[#371 '++']: s#430
[#371 '+=']: s#442
[#371 '--']: s#431
[#371 '-=']: s#443
[#371 '/=']: s#445
[#371 '<<=']: s#451
[#371 '=']: s#138
[#371 '>>=']: s#450
[#371 '^=']: s#449
[#371 '|=']: s#448
[#372 '=']: s#138
[#373 '@']: s#38
[#374 '.']: s#215
[#374 '[']: s#214
[#375 '&']: s#80
[#375 '(']: s#13
[#375 '*']: s#79
[#375 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#376 '&']: s#80
[#376 '(']: s#13
[#376 '*']: s#79
[#376 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#377 '=']: r#228
[#378 '%=']: r#229
[#378 '&=']: r#229
[#378 ')']: r#229
[#378 '*=']: r#229
[#378 '++']: r#229
[#378 '+=']: r#229
[#378 '--']: r#229
[#378 '-=']: r#229
[#378 '.']: r#229
[#378 '/=']: r#229
[#378 '<<=']: r#229
[#378 '=']: r#229
[#378 '>>=']: r#229
[#378 '[']: r#229
[#378 '^=']: r#229
[#378 '|=']: r#229
[#379 '&']: s#80
[#379 '(']: s#13
[#379 '*']: s#79
[#379 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#380 '@']: s#38
[#381 ',']: s#131
[#382 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#308
[#384 '@']: s#38
[#385 ';']: r#230
[#386 ';']: r#231
[#387 '!']: s#77
[#387 '&']: s#80
[#387 '(']: s#13
[#387 '*']: s#79
[#387 '-']: s#76
[#387 '@']: s#38
[#387 'bitcast']: s#85
[#387 'false']: s#98
[#387 'true']: s#97
[#387 '~']: s#78
[#387 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#387 /0[fh]/]: s#102
[#387 /0[iu]?/]: s#99
[#387 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#387 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#387 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#387 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#387 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#387 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#387 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#387 /[1-9][0-9]*[fh]/]: s#103
[#387 /[1-9][0-9]*[iu]?/]: s#100
[#388 ';']: r#232
[#389 ';']: r#233
[#389 '=']: r#233
[#390 ';']: r#234
[#391 ',']: s#131
[#392 ',']: r#235
[#392 '>']: r#235
[#393 ',']: r#236
[#393 '>']: r#236
[#394 ',']: r#237
[#394 '>']: r#237
[#395 ',']: r#238
[#395 '>']: r#238
[#396 ',']: r#239
[#396 '>']: r#239
[#397 ';']: r#240
[#397 '=']: r#240
[#398 ',']: s#131
[#399 ')']: r#241
[#399 ',']: r#241
[#400 ';']: r#242
[#400 '@']: r#242
[#400 'array']: r#242
[#400 'atomic']: r#242
[#400 'bool']: r#242
[#400 'f16']: r#242
[#400 'f32']: r#242
[#400 'fn']: r#242
[#400 'i32']: r#242
[#400 'mat2x2']: r#242
[#400 'mat2x3']: r#242
[#400 'mat2x4']: r#242
[#400 'mat3x2']: r#242
[#400 'mat3x3']: r#242
[#400 'mat3x4']: r#242
[#400 'mat4x2']: r#242
[#400 'mat4x3']: r#242
[#400 'mat4x4']: r#242
[#400 'override']: r#242
[#400 'ptr']: r#242
[#400 'sampler']: r#242
[#400 'sampler_comparison']: r#242
[#400 'texture_1d']: r#242
[#400 'texture_2d']: r#242
[#400 'texture_2d_array']: r#242
[#400 'texture_3d']: r#242
[#400 'texture_cube']: r#242
[#400 'texture_cube_array']: r#242
[#400 'texture_depth_2d']: r#242
[#400 'texture_depth_2d_array']: r#242
[#400 'texture_depth_cube']: r#242
[#400 'texture_depth_cube_array']: r#242
[#400 'texture_depth_multisampled_2d']: r#242
[#400 'texture_multisampled_2d']: r#242
[#400 'texture_storage_1d']: r#242
[#400 'texture_storage_2d']: r#242
[#400 'texture_storage_2d_array']: r#242
[#400 'texture_storage_3d']: r#242
[#400 'u32']: r#242
[#400 'var']: r#242
[#400 'vec2']: r#242
[#400 'vec3']: r#242
[#400 'vec4']: r#242
[#401 ')']: s#335
[#402 ')']: r#243
[#403 '>']: s#246
[#404 'read']: s#583
[#404 'read_write']: s#585
[#404 'write']: s#584
[#405 ';']: r#244
[#407 ':']: s#141
[#408 ',']: s#131
[#409 ',']: r#245
[#409 '}']: r#245
[#410 ',']: s#131
[#411 '@']: s#38
[#412 ')']: s#335
[#413 ')']: r#246
[#414 ',']: s#131
[#415 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#417 '@']: s#38
[#418 ')']: s#335
[#419 '%=']: r#247
[#419 '&=']: r#247
[#419 ')']: r#247
[#419 '*=']: r#247
[#419 '++']: r#247
[#419 '+=']: r#247
[#419 '--']: r#247
[#419 '-=']: r#247
[#419 '/=']: r#247
[#419 '<<=']: r#247
[#419 '=']: r#247
[#419 '>>=']: r#247
[#419 '^=']: r#247
[#419 '|=']: r#247
[#420 '%=']: r#248
[#420 '&=']: r#248
[#420 ')']: r#248
[#420 '*=']: r#248
[#420 '++']: r#248
[#420 '+=']: r#248
[#420 '--']: r#248
[#420 '-=']: r#248
[#420 '/=']: r#248
[#420 '<<=']: r#248
[#420 '=']: r#248
[#420 '>>=']: r#248
[#420 '^=']: r#248
[#420 '|=']: r#248
[#421 '%=']: r#249
[#421 '&=']: r#249
[#421 ')']: r#249
[#421 '*=']: r#249
[#421 '++']: r#249
[#421 '+=']: r#249
[#421 '--']: r#249
[#421 '-=']: r#249
[#421 '/=']: r#249
[#421 '<<=']: r#249
[#421 '=']: r#249
[#421 '>>=']: r#249
[#421 '^=']: r#249
[#421 '|=']: r#249
[#422 '%=']: r#250
[#422 '&=']: r#250
[#422 ')']: r#250
[#422 '*=']: r#250
[#422 '++']: r#250
[#422 '+=']: r#250
[#422 '--']: r#250
[#422 '-=']: r#250
[#422 '/=']: r#250
[#422 '<<=']: r#250
[#422 '=']: r#250
[#422 '>>=']: r#250
[#422 '^=']: r#250
[#422 '|=']: r#250
[#423 'array']: r#251
[#423 'atomic']: r#251
[#423 'bool']: r#251
[#423 'f16']: r#251
[#423 'f32']: r#251
[#423 'i32']: r#251
[#423 'mat2x2']: r#251
[#423 'mat2x3']: r#251
[#423 'mat2x4']: r#251
[#423 'mat3x2']: r#251
[#423 'mat3x3']: r#251
[#423 'mat3x4']: r#251
[#423 'mat4x2']: r#251
[#423 'mat4x3']: r#251
[#423 'mat4x4']: r#251
[#423 'ptr']: r#251
[#423 'sampler']: r#251
[#423 'sampler_comparison']: r#251
[#423 'texture_1d']: r#251
[#423 'texture_2d']: r#251
[#423 'texture_2d_array']: r#251
[#423 'texture_3d']: r#251
[#423 'texture_cube']: r#251
[#423 'texture_cube_array']: r#251
[#423 'texture_depth_2d']: r#251
[#423 'texture_depth_2d_array']: r#251
[#423 'texture_depth_cube']: r#251
[#423 'texture_depth_cube_array']: r#251
[#423 'texture_depth_multisampled_2d']: r#251
[#423 'texture_multisampled_2d']: r#251
[#423 'texture_storage_1d']: r#251
[#423 'texture_storage_2d']: r#251
[#423 'texture_storage_2d_array']: r#251
[#423 'texture_storage_3d']: r#251
[#423 'u32']: r#251
[#423 'vec2']: r#251
[#423 'vec3']: r#251
[#423 'vec4']: r#251
[#424 '!']: s#77
[#424 '&']: s#80
[#424 '(']: s#13
[#424 '*']: s#79
[#424 '-']: s#76
[#424 '@']: s#38
[#424 'bitcast']: s#85
[#424 'false']: s#98
[#424 'true']: s#97
[#424 '~']: s#78
[#424 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#424 /0[fh]/]: s#102
[#424 /0[iu]?/]: s#99
[#424 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#424 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#424 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#424 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#424 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#424 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#424 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#424 /[1-9][0-9]*[fh]/]: s#103
[#424 /[1-9][0-9]*[iu]?/]: s#100
[#425 '!']: s#77
[#425 '&']: s#80
[#425 '(']: s#13
[#425 '*']: s#79
[#425 '-']: s#76
[#425 '@']: s#38
[#425 'bitcast']: s#85
[#425 'false']: s#98
[#425 'true']: s#97
[#425 '~']: s#78
[#425 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#425 /0[fh]/]: s#102
[#425 /0[iu]?/]: s#99
[#425 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#425 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#425 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#425 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#425 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#425 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#425 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#425 /[1-9][0-9]*[fh]/]: s#103
[#425 /[1-9][0-9]*[iu]?/]: s#100
[#426 ')']: r#252
[#426 ';']: r#252
[#427 ')']: r#253
[#427 ';']: r#253
[#428 '!']: r#254
[#428 '&']: r#254
[#428 '(']: r#254
[#428 '*']: r#254
[#428 '-']: r#254
[#428 '@']: r#254
[#428 'array']: r#254
[#428 'atomic']: r#254
[#428 'bitcast']: r#254
[#428 'bool']: r#254
[#428 'f16']: r#254
[#428 'f32']: r#254
[#428 'false']: r#254
[#428 'i32']: r#254
[#428 'mat2x2']: r#254
[#428 'mat2x3']: r#254
[#428 'mat2x4']: r#254
[#428 'mat3x2']: r#254
[#428 'mat3x3']: r#254
[#428 'mat3x4']: r#254
[#428 'mat4x2']: r#254
[#428 'mat4x3']: r#254
[#428 'mat4x4']: r#254
[#428 'ptr']: r#254
[#428 'sampler']: r#254
[#428 'sampler_comparison']: r#254
[#428 'texture_1d']: r#254
[#428 'texture_2d']: r#254
[#428 'texture_2d_array']: r#254
[#428 'texture_3d']: r#254
[#428 'texture_cube']: r#254
[#428 'texture_cube_array']: r#254
[#428 'texture_depth_2d']: r#254
[#428 'texture_depth_2d_array']: r#254
[#428 'texture_depth_cube']: r#254
[#428 'texture_depth_cube_array']: r#254
[#428 'texture_depth_multisampled_2d']: r#254
[#428 'texture_multisampled_2d']: r#254
[#428 'texture_storage_1d']: r#254
[#428 'texture_storage_2d']: r#254
[#428 'texture_storage_2d_array']: r#254
[#428 'texture_storage_3d']: r#254
[#428 'true']: r#254
[#428 'u32']: r#254
[#428 'vec2']: r#254
[#428 'vec3']: r#254
[#428 'vec4']: r#254
[#428 '~']: r#254
[#428 /0[xX][0-9a-fA-F]+[iu]?/]: r#254
[#429 '!']: r#255
[#429 '&']: r#255
[#429 '(']: r#255
[#429 '*']: r#255
[#429 '-']: r#255
[#429 '@']: r#255
[#429 'array']: r#255
[#429 'atomic']: r#255
[#429 'bitcast']: r#255
[#429 'bool']: r#255
[#429 'f16']: r#255
[#429 'f32']: r#255
[#429 'false']: r#255
[#429 'i32']: r#255
[#429 'mat2x2']: r#255
[#429 'mat2x3']: r#255
[#429 'mat2x4']: r#255
[#429 'mat3x2']: r#255
[#429 'mat3x3']: r#255
[#429 'mat3x4']: r#255
[#429 'mat4x2']: r#255
[#429 'mat4x3']: r#255
[#429 'mat4x4']: r#255
[#429 'ptr']: r#255
[#429 'sampler']: r#255
[#429 'sampler_comparison']: r#255
[#429 'texture_1d']: r#255
[#429 'texture_2d']: r#255
[#429 'texture_2d_array']: r#255
[#429 'texture_3d']: r#255
[#429 'texture_cube']: r#255
[#429 'texture_cube_array']: r#255
[#429 'texture_depth_2d']: r#255
[#429 'texture_depth_2d_array']: r#255
[#429 'texture_depth_cube']: r#255
[#429 'texture_depth_cube_array']: r#255
[#429 'texture_depth_multisampled_2d']: r#255
[#429 'texture_multisampled_2d']: r#255
[#429 'texture_storage_1d']: r#255
[#429 'texture_storage_2d']: r#255
[#429 'texture_storage_2d_array']: r#255
[#429 'texture_storage_3d']: r#255
[#429 'true']: r#255
[#429 'u32']: r#255
[#429 'vec2']: r#255
[#429 'vec3']: r#255
[#429 'vec4']: r#255
[#429 '~']: r#255
[#429 /0[xX][0-9a-fA-F]+[iu]?/]: r#255
[#430 ')']: r#256
[#430 ';']: r#256
[#431 ')']: r#257
[#431 ';']: r#257
[#432 '!']: r#258
[#432 '&']: r#258
[#432 '(']: r#258
[#432 '*']: r#258
[#432 '-']: r#258
[#432 '@']: r#258
[#432 'array']: r#258
[#432 'atomic']: r#258
[#432 'bitcast']: r#258
[#432 'bool']: r#258
[#432 'f16']: r#258
[#432 'f32']: r#258
[#432 'false']: r#258
[#432 'i32']: r#258
[#432 'mat2x2']: r#258
[#432 'mat2x3']: r#258
[#432 'mat2x4']: r#258
[#432 'mat3x2']: r#258
[#432 'mat3x3']: r#258
[#432 'mat3x4']: r#258
[#432 'mat4x2']: r#258
[#432 'mat4x3']: r#258
[#432 'mat4x4']: r#258
[#432 'ptr']: r#258
[#432 'sampler']: r#258
[#432 'sampler_comparison']: r#258
[#432 'texture_1d']: r#258
[#432 'texture_2d']: r#258
[#432 'texture_2d_array']: r#258
[#432 'texture_3d']: r#258
[#432 'texture_cube']: r#258
[#432 'texture_cube_array']: r#258
[#432 'texture_depth_2d']: r#258
[#432 'texture_depth_2d_array']: r#258
[#432 'texture_depth_cube']: r#258
[#432 'texture_depth_cube_array']: r#258
[#432 'texture_depth_multisampled_2d']: r#258
[#432 'texture_multisampled_2d']: r#258
[#432 'texture_storage_1d']: r#258
[#432 'texture_storage_2d']: r#258
[#432 'texture_storage_2d_array']: r#258
[#432 'texture_storage_3d']: r#258
[#432 'true']: r#258
[#432 'u32']: r#258
[#432 'vec2']: r#258
[#432 'vec3']: r#258
[#432 'vec4']: r#258
[#432 '~']: r#258
[#432 /0[xX][0-9a-fA-F]+[iu]?/]: r#258
[#433 '!']: r#259
[#433 '&']: r#259
[#433 '(']: r#259
[#433 '*']: r#259
[#433 '-']: r#259
[#433 '@']: r#259
[#433 'array']: r#259
[#433 'atomic']: r#259
[#433 'bitcast']: r#259
[#433 'bool']: r#259
[#433 'f16']: r#259
[#433 'f32']: r#259
[#433 'false']: r#259
[#433 'i32']: r#259
[#433 'mat2x2']: r#259
[#433 'mat2x3']: r#259
[#433 'mat2x4']: r#259
[#433 'mat3x2']: r#259
[#433 'mat3x3']: r#259
[#433 'mat3x4']: r#259
[#433 'mat4x2']: r#259
[#433 'mat4x3']: r#259
[#433 'mat4x4']: r#259
[#433 'ptr']: r#259
[#433 'sampler']: r#259
[#433 'sampler_comparison']: r#259
[#433 'texture_1d']: r#259
[#433 'texture_2d']: r#259
[#433 'texture_2d_array']: r#259
[#433 'texture_3d']: r#259
[#433 'texture_cube']: r#259
[#433 'texture_cube_array']: r#259
[#433 'texture_depth_2d']: r#259
[#433 'texture_depth_2d_array']: r#259
[#433 'texture_depth_cube']: r#259
[#433 'texture_depth_cube_array']: r#259
[#433 'texture_depth_multisampled_2d']: r#259
[#433 'texture_multisampled_2d']: r#259
[#433 'texture_storage_1d']: r#259
[#433 'texture_storage_2d']: r#259
[#433 'texture_storage_2d_array']: r#259
[#433 'texture_storage_3d']: r#259
[#433 'true']: r#259
[#433 'u32']: r#259
[#433 'vec2']: r#259
[#433 'vec3']: r#259
[#433 'vec4']: r#259
[#433 '~']: r#259
[#433 /0[xX][0-9a-fA-F]+[iu]?/]: r#259
[#434 '!']: r#260
[#434 '&']: r#260
[#434 '(']: r#260
[#434 '*']: r#260
[#434 '-']: r#260
[#434 '@']: r#260
[#434 'array']: r#260
[#434 'atomic']: r#260
[#434 'bitcast']: r#260
[#434 'bool']: r#260
[#434 'f16']: r#260
[#434 'f32']: r#260
[#434 'false']: r#260
[#434 'i32']: r#260
[#434 'mat2x2']: r#260
[#434 'mat2x3']: r#260
[#434 'mat2x4']: r#260
[#434 'mat3x2']: r#260
[#434 'mat3x3']: r#260
[#434 'mat3x4']: r#260
[#434 'mat4x2']: r#260
[#434 'mat4x3']: r#260
[#434 'mat4x4']: r#260
[#434 'ptr']: r#260
[#434 'sampler']: r#260
[#434 'sampler_comparison']: r#260
[#434 'texture_1d']: r#260
[#434 'texture_2d']: r#260
[#434 'texture_2d_array']: r#260
[#434 'texture_3d']: r#260
[#434 'texture_cube']: r#260
[#434 'texture_cube_array']: r#260
[#434 'texture_depth_2d']: r#260
[#434 'texture_depth_2d_array']: r#260
[#434 'texture_depth_cube']: r#260
[#434 'texture_depth_cube_array']: r#260
[#434 'texture_depth_multisampled_2d']: r#260
[#434 'texture_multisampled_2d']: r#260
[#434 'texture_storage_1d']: r#260
[#434 'texture_storage_2d']: r#260
[#434 'texture_storage_2d_array']: r#260
[#434 'texture_storage_3d']: r#260
[#434 'true']: r#260
[#434 'u32']: r#260
[#434 'vec2']: r#260
[#434 'vec3']: r#260
[#434 'vec4']: r#260
[#434 '~']: r#260
[#434 /0[xX][0-9a-fA-F]+[iu]?/]: r#260
[#435 '!']: r#261
[#435 '&']: r#261
[#435 '(']: r#261
[#435 '*']: r#261
[#435 '-']: r#261
[#435 '@']: r#261
[#435 'array']: r#261
[#435 'atomic']: r#261
[#435 'bitcast']: r#261
[#435 'bool']: r#261
[#435 'f16']: r#261
[#435 'f32']: r#261
[#435 'false']: r#261
[#435 'i32']: r#261
[#435 'mat2x2']: r#261
[#435 'mat2x3']: r#261
[#435 'mat2x4']: r#261
[#435 'mat3x2']: r#261
[#435 'mat3x3']: r#261
[#435 'mat3x4']: r#261
[#435 'mat4x2']: r#261
[#435 'mat4x3']: r#261
[#435 'mat4x4']: r#261
[#435 'ptr']: r#261
[#435 'sampler']: r#261
[#435 'sampler_comparison']: r#261
[#435 'texture_1d']: r#261
[#435 'texture_2d']: r#261
[#435 'texture_2d_array']: r#261
[#435 'texture_3d']: r#261
[#435 'texture_cube']: r#261
[#435 'texture_cube_array']: r#261
[#435 'texture_depth_2d']: r#261
[#435 'texture_depth_2d_array']: r#261
[#435 'texture_depth_cube']: r#261
[#435 'texture_depth_cube_array']: r#261
[#435 'texture_depth_multisampled_2d']: r#261
[#435 'texture_multisampled_2d']: r#261
[#435 'texture_storage_1d']: r#261
[#435 'texture_storage_2d']: r#261
[#435 'texture_storage_2d_array']: r#261
[#435 'texture_storage_3d']: r#261
[#435 'true']: r#261
[#435 'u32']: r#261
[#435 'vec2']: r#261
[#435 'vec3']: r#261
[#435 'vec4']: r#261
[#435 '~']: r#261
[#435 /0[xX][0-9a-fA-F]+[iu]?/]: r#261
[#436 '!']: r#262
[#436 '&']: r#262
[#436 '(']: r#262
[#436 '*']: r#262
[#436 '-']: r#262
[#436 '@']: r#262
[#436 'array']: r#262
[#436 'atomic']: r#262
[#436 'bitcast']: r#262
[#436 'bool']: r#262
[#436 'f16']: r#262
[#436 'f32']: r#262
[#436 'false']: r#262
[#436 'i32']: r#262
[#436 'mat2x2']: r#262
[#436 'mat2x3']: r#262
[#436 'mat2x4']: r#262
[#436 'mat3x2']: r#262
[#436 'mat3x3']: r#262
[#436 'mat3x4']: r#262
[#436 'mat4x2']: r#262
[#436 'mat4x3']: r#262
[#436 'mat4x4']: r#262
[#436 'ptr']: r#262
[#436 'sampler']: r#262
[#436 'sampler_comparison']: r#262
[#436 'texture_1d']: r#262
[#436 'texture_2d']: r#262
[#436 'texture_2d_array']: r#262
[#436 'texture_3d']: r#262
[#436 'texture_cube']: r#262
[#436 'texture_cube_array']: r#262
[#436 'texture_depth_2d']: r#262
[#436 'texture_depth_2d_array']: r#262
[#436 'texture_depth_cube']: r#262
[#436 'texture_depth_cube_array']: r#262
[#436 'texture_depth_multisampled_2d']: r#262
[#436 'texture_multisampled_2d']: r#262
[#436 'texture_storage_1d']: r#262
[#436 'texture_storage_2d']: r#262
[#436 'texture_storage_2d_array']: r#262
[#436 'texture_storage_3d']: r#262
[#436 'true']: r#262
[#436 'u32']: r#262
[#436 'vec2']: r#262
[#436 'vec3']: r#262
[#436 'vec4']: r#262
[#436 '~']: r#262
[#436 /0[xX][0-9a-fA-F]+[iu]?/]: r#262
[#437 '!']: r#263
[#437 '&']: r#263
[#437 '(']: r#263
[#437 '*']: r#263
[#437 '-']: r#263
[#437 '@']: r#263
[#437 'array']: r#263
[#437 'atomic']: r#263
[#437 'bitcast']: r#263
[#437 'bool']: r#263
[#437 'f16']: r#263
[#437 'f32']: r#263
[#437 'false']: r#263
[#437 'i32']: r#263
[#437 'mat2x2']: r#263
[#437 'mat2x3']: r#263
[#437 'mat2x4']: r#263
[#437 'mat3x2']: r#263
[#437 'mat3x3']: r#263
[#437 'mat3x4']: r#263
[#437 'mat4x2']: r#263
[#437 'mat4x3']: r#263
[#437 'mat4x4']: r#263
[#437 'ptr']: r#263
[#437 'sampler']: r#263
[#437 'sampler_comparison']: r#263
[#437 'texture_1d']: r#263
[#437 'texture_2d']: r#263
[#437 'texture_2d_array']: r#263
[#437 'texture_3d']: r#263
[#437 'texture_cube']: r#263
[#437 'texture_cube_array']: r#263
[#437 'texture_depth_2d']: r#263
[#437 'texture_depth_2d_array']: r#263
[#437 'texture_depth_cube']: r#263
[#437 'texture_depth_cube_array']: r#263
[#437 'texture_depth_multisampled_2d']: r#263
[#437 'texture_multisampled_2d']: r#263
[#437 'texture_storage_1d']: r#263
[#437 'texture_storage_2d']: r#263
[#437 'texture_storage_2d_array']: r#263
[#437 'texture_storage_3d']: r#263
[#437 'true']: r#263
[#437 'u32']: r#263
[#437 'vec2']: r#263
[#437 'vec3']: r#263
[#437 'vec4']: r#263
[#437 '~']: r#263
[#437 /0[xX][0-9a-fA-F]+[iu]?/]: r#263
[#438 '!']: r#264
[#438 '&']: r#264
[#438 '(']: r#264
[#438 '*']: r#264
[#438 '-']: r#264
[#438 '@']: r#264
[#438 'array']: r#264
[#438 'atomic']: r#264
[#438 'bitcast']: r#264
[#438 'bool']: r#264
[#438 'f16']: r#264
[#438 'f32']: r#264
[#438 'false']: r#264
[#438 'i32']: r#264
[#438 'mat2x2']: r#264
[#438 'mat2x3']: r#264
[#438 'mat2x4']: r#264
[#438 'mat3x2']: r#264
[#438 'mat3x3']: r#264
[#438 'mat3x4']: r#264
[#438 'mat4x2']: r#264
[#438 'mat4x3']: r#264
[#438 'mat4x4']: r#264
[#438 'ptr']: r#264
[#438 'sampler']: r#264
[#438 'sampler_comparison']: r#264
[#438 'texture_1d']: r#264
[#438 'texture_2d']: r#264
[#438 'texture_2d_array']: r#264
[#438 'texture_3d']: r#264
[#438 'texture_cube']: r#264
[#438 'texture_cube_array']: r#264
[#438 'texture_depth_2d']: r#264
[#438 'texture_depth_2d_array']: r#264
[#438 'texture_depth_cube']: r#264
[#438 'texture_depth_cube_array']: r#264
[#438 'texture_depth_multisampled_2d']: r#264
[#438 'texture_multisampled_2d']: r#264
[#438 'texture_storage_1d']: r#264
[#438 'texture_storage_2d']: r#264
[#438 'texture_storage_2d_array']: r#264
[#438 'texture_storage_3d']: r#264
[#438 'true']: r#264
[#438 'u32']: r#264
[#438 'vec2']: r#264
[#438 'vec3']: r#264
[#438 'vec4']: r#264
[#438 '~']: r#264
[#438 /0[xX][0-9a-fA-F]+[iu]?/]: r#264
[#439 '!']: r#265
[#439 '&']: r#265
[#439 '(']: r#265
[#439 '*']: r#265
[#439 '-']: r#265
[#439 '@']: r#265
[#439 'array']: r#265
[#439 'atomic']: r#265
[#439 'bitcast']: r#265
[#439 'bool']: r#265
[#439 'f16']: r#265
[#439 'f32']: r#265
[#439 'false']: r#265
[#439 'i32']: r#265
[#439 'mat2x2']: r#265
[#439 'mat2x3']: r#265
[#439 'mat2x4']: r#265
[#439 'mat3x2']: r#265
[#439 'mat3x3']: r#265
[#439 'mat3x4']: r#265
[#439 'mat4x2']: r#265
[#439 'mat4x3']: r#265
[#439 'mat4x4']: r#265
[#439 'ptr']: r#265
[#439 'sampler']: r#265
[#439 'sampler_comparison']: r#265
[#439 'texture_1d']: r#265
[#439 'texture_2d']: r#265
[#439 'texture_2d_array']: r#265
[#439 'texture_3d']: r#265
[#439 'texture_cube']: r#265
[#439 'texture_cube_array']: r#265
[#439 'texture_depth_2d']: r#265
[#439 'texture_depth_2d_array']: r#265
[#439 'texture_depth_cube']: r#265
[#439 'texture_depth_cube_array']: r#265
[#439 'texture_depth_multisampled_2d']: r#265
[#439 'texture_multisampled_2d']: r#265
[#439 'texture_storage_1d']: r#265
[#439 'texture_storage_2d']: r#265
[#439 'texture_storage_2d_array']: r#265
[#439 'texture_storage_3d']: r#265
[#439 'true']: r#265
[#439 'u32']: r#265
[#439 'vec2']: r#265
[#439 'vec3']: r#265
[#439 'vec4']: r#265
[#439 '~']: r#265
[#439 /0[xX][0-9a-fA-F]+[iu]?/]: r#265
[#440 '!']: r#266
[#440 '&']: r#266
[#440 '(']: r#266
[#440 '*']: r#266
[#440 '-']: r#266
[#440 '@']: r#266
[#440 'array']: r#266
[#440 'atomic']: r#266
[#440 'bitcast']: r#266
[#440 'bool']: r#266
[#440 'f16']: r#266
[#440 'f32']: r#266
[#440 'false']: r#266
[#440 'i32']: r#266
[#440 'mat2x2']: r#266
[#440 'mat2x3']: r#266
[#440 'mat2x4']: r#266
[#440 'mat3x2']: r#266
[#440 'mat3x3']: r#266
[#440 'mat3x4']: r#266
[#440 'mat4x2']: r#266
[#440 'mat4x3']: r#266
[#440 'mat4x4']: r#266
[#440 'ptr']: r#266
[#440 'sampler']: r#266
[#440 'sampler_comparison']: r#266
[#440 'texture_1d']: r#266
[#440 'texture_2d']: r#266
[#440 'texture_2d_array']: r#266
[#440 'texture_3d']: r#266
[#440 'texture_cube']: r#266
[#440 'texture_cube_array']: r#266
[#440 'texture_depth_2d']: r#266
[#440 'texture_depth_2d_array']: r#266
[#440 'texture_depth_cube']: r#266
[#440 'texture_depth_cube_array']: r#266
[#440 'texture_depth_multisampled_2d']: r#266
[#440 'texture_multisampled_2d']: r#266
[#440 'texture_storage_1d']: r#266
[#440 'texture_storage_2d']: r#266
[#440 'texture_storage_2d_array']: r#266
[#440 'texture_storage_3d']: r#266
[#440 'true']: r#266
[#440 'u32']: r#266
[#440 'vec2']: r#266
[#440 'vec3']: r#266
[#440 'vec4']: r#266
[#440 '~']: r#266
[#440 /0[xX][0-9a-fA-F]+[iu]?/]: r#266
[#441 '!']: r#267
[#441 '&']: r#267
[#441 '(']: r#267
[#441 '*']: r#267
[#441 '-']: r#267
[#441 '@']: r#267
[#441 'array']: r#267
[#441 'atomic']: r#267
[#441 'bitcast']: r#267
[#441 'bool']: r#267
[#441 'f16']: r#267
[#441 'f32']: r#267
[#441 'false']: r#267
[#441 'i32']: r#267
[#441 'mat2x2']: r#267
[#441 'mat2x3']: r#267
[#441 'mat2x4']: r#267
[#441 'mat3x2']: r#267
[#441 'mat3x3']: r#267
[#441 'mat3x4']: r#267
[#441 'mat4x2']: r#267
[#441 'mat4x3']: r#267
[#441 'mat4x4']: r#267
[#441 'ptr']: r#267
[#441 'sampler']: r#267
[#441 'sampler_comparison']: r#267
[#441 'texture_1d']: r#267
[#441 'texture_2d']: r#267
[#441 'texture_2d_array']: r#267
[#441 'texture_3d']: r#267
[#441 'texture_cube']: r#267
[#441 'texture_cube_array']: r#267
[#441 'texture_depth_2d']: r#267
[#441 'texture_depth_2d_array']: r#267
[#441 'texture_depth_cube']: r#267
[#441 'texture_depth_cube_array']: r#267
[#441 'texture_depth_multisampled_2d']: r#267
[#441 'texture_multisampled_2d']: r#267
[#441 'texture_storage_1d']: r#267
[#441 'texture_storage_2d']: r#267
[#441 'texture_storage_2d_array']: r#267
[#441 'texture_storage_3d']: r#267
[#441 'true']: r#267
[#441 'u32']: r#267
[#441 'vec2']: r#267
[#441 'vec3']: r#267
[#441 'vec4']: r#267
[#441 '~']: r#267
[#441 /0[xX][0-9a-fA-F]+[iu]?/]: r#267
[#442 '!']: r#268
[#442 '&']: r#268
[#442 '(']: r#268
[#442 '*']: r#268
[#442 '-']: r#268
[#442 '@']: r#268
[#442 'array']: r#268
[#442 'atomic']: r#268
[#442 'bitcast']: r#268
[#442 'bool']: r#268
[#442 'f16']: r#268
[#442 'f32']: r#268
[#442 'false']: r#268
[#442 'i32']: r#268
[#442 'mat2x2']: r#268
[#442 'mat2x3']: r#268
[#442 'mat2x4']: r#268
[#442 'mat3x2']: r#268
[#442 'mat3x3']: r#268
[#442 'mat3x4']: r#268
[#442 'mat4x2']: r#268
[#442 'mat4x3']: r#268
[#442 'mat4x4']: r#268
[#442 'ptr']: r#268
[#442 'sampler']: r#268
[#442 'sampler_comparison']: r#268
[#442 'texture_1d']: r#268
[#442 'texture_2d']: r#268
[#442 'texture_2d_array']: r#268
[#442 'texture_3d']: r#268
[#442 'texture_cube']: r#268
[#442 'texture_cube_array']: r#268
[#442 'texture_depth_2d']: r#268
[#442 'texture_depth_2d_array']: r#268
[#442 'texture_depth_cube']: r#268
[#442 'texture_depth_cube_array']: r#268
[#442 'texture_depth_multisampled_2d']: r#268
[#442 'texture_multisampled_2d']: r#268
[#442 'texture_storage_1d']: r#268
[#442 'texture_storage_2d']: r#268
[#442 'texture_storage_2d_array']: r#268
[#442 'texture_storage_3d']: r#268
[#442 'true']: r#268
[#442 'u32']: r#268
[#442 'vec2']: r#268
[#442 'vec3']: r#268
[#442 'vec4']: r#268
[#442 '~']: r#268
[#442 /0[xX][0-9a-fA-F]+[iu]?/]: r#268
[#443 '!']: r#269
[#443 '&']: r#269
[#443 '(']: r#269
[#443 '*']: r#269
[#443 '-']: r#269
[#443 '@']: r#269
[#443 'array']: r#269
[#443 'atomic']: r#269
[#443 'bitcast']: r#269
[#443 'bool']: r#269
[#443 'f16']: r#269
[#443 'f32']: r#269
[#443 'false']: r#269
[#443 'i32']: r#269
[#443 'mat2x2']: r#269
[#443 'mat2x3']: r#269
[#443 'mat2x4']: r#269
[#443 'mat3x2']: r#269
[#443 'mat3x3']: r#269
[#443 'mat3x4']: r#269
[#443 'mat4x2']: r#269
[#443 'mat4x3']: r#269
[#443 'mat4x4']: r#269
[#443 'ptr']: r#269
[#443 'sampler']: r#269
[#443 'sampler_comparison']: r#269
[#443 'texture_1d']: r#269
[#443 'texture_2d']: r#269
[#443 'texture_2d_array']: r#269
[#443 'texture_3d']: r#269
[#443 'texture_cube']: r#269
[#443 'texture_cube_array']: r#269
[#443 'texture_depth_2d']: r#269
[#443 'texture_depth_2d_array']: r#269
[#443 'texture_depth_cube']: r#269
[#443 'texture_depth_cube_array']: r#269
[#443 'texture_depth_multisampled_2d']: r#269
[#443 'texture_multisampled_2d']: r#269
[#443 'texture_storage_1d']: r#269
[#443 'texture_storage_2d']: r#269
[#443 'texture_storage_2d_array']: r#269
[#443 'texture_storage_3d']: r#269
[#443 'true']: r#269
[#443 'u32']: r#269
[#443 'vec2']: r#269
[#443 'vec3']: r#269
[#443 'vec4']: r#269
[#443 '~']: r#269
[#443 /0[xX][0-9a-fA-F]+[iu]?/]: r#269
[#444 '!']: r#270
[#444 '&']: r#270
[#444 '(']: r#270
[#444 '*']: r#270
[#444 '-']: r#270
[#444 '@']: r#270
[#444 'array']: r#270
[#444 'atomic']: r#270
[#444 'bitcast']: r#270
[#444 'bool']: r#270
[#444 'f16']: r#270
[#444 'f32']: r#270
[#444 'false']: r#270
[#444 'i32']: r#270
[#444 'mat2x2']: r#270
[#444 'mat2x3']: r#270
[#444 'mat2x4']: r#270
[#444 'mat3x2']: r#270
[#444 'mat3x3']: r#270
[#444 'mat3x4']: r#270
[#444 'mat4x2']: r#270
[#444 'mat4x3']: r#270
[#444 'mat4x4']: r#270
[#444 'ptr']: r#270
[#444 'sampler']: r#270
[#444 'sampler_comparison']: r#270
[#444 'texture_1d']: r#270
[#444 'texture_2d']: r#270
[#444 'texture_2d_array']: r#270
[#444 'texture_3d']: r#270
[#444 'texture_cube']: r#270
[#444 'texture_cube_array']: r#270
[#444 'texture_depth_2d']: r#270
[#444 'texture_depth_2d_array']: r#270
[#444 'texture_depth_cube']: r#270
[#444 'texture_depth_cube_array']: r#270
[#444 'texture_depth_multisampled_2d']: r#270
[#444 'texture_multisampled_2d']: r#270
[#444 'texture_storage_1d']: r#270
[#444 'texture_storage_2d']: r#270
[#444 'texture_storage_2d_array']: r#270
[#444 'texture_storage_3d']: r#270
[#444 'true']: r#270
[#444 'u32']: r#270
[#444 'vec2']: r#270
[#444 'vec3']: r#270
[#444 'vec4']: r#270
[#444 '~']: r#270
[#444 /0[xX][0-9a-fA-F]+[iu]?/]: r#270
[#445 '!']: r#271
[#445 '&']: r#271
[#445 '(']: r#271
[#445 '*']: r#271
[#445 '-']: r#271
[#445 '@']: r#271
[#445 'array']: r#271
[#445 'atomic']: r#271
[#445 'bitcast']: r#271
[#445 'bool']: r#271
[#445 'f16']: r#271
[#445 'f32']: r#271
[#445 'false']: r#271
[#445 'i32']: r#271
[#445 'mat2x2']: r#271
[#445 'mat2x3']: r#271
[#445 'mat2x4']: r#271
[#445 'mat3x2']: r#271
[#445 'mat3x3']: r#271
[#445 'mat3x4']: r#271
[#445 'mat4x2']: r#271
[#445 'mat4x3']: r#271
[#445 'mat4x4']: r#271
[#445 'ptr']: r#271
[#445 'sampler']: r#271
[#445 'sampler_comparison']: r#271
[#445 'texture_1d']: r#271
[#445 'texture_2d']: r#271
[#445 'texture_2d_array']: r#271
[#445 'texture_3d']: r#271
[#445 'texture_cube']: r#271
[#445 'texture_cube_array']: r#271
[#445 'texture_depth_2d']: r#271
[#445 'texture_depth_2d_array']: r#271
[#445 'texture_depth_cube']: r#271
[#445 'texture_depth_cube_array']: r#271
[#445 'texture_depth_multisampled_2d']: r#271
[#445 'texture_multisampled_2d']: r#271
[#445 'texture_storage_1d']: r#271
[#445 'texture_storage_2d']: r#271
[#445 'texture_storage_2d_array']: r#271
[#445 'texture_storage_3d']: r#271
[#445 'true']: r#271
[#445 'u32']: r#271
[#445 'vec2']: r#271
[#445 'vec3']: r#271
[#445 'vec4']: r#271
[#445 '~']: r#271
[#445 /0[xX][0-9a-fA-F]+[iu]?/]: r#271
[#446 '!']: r#272
[#446 '&']: r#272
[#446 '(']: r#272
[#446 '*']: r#272
[#446 '-']: r#272
[#446 '@']: r#272
[#446 'array']: r#272
[#446 'atomic']: r#272
[#446 'bitcast']: r#272
[#446 'bool']: r#272
[#446 'f16']: r#272
[#446 'f32']: r#272
[#446 'false']: r#272
[#446 'i32']: r#272
[#446 'mat2x2']: r#272
[#446 'mat2x3']: r#272
[#446 'mat2x4']: r#272
[#446 'mat3x2']: r#272
[#446 'mat3x3']: r#272
[#446 'mat3x4']: r#272
[#446 'mat4x2']: r#272
[#446 'mat4x3']: r#272
[#446 'mat4x4']: r#272
[#446 'ptr']: r#272
[#446 'sampler']: r#272
[#446 'sampler_comparison']: r#272
[#446 'texture_1d']: r#272
[#446 'texture_2d']: r#272
[#446 'texture_2d_array']: r#272
[#446 'texture_3d']: r#272
[#446 'texture_cube']: r#272
[#446 'texture_cube_array']: r#272
[#446 'texture_depth_2d']: r#272
[#446 'texture_depth_2d_array']: r#272
[#446 'texture_depth_cube']: r#272
[#446 'texture_depth_cube_array']: r#272
[#446 'texture_depth_multisampled_2d']: r#272
[#446 'texture_multisampled_2d']: r#272
[#446 'texture_storage_1d']: r#272
[#446 'texture_storage_2d']: r#272
[#446 'texture_storage_2d_array']: r#272
[#446 'texture_storage_3d']: r#272
[#446 'true']: r#272
[#446 'u32']: r#272
[#446 'vec2']: r#272
[#446 'vec3']: r#272
[#446 'vec4']: r#272
[#446 '~']: r#272
[#446 /0[xX][0-9a-fA-F]+[iu]?/]: r#272
[#447 '!']: r#273
[#447 '&']: r#273
[#447 '(']: r#273
[#447 '*']: r#273
[#447 '-']: r#273
[#447 '@']: r#273
[#447 'array']: r#273
[#447 'atomic']: r#273
[#447 'bitcast']: r#273
[#447 'bool']: r#273
[#447 'f16']: r#273
[#447 'f32']: r#273
[#447 'false']: r#273
[#447 'i32']: r#273
[#447 'mat2x2']: r#273
[#447 'mat2x3']: r#273
[#447 'mat2x4']: r#273
[#447 'mat3x2']: r#273
[#447 'mat3x3']: r#273
[#447 'mat3x4']: r#273
[#447 'mat4x2']: r#273
[#447 'mat4x3']: r#273
[#447 'mat4x4']: r#273
[#447 'ptr']: r#273
[#447 'sampler']: r#273
[#447 'sampler_comparison']: r#273
[#447 'texture_1d']: r#273
[#447 'texture_2d']: r#273
[#447 'texture_2d_array']: r#273
[#447 'texture_3d']: r#273
[#447 'texture_cube']: r#273
[#447 'texture_cube_array']: r#273
[#447 'texture_depth_2d']: r#273
[#447 'texture_depth_2d_array']: r#273
[#447 'texture_depth_cube']: r#273
[#447 'texture_depth_cube_array']: r#273
[#447 'texture_depth_multisampled_2d']: r#273
[#447 'texture_multisampled_2d']: r#273
[#447 'texture_storage_1d']: r#273
[#447 'texture_storage_2d']: r#273
[#447 'texture_storage_2d_array']: r#273
[#447 'texture_storage_3d']: r#273
[#447 'true']: r#273
[#447 'u32']: r#273
[#447 'vec2']: r#273
[#447 'vec3']: r#273
[#447 'vec4']: r#273
[#447 '~']: r#273
[#447 /0[xX][0-9a-fA-F]+[iu]?/]: r#273
[#448 '!']: r#274
[#448 '&']: r#274
[#448 '(']: r#274
[#448 '*']: r#274
[#448 '-']: r#274
[#448 '@']: r#274
[#448 'array']: r#274
[#448 'atomic']: r#274
[#448 'bitcast']: r#274
[#448 'bool']: r#274
[#448 'f16']: r#274
[#448 'f32']: r#274
[#448 'false']: r#274
[#448 'i32']: r#274
[#448 'mat2x2']: r#274
[#448 'mat2x3']: r#274
[#448 'mat2x4']: r#274
[#448 'mat3x2']: r#274
[#448 'mat3x3']: r#274
[#448 'mat3x4']: r#274
[#448 'mat4x2']: r#274
[#448 'mat4x3']: r#274
[#448 'mat4x4']: r#274
[#448 'ptr']: r#274
[#448 'sampler']: r#274
[#448 'sampler_comparison']: r#274
[#448 'texture_1d']: r#274
[#448 'texture_2d']: r#274
[#448 'texture_2d_array']: r#274
[#448 'texture_3d']: r#274
[#448 'texture_cube']: r#274
[#448 'texture_cube_array']: r#274
[#448 'texture_depth_2d']: r#274
[#448 'texture_depth_2d_array']: r#274
[#448 'texture_depth_cube']: r#274
[#448 'texture_depth_cube_array']: r#274
[#448 'texture_depth_multisampled_2d']: r#274
[#448 'texture_multisampled_2d']: r#274
[#448 'texture_storage_1d']: r#274
[#448 'texture_storage_2d']: r#274
[#448 'texture_storage_2d_array']: r#274
[#448 'texture_storage_3d']: r#274
[#448 'true']: r#274
[#448 'u32']: r#274
[#448 'vec2']: r#274
[#448 'vec3']: r#274
[#448 'vec4']: r#274
[#448 '~']: r#274
[#448 /0[xX][0-9a-fA-F]+[iu]?/]: r#274
[#449 '!']: r#275
[#449 '&']: r#275
[#449 '(']: r#275
[#449 '*']: r#275
[#449 '-']: r#275
[#449 '@']: r#275
[#449 'array']: r#275
[#449 'atomic']: r#275
[#449 'bitcast']: r#275
[#449 'bool']: r#275
[#449 'f16']: r#275
[#449 'f32']: r#275
[#449 'false']: r#275
[#449 'i32']: r#275
[#449 'mat2x2']: r#275
[#449 'mat2x3']: r#275
[#449 'mat2x4']: r#275
[#449 'mat3x2']: r#275
[#449 'mat3x3']: r#275
[#449 'mat3x4']: r#275
[#449 'mat4x2']: r#275
[#449 'mat4x3']: r#275
[#449 'mat4x4']: r#275
[#449 'ptr']: r#275
[#449 'sampler']: r#275
[#449 'sampler_comparison']: r#275
[#449 'texture_1d']: r#275
[#449 'texture_2d']: r#275
[#449 'texture_2d_array']: r#275
[#449 'texture_3d']: r#275
[#449 'texture_cube']: r#275
[#449 'texture_cube_array']: r#275
[#449 'texture_depth_2d']: r#275
[#449 'texture_depth_2d_array']: r#275
[#449 'texture_depth_cube']: r#275
[#449 'texture_depth_cube_array']: r#275
[#449 'texture_depth_multisampled_2d']: r#275
[#449 'texture_multisampled_2d']: r#275
[#449 'texture_storage_1d']: r#275
[#449 'texture_storage_2d']: r#275
[#449 'texture_storage_2d_array']: r#275
[#449 'texture_storage_3d']: r#275
[#449 'true']: r#275
[#449 'u32']: r#275
[#449 'vec2']: r#275
[#449 'vec3']: r#275
[#449 'vec4']: r#275
[#449 '~']: r#275
[#449 /0[xX][0-9a-fA-F]+[iu]?/]: r#275
[#450 '!']: r#276
[#450 '&']: r#276
[#450 '(']: r#276
[#450 '*']: r#276
[#450 '-']: r#276
[#450 '@']: r#276
[#450 'array']: r#276
[#450 'atomic']: r#276
[#450 'bitcast']: r#276
[#450 'bool']: r#276
[#450 'f16']: r#276
[#450 'f32']: r#276
[#450 'false']: r#276
[#450 'i32']: r#276
[#450 'mat2x2']: r#276
[#450 'mat2x3']: r#276
[#450 'mat2x4']: r#276
[#450 'mat3x2']: r#276
[#450 'mat3x3']: r#276
[#450 'mat3x4']: r#276
[#450 'mat4x2']: r#276
[#450 'mat4x3']: r#276
[#450 'mat4x4']: r#276
[#450 'ptr']: r#276
[#450 'sampler']: r#276
[#450 'sampler_comparison']: r#276
[#450 'texture_1d']: r#276
[#450 'texture_2d']: r#276
[#450 'texture_2d_array']: r#276
[#450 'texture_3d']: r#276
[#450 'texture_cube']: r#276
[#450 'texture_cube_array']: r#276
[#450 'texture_depth_2d']: r#276
[#450 'texture_depth_2d_array']: r#276
[#450 'texture_depth_cube']: r#276
[#450 'texture_depth_cube_array']: r#276
[#450 'texture_depth_multisampled_2d']: r#276
[#450 'texture_multisampled_2d']: r#276
[#450 'texture_storage_1d']: r#276
[#450 'texture_storage_2d']: r#276
[#450 'texture_storage_2d_array']: r#276
[#450 'texture_storage_3d']: r#276
[#450 'true']: r#276
[#450 'u32']: r#276
[#450 'vec2']: r#276
[#450 'vec3']: r#276
[#450 'vec4']: r#276
[#450 '~']: r#276
[#450 /0[xX][0-9a-fA-F]+[iu]?/]: r#276
[#451 '!']: r#277
[#451 '&']: r#277
[#451 '(']: r#277
[#451 '*']: r#277
[#451 '-']: r#277
[#451 '@']: r#277
[#451 'array']: r#277
[#451 'atomic']: r#277
[#451 'bitcast']: r#277
[#451 'bool']: r#277
[#451 'f16']: r#277
[#451 'f32']: r#277
[#451 'false']: r#277
[#451 'i32']: r#277
[#451 'mat2x2']: r#277
[#451 'mat2x3']: r#277
[#451 'mat2x4']: r#277
[#451 'mat3x2']: r#277
[#451 'mat3x3']: r#277
[#451 'mat3x4']: r#277
[#451 'mat4x2']: r#277
[#451 'mat4x3']: r#277
[#451 'mat4x4']: r#277
[#451 'ptr']: r#277
[#451 'sampler']: r#277
[#451 'sampler_comparison']: r#277
[#451 'texture_1d']: r#277
[#451 'texture_2d']: r#277
[#451 'texture_2d_array']: r#277
[#451 'texture_3d']: r#277
[#451 'texture_cube']: r#277
[#451 'texture_cube_array']: r#277
[#451 'texture_depth_2d']: r#277
[#451 'texture_depth_2d_array']: r#277
[#451 'texture_depth_cube']: r#277
[#451 'texture_depth_cube_array']: r#277
[#451 'texture_depth_multisampled_2d']: r#277
[#451 'texture_multisampled_2d']: r#277
[#451 'texture_storage_1d']: r#277
[#451 'texture_storage_2d']: r#277
[#451 'texture_storage_2d_array']: r#277
[#451 'texture_storage_3d']: r#277
[#451 'true']: r#277
[#451 'u32']: r#277
[#451 'vec2']: r#277
[#451 'vec3']: r#277
[#451 'vec4']: r#277
[#451 '~']: r#277
[#451 /0[xX][0-9a-fA-F]+[iu]?/]: r#277
[#452 '{']: s#147
[#453 '=']: s#138
[#454 '=']: s#138
[#455 '!']: s#77
[#455 '&']: s#80
[#455 '(']: s#13
[#455 '*']: s#79
[#455 '-']: s#76
[#455 '@']: s#38
[#455 'bitcast']: s#85
[#455 'false']: s#98
[#455 'true']: s#97
[#455 '~']: s#78
[#455 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#455 /0[fh]/]: s#102
[#455 /0[iu]?/]: s#99
[#455 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#455 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#455 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#455 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#455 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#455 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#455 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#455 /[1-9][0-9]*[fh]/]: s#103
[#455 /[1-9][0-9]*[iu]?/]: s#100
[#456 ')']: r#278
[#456 ';']: r#278
[#457 '(']: s#13
[#458 '{']: s#147
[#459 '&']: s#80
[#459 '(']: s#13
[#459 '*']: s#79
[#459 '@']: s#38
[#459 '_']: s#377
[#459 'const']: s#363
[#459 'let']: s#362
[#459 'var']: s#118
[#459 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#460 '&']: s#80
[#460 '(']: s#13
[#460 '*']: s#79
[#460 ';']: s#25
[#460 '@']: s#38
[#460 '_']: s#377
[#460 'break']: s#364
[#460 'const']: s#363
[#460 'continue']: s#365
[#460 'discard']: s#350
[#460 'for']: s#358
[#460 'if']: s#369
[#460 'let']: s#362
[#460 'loop']: s#357
[#460 'return']: s#354
[#460 'static_assert']: s#32
[#460 'switch']: s#356
[#460 'var']: s#118
[#460 'while']: s#359
[#460 '{']: s#147
[#460 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#461 '{']: s#147
[#462 'else']: s#550
[#463 '&']: r#279
[#463 '(']: r#279
[#463 '*']: r#279
[#463 ';']: r#279
[#463 '@']: r#279
[#463 '_']: r#279
[#463 'array']: r#279
[#463 'atomic']: r#279
[#463 'bool']: r#279
[#463 'break']: r#279
[#463 'const']: r#279
[#463 'continue']: r#279
[#463 'continuing']: r#279
[#463 'discard']: r#279
[#463 'else']: r#279
[#463 'f16']: r#279
[#463 'f32']: r#279
[#463 'for']: r#279
[#463 'i32']: r#279
[#463 'if']: r#279
[#463 'let']: r#279
[#463 'loop']: r#279
[#463 'mat2x2']: r#279
[#463 'mat2x3']: r#279
[#463 'mat2x4']: r#279
[#463 'mat3x2']: r#279
[#463 'mat3x3']: r#279
[#463 'mat3x4']: r#279
[#463 'mat4x2']: r#279
[#463 'mat4x3']: r#279
[#463 'mat4x4']: r#279
[#463 'ptr']: r#279
[#463 'return']: r#279
[#463 'sampler']: r#279
[#463 'sampler_comparison']: r#279
[#463 'static_assert']: r#279
[#463 'switch']: r#279
[#463 'texture_1d']: r#279
[#463 'texture_2d']: r#279
[#463 'texture_2d_array']: r#279
[#463 'texture_3d']: r#279
[#463 'texture_cube']: r#279
[#463 'texture_cube_array']: r#279
[#463 'texture_depth_2d']: r#279
[#463 'texture_depth_2d_array']: r#279
[#463 'texture_depth_cube']: r#279
[#463 'texture_depth_cube_array']: r#279
[#463 'texture_depth_multisampled_2d']: r#279
[#463 'texture_multisampled_2d']: r#279
[#463 'texture_storage_1d']: r#279
[#463 'texture_storage_2d']: r#279
[#463 'texture_storage_2d_array']: r#279
[#463 'texture_storage_3d']: r#279
[#463 'u32']: r#279
[#463 'var']: r#279
[#463 'vec2']: r#279
[#463 'vec3']: r#279
[#463 'vec4']: r#279
[#463 'while']: r#279
[#463 '{']: r#279
[#463 '}']: r#279
[#464 'else']: s#465
[#465 'if']: s#546
[#466 ';']: r#280
[#467 ';']: r#281
[#468 '&']: r#282
[#468 '(']: r#282
[#468 '*']: r#282
[#468 ';']: r#282
[#468 '@']: r#282
[#468 '_']: r#282
[#468 'array']: r#282
[#468 'atomic']: r#282
[#468 'bool']: r#282
[#468 'break']: r#282
[#468 'const']: r#282
[#468 'continue']: r#282
[#468 'continuing']: r#282
[#468 'discard']: r#282
[#468 'f16']: r#282
[#468 'f32']: r#282
[#468 'for']: r#282
[#468 'i32']: r#282
[#468 'if']: r#282
[#468 'let']: r#282
[#468 'loop']: r#282
[#468 'mat2x2']: r#282
[#468 'mat2x3']: r#282
[#468 'mat2x4']: r#282
[#468 'mat3x2']: r#282
[#468 'mat3x3']: r#282
[#468 'mat3x4']: r#282
[#468 'mat4x2']: r#282
[#468 'mat4x3']: r#282
[#468 'mat4x4']: r#282
[#468 'ptr']: r#282
[#468 'return']: r#282
[#468 'sampler']: r#282
[#468 'sampler_comparison']: r#282
[#468 'static_assert']: r#282
[#468 'switch']: r#282
[#468 'texture_1d']: r#282
[#468 'texture_2d']: r#282
[#468 'texture_2d_array']: r#282
[#468 'texture_3d']: r#282
[#468 'texture_cube']: r#282
[#468 'texture_cube_array']: r#282
[#468 'texture_depth_2d']: r#282
[#468 'texture_depth_2d_array']: r#282
[#468 'texture_depth_cube']: r#282
[#468 'texture_depth_cube_array']: r#282
[#468 'texture_depth_multisampled_2d']: r#282
[#468 'texture_multisampled_2d']: r#282
[#468 'texture_storage_1d']: r#282
[#468 'texture_storage_2d']: r#282
[#468 'texture_storage_2d_array']: r#282
[#468 'texture_storage_3d']: r#282
[#468 'u32']: r#282
[#468 'var']: r#282
[#468 'vec2']: r#282
[#468 'vec3']: r#282
[#468 'vec4']: r#282
[#468 'while']: r#282
[#468 '{']: r#282
[#468 '}']: r#282
[#469 '&']: r#283
[#469 '(']: r#283
[#469 '*']: r#283
[#469 ';']: r#283
[#469 '@']: r#283
[#469 '_']: r#283
[#469 'array']: r#283
[#469 'atomic']: r#283
[#469 'bool']: r#283
[#469 'break']: r#283
[#469 'const']: r#283
[#469 'continue']: r#283
[#469 'continuing']: r#283
[#469 'discard']: r#283
[#469 'f16']: r#283
[#469 'f32']: r#283
[#469 'for']: r#283
[#469 'i32']: r#283
[#469 'if']: r#283
[#469 'let']: r#283
[#469 'loop']: r#283
[#469 'mat2x2']: r#283
[#469 'mat2x3']: r#283
[#469 'mat2x4']: r#283
[#469 'mat3x2']: r#283
[#469 'mat3x3']: r#283
[#469 'mat3x4']: r#283
[#469 'mat4x2']: r#283
[#469 'mat4x3']: r#283
[#469 'mat4x4']: r#283
[#469 'ptr']: r#283
[#469 'return']: r#283
[#469 'sampler']: r#283
[#469 'sampler_comparison']: r#283
[#469 'static_assert']: r#283
[#469 'switch']: r#283
[#469 'texture_1d']: r#283
[#469 'texture_2d']: r#283
[#469 'texture_2d_array']: r#283
[#469 'texture_3d']: r#283
[#469 'texture_cube']: r#283
[#469 'texture_cube_array']: r#283
[#469 'texture_depth_2d']: r#283
[#469 'texture_depth_2d_array']: r#283
[#469 'texture_depth_cube']: r#283
[#469 'texture_depth_cube_array']: r#283
[#469 'texture_depth_multisampled_2d']: r#283
[#469 'texture_multisampled_2d']: r#283
[#469 'texture_storage_1d']: r#283
[#469 'texture_storage_2d']: r#283
[#469 'texture_storage_2d_array']: r#283
[#469 'texture_storage_3d']: r#283
[#469 'u32']: r#283
[#469 'var']: r#283
[#469 'vec2']: r#283
[#469 'vec3']: r#283
[#469 'vec4']: r#283
[#469 'while']: r#283
[#469 '{']: r#283
[#469 '}']: r#283
[#470 '&']: r#284
[#470 '(']: r#284
[#470 '*']: r#284
[#470 ';']: r#284
[#470 '@']: r#284
[#470 '_']: r#284
[#470 'array']: r#284
[#470 'atomic']: r#284
[#470 'bool']: r#284
[#470 'break']: r#284
[#470 'const']: r#284
[#470 'continue']: r#284
[#470 'continuing']: r#284
[#470 'discard']: r#284
[#470 'f16']: r#284
[#470 'f32']: r#284
[#470 'for']: r#284
[#470 'i32']: r#284
[#470 'if']: r#284
[#470 'let']: r#284
[#470 'loop']: r#284
[#470 'mat2x2']: r#284
[#470 'mat2x3']: r#284
[#470 'mat2x4']: r#284
[#470 'mat3x2']: r#284
[#470 'mat3x3']: r#284
[#470 'mat3x4']: r#284
[#470 'mat4x2']: r#284
[#470 'mat4x3']: r#284
[#470 'mat4x4']: r#284
[#470 'ptr']: r#284
[#470 'return']: r#284
[#470 'sampler']: r#284
[#470 'sampler_comparison']: r#284
[#470 'static_assert']: r#284
[#470 'switch']: r#284
[#470 'texture_1d']: r#284
[#470 'texture_2d']: r#284
[#470 'texture_2d_array']: r#284
[#470 'texture_3d']: r#284
[#470 'texture_cube']: r#284
[#470 'texture_cube_array']: r#284
[#470 'texture_depth_2d']: r#284
[#470 'texture_depth_2d_array']: r#284
[#470 'texture_depth_cube']: r#284
[#470 'texture_depth_cube_array']: r#284
[#470 'texture_depth_multisampled_2d']: r#284
[#470 'texture_multisampled_2d']: r#284
[#470 'texture_storage_1d']: r#284
[#470 'texture_storage_2d']: r#284
[#470 'texture_storage_2d_array']: r#284
[#470 'texture_storage_3d']: r#284
[#470 'u32']: r#284
[#470 'var']: r#284
[#470 'vec2']: r#284
[#470 'vec3']: r#284
[#470 'vec4']: r#284
[#470 'while']: r#284
[#470 '{']: r#284
[#470 '}']: r#284
[#471 '&']: r#285
[#471 '(']: r#285
[#471 '*']: r#285
[#471 ';']: r#285
[#471 '@']: r#285
[#471 '_']: r#285
[#471 'array']: r#285
[#471 'atomic']: r#285
[#471 'bool']: r#285
[#471 'break']: r#285
[#471 'const']: r#285
[#471 'continue']: r#285
[#471 'continuing']: r#285
[#471 'discard']: r#285
[#471 'f16']: r#285
[#471 'f32']: r#285
[#471 'for']: r#285
[#471 'i32']: r#285
[#471 'if']: r#285
[#471 'let']: r#285
[#471 'loop']: r#285
[#471 'mat2x2']: r#285
[#471 'mat2x3']: r#285
[#471 'mat2x4']: r#285
[#471 'mat3x2']: r#285
[#471 'mat3x3']: r#285
[#471 'mat3x4']: r#285
[#471 'mat4x2']: r#285
[#471 'mat4x3']: r#285
[#471 'mat4x4']: r#285
[#471 'ptr']: r#285
[#471 'return']: r#285
[#471 'sampler']: r#285
[#471 'sampler_comparison']: r#285
[#471 'static_assert']: r#285
[#471 'switch']: r#285
[#471 'texture_1d']: r#285
[#471 'texture_2d']: r#285
[#471 'texture_2d_array']: r#285
[#471 'texture_3d']: r#285
[#471 'texture_cube']: r#285
[#471 'texture_cube_array']: r#285
[#471 'texture_depth_2d']: r#285
[#471 'texture_depth_2d_array']: r#285
[#471 'texture_depth_cube']: r#285
[#471 'texture_depth_cube_array']: r#285
[#471 'texture_depth_multisampled_2d']: r#285
[#471 'texture_multisampled_2d']: r#285
[#471 'texture_storage_1d']: r#285
[#471 'texture_storage_2d']: r#285
[#471 'texture_storage_2d_array']: r#285
[#471 'texture_storage_3d']: r#285
[#471 'u32']: r#285
[#471 'var']: r#285
[#471 'vec2']: r#285
[#471 'vec3']: r#285
[#471 'vec4']: r#285
[#471 'while']: r#285
[#471 '{']: r#285
[#471 '}']: r#285
[#472 '&']: r#286
[#472 '(']: r#286
[#472 '*']: r#286
[#472 ';']: r#286
[#472 '@']: r#286
[#472 '_']: r#286
[#472 'array']: r#286
[#472 'atomic']: r#286
[#472 'bool']: r#286
[#472 'break']: r#286
[#472 'const']: r#286
[#472 'continue']: r#286
[#472 'continuing']: r#286
[#472 'discard']: r#286
[#472 'f16']: r#286
[#472 'f32']: r#286
[#472 'for']: r#286
[#472 'i32']: r#286
[#472 'if']: r#286
[#472 'let']: r#286
[#472 'loop']: r#286
[#472 'mat2x2']: r#286
[#472 'mat2x3']: r#286
[#472 'mat2x4']: r#286
[#472 'mat3x2']: r#286
[#472 'mat3x3']: r#286
[#472 'mat3x4']: r#286
[#472 'mat4x2']: r#286
[#472 'mat4x3']: r#286
[#472 'mat4x4']: r#286
[#472 'ptr']: r#286
[#472 'return']: r#286
[#472 'sampler']: r#286
[#472 'sampler_comparison']: r#286
[#472 'static_assert']: r#286
[#472 'switch']: r#286
[#472 'texture_1d']: r#286
[#472 'texture_2d']: r#286
[#472 'texture_2d_array']: r#286
[#472 'texture_3d']: r#286
[#472 'texture_cube']: r#286
[#472 'texture_cube_array']: r#286
[#472 'texture_depth_2d']: r#286
[#472 'texture_depth_2d_array']: r#286
[#472 'texture_depth_cube']: r#286
[#472 'texture_depth_cube_array']: r#286
[#472 'texture_depth_multisampled_2d']: r#286
[#472 'texture_multisampled_2d']: r#286
[#472 'texture_storage_1d']: r#286
[#472 'texture_storage_2d']: r#286
[#472 'texture_storage_2d_array']: r#286
[#472 'texture_storage_3d']: r#286
[#472 'u32']: r#286
[#472 'var']: r#286
[#472 'vec2']: r#286
[#472 'vec3']: r#286
[#472 'vec4']: r#286
[#472 'while']: r#286
[#472 '{']: r#286
[#472 '}']: r#286
[#473 '&']: r#287
[#473 '(']: r#287
[#473 '*']: r#287
[#473 ';']: r#287
[#473 '@']: r#287
[#473 '_']: r#287
[#473 'array']: r#287
[#473 'atomic']: r#287
[#473 'bool']: r#287
[#473 'break']: r#287
[#473 'const']: r#287
[#473 'continue']: r#287
[#473 'continuing']: r#287
[#473 'discard']: r#287
[#473 'f16']: r#287
[#473 'f32']: r#287
[#473 'for']: r#287
[#473 'i32']: r#287
[#473 'if']: r#287
[#473 'let']: r#287
[#473 'loop']: r#287
[#473 'mat2x2']: r#287
[#473 'mat2x3']: r#287
[#473 'mat2x4']: r#287
[#473 'mat3x2']: r#287
[#473 'mat3x3']: r#287
[#473 'mat3x4']: r#287
[#473 'mat4x2']: r#287
[#473 'mat4x3']: r#287
[#473 'mat4x4']: r#287
[#473 'ptr']: r#287
[#473 'return']: r#287
[#473 'sampler']: r#287
[#473 'sampler_comparison']: r#287
[#473 'static_assert']: r#287
[#473 'switch']: r#287
[#473 'texture_1d']: r#287
[#473 'texture_2d']: r#287
[#473 'texture_2d_array']: r#287
[#473 'texture_3d']: r#287
[#473 'texture_cube']: r#287
[#473 'texture_cube_array']: r#287
[#473 'texture_depth_2d']: r#287
[#473 'texture_depth_2d_array']: r#287
[#473 'texture_depth_cube']: r#287
[#473 'texture_depth_cube_array']: r#287
[#473 'texture_depth_multisampled_2d']: r#287
[#473 'texture_multisampled_2d']: r#287
[#473 'texture_storage_1d']: r#287
[#473 'texture_storage_2d']: r#287
[#473 'texture_storage_2d_array']: r#287
[#473 'texture_storage_3d']: r#287
[#473 'u32']: r#287
[#473 'var']: r#287
[#473 'vec2']: r#287
[#473 'vec3']: r#287
[#473 'vec4']: r#287
[#473 'while']: r#287
[#473 '{']: r#287
[#473 '}']: r#287
[#474 '&']: r#288
[#474 '(']: r#288
[#474 '*']: r#288
[#474 ';']: r#288
[#474 '@']: r#288
[#474 '_']: r#288
[#474 'array']: r#288
[#474 'atomic']: r#288
[#474 'bool']: r#288
[#474 'break']: r#288
[#474 'const']: r#288
[#474 'continue']: r#288
[#474 'continuing']: r#288
[#474 'discard']: r#288
[#474 'f16']: r#288
[#474 'f32']: r#288
[#474 'for']: r#288
[#474 'i32']: r#288
[#474 'if']: r#288
[#474 'let']: r#288
[#474 'loop']: r#288
[#474 'mat2x2']: r#288
[#474 'mat2x3']: r#288
[#474 'mat2x4']: r#288
[#474 'mat3x2']: r#288
[#474 'mat3x3']: r#288
[#474 'mat3x4']: r#288
[#474 'mat4x2']: r#288
[#474 'mat4x3']: r#288
[#474 'mat4x4']: r#288
[#474 'ptr']: r#288
[#474 'return']: r#288
[#474 'sampler']: r#288
[#474 'sampler_comparison']: r#288
[#474 'static_assert']: r#288
[#474 'switch']: r#288
[#474 'texture_1d']: r#288
[#474 'texture_2d']: r#288
[#474 'texture_2d_array']: r#288
[#474 'texture_3d']: r#288
[#474 'texture_cube']: r#288
[#474 'texture_cube_array']: r#288
[#474 'texture_depth_2d']: r#288
[#474 'texture_depth_2d_array']: r#288
[#474 'texture_depth_cube']: r#288
[#474 'texture_depth_cube_array']: r#288
[#474 'texture_depth_multisampled_2d']: r#288
[#474 'texture_multisampled_2d']: r#288
[#474 'texture_storage_1d']: r#288
[#474 'texture_storage_2d']: r#288
[#474 'texture_storage_2d_array']: r#288
[#474 'texture_storage_3d']: r#288
[#474 'u32']: r#288
[#474 'var']: r#288
[#474 'vec2']: r#288
[#474 'vec3']: r#288
[#474 'vec4']: r#288
[#474 'while']: r#288
[#474 '{']: r#288
[#474 '}']: r#288
[#475 '&']: r#289
[#475 '(']: r#289
[#475 '*']: r#289
[#475 ';']: r#289
[#475 '@']: r#289
[#475 '_']: r#289
[#475 'array']: r#289
[#475 'atomic']: r#289
[#475 'bool']: r#289
[#475 'break']: r#289
[#475 'const']: r#289
[#475 'continue']: r#289
[#475 'continuing']: r#289
[#475 'discard']: r#289
[#475 'f16']: r#289
[#475 'f32']: r#289
[#475 'for']: r#289
[#475 'i32']: r#289
[#475 'if']: r#289
[#475 'let']: r#289
[#475 'loop']: r#289
[#475 'mat2x2']: r#289
[#475 'mat2x3']: r#289
[#475 'mat2x4']: r#289
[#475 'mat3x2']: r#289
[#475 'mat3x3']: r#289
[#475 'mat3x4']: r#289
[#475 'mat4x2']: r#289
[#475 'mat4x3']: r#289
[#475 'mat4x4']: r#289
[#475 'ptr']: r#289
[#475 'return']: r#289
[#475 'sampler']: r#289
[#475 'sampler_comparison']: r#289
[#475 'static_assert']: r#289
[#475 'switch']: r#289
[#475 'texture_1d']: r#289
[#475 'texture_2d']: r#289
[#475 'texture_2d_array']: r#289
[#475 'texture_3d']: r#289
[#475 'texture_cube']: r#289
[#475 'texture_cube_array']: r#289
[#475 'texture_depth_2d']: r#289
[#475 'texture_depth_2d_array']: r#289
[#475 'texture_depth_cube']: r#289
[#475 'texture_depth_cube_array']: r#289
[#475 'texture_depth_multisampled_2d']: r#289
[#475 'texture_multisampled_2d']: r#289
[#475 'texture_storage_1d']: r#289
[#475 'texture_storage_2d']: r#289
[#475 'texture_storage_2d_array']: r#289
[#475 'texture_storage_3d']: r#289
[#475 'u32']: r#289
[#475 'var']: r#289
[#475 'vec2']: r#289
[#475 'vec3']: r#289
[#475 'vec4']: r#289
[#475 'while']: r#289
[#475 '{']: r#289
[#475 '}']: r#289
[#476 '}']: r#290
[#477 '&']: r#291
[#477 '(']: r#291
[#477 '*']: r#291
[#477 ';']: r#291
[#477 '@']: r#291
[#477 '_']: r#291
[#477 'array']: r#291
[#477 'atomic']: r#291
[#477 'bool']: r#291
[#477 'break']: r#291
[#477 'case']: r#291
[#477 'const']: r#291
[#477 'continue']: r#291
[#477 'continuing']: r#291
[#477 'default']: r#291
[#477 'discard']: r#291
[#477 'else']: r#291
[#477 'f16']: r#291
[#477 'f32']: r#291
[#477 'fn']: r#291
[#477 'for']: r#291
[#477 'i32']: r#291
[#477 'if']: r#291
[#477 'let']: r#291
[#477 'loop']: r#291
[#477 'mat2x2']: r#291
[#477 'mat2x3']: r#291
[#477 'mat2x4']: r#291
[#477 'mat3x2']: r#291
[#477 'mat3x3']: r#291
[#477 'mat3x4']: r#291
[#477 'mat4x2']: r#291
[#477 'mat4x3']: r#291
[#477 'mat4x4']: r#291
[#477 'override']: r#291
[#477 'ptr']: r#291
[#477 'return']: r#291
[#477 'sampler']: r#291
[#477 'sampler_comparison']: r#291
[#477 'static_assert']: r#291
[#477 'struct']: r#291
[#477 'switch']: r#291
[#477 'texture_1d']: r#291
[#477 'texture_2d']: r#291
[#477 'texture_2d_array']: r#291
[#477 'texture_3d']: r#291
[#477 'texture_cube']: r#291
[#477 'texture_cube_array']: r#291
[#477 'texture_depth_2d']: r#291
[#477 'texture_depth_2d_array']: r#291
[#477 'texture_depth_cube']: r#291
[#477 'texture_depth_cube_array']: r#291
[#477 'texture_depth_multisampled_2d']: r#291
[#477 'texture_multisampled_2d']: r#291
[#477 'texture_storage_1d']: r#291
[#477 'texture_storage_2d']: r#291
[#477 'texture_storage_2d_array']: r#291
[#477 'texture_storage_3d']: r#291
[#477 'type']: r#291
[#477 'u32']: r#291
[#477 'var']: r#291
[#477 'vec2']: r#291
[#477 'vec3']: r#291
[#477 'vec4']: r#291
[#477 'while']: r#291
[#477 '{']: r#291
[#477 '}']: r#291
[#477 EndOfText]: r#291
[#478 '&']: r#292
[#478 '(']: r#292
[#478 '*']: r#292
[#478 ';']: r#292
[#478 '@']: r#292
[#478 '_']: r#292
[#478 'array']: r#292
[#478 'atomic']: r#292
[#478 'bool']: r#292
[#478 'break']: r#292
[#478 'case']: r#292
[#478 'const']: r#292
[#478 'continue']: r#292
[#478 'continuing']: r#292
[#478 'default']: r#292
[#478 'discard']: r#292
[#478 'else']: r#292
[#478 'f16']: r#292
[#478 'f32']: r#292
[#478 'fn']: r#292
[#478 'for']: r#292
[#478 'i32']: r#292
[#478 'if']: r#292
[#478 'let']: r#292
[#478 'loop']: r#292
[#478 'mat2x2']: r#292
[#478 'mat2x3']: r#292
[#478 'mat2x4']: r#292
[#478 'mat3x2']: r#292
[#478 'mat3x3']: r#292
[#478 'mat3x4']: r#292
[#478 'mat4x2']: r#292
[#478 'mat4x3']: r#292
[#478 'mat4x4']: r#292
[#478 'override']: r#292
[#478 'ptr']: r#292
[#478 'return']: r#292
[#478 'sampler']: r#292
[#478 'sampler_comparison']: r#292
[#478 'static_assert']: r#292
[#478 'struct']: r#292
[#478 'switch']: r#292
[#478 'texture_1d']: r#292
[#478 'texture_2d']: r#292
[#478 'texture_2d_array']: r#292
[#478 'texture_3d']: r#292
[#478 'texture_cube']: r#292
[#478 'texture_cube_array']: r#292
[#478 'texture_depth_2d']: r#292
[#478 'texture_depth_2d_array']: r#292
[#478 'texture_depth_cube']: r#292
[#478 'texture_depth_cube_array']: r#292
[#478 'texture_depth_multisampled_2d']: r#292
[#478 'texture_multisampled_2d']: r#292
[#478 'texture_storage_1d']: r#292
[#478 'texture_storage_2d']: r#292
[#478 'texture_storage_2d_array']: r#292
[#478 'texture_storage_3d']: r#292
[#478 'type']: r#292
[#478 'u32']: r#292
[#478 'var']: r#292
[#478 'vec2']: r#292
[#478 'vec3']: r#292
[#478 'vec4']: r#292
[#478 'while']: r#292
[#478 '{']: r#292
[#478 '}']: r#292
[#478 EndOfText]: r#292
[#479 '(']: s#13
[#480 ')']: s#335
[#481 ')']: r#293
[#482 ',']: s#131
[#483 '>']: s#246
[#484 '>']: s#246
[#485 ',']: s#131
[#486 ',']: s#131
[#487 '>']: s#246
[#488 '>']: s#246
[#489 '>']: s#246
[#490 ',']: s#131
[#491 ',']: r#294
[#492 ',']: r#295
[#493 ',']: r#296
[#494 ',']: r#297
[#495 ',']: r#298
[#496 ',']: r#299
[#497 ',']: r#300
[#498 ',']: r#301
[#499 ',']: r#302
[#500 ',']: r#303
[#501 ',']: r#304
[#502 ',']: r#305
[#503 ',']: r#306
[#504 ',']: r#307
[#505 ',']: r#308
[#506 ',']: r#309
[#507 '.']: s#215
[#507 '[']: s#214
[#508 '!=']: r#310
[#508 '%']: r#310
[#508 '%=']: r#310
[#508 '&&']: r#310
[#508 '&']: r#310
[#508 '&=']: r#310
[#508 ')']: r#310
[#508 '*']: r#310
[#508 '*=']: r#310
[#508 '+']: r#310
[#508 '++']: r#310
[#508 '+=']: r#310
[#508 ',']: r#310
[#508 '-']: r#310
[#508 '--']: r#310
[#508 '-=']: r#310
[#508 '.']: r#310
[#508 '/']: r#310
[#508 '/=']: r#310
[#508 ':']: r#310
[#508 ';']: r#310
[#508 '<']: r#310
[#508 '<<']: r#310
[#508 '<<=']: r#310
[#508 '<=']: r#310
[#508 '=']: r#310
[#508 '==']: r#310
[#508 '>']: r#310
[#508 '>=']: r#310
[#508 '>>']: r#310
[#508 '>>=']: r#310
[#508 '[']: r#310
[#508 ']']: r#310
[#508 '^']: r#310
[#508 '^=']: r#310
[#508 '{']: r#310
[#508 '|']: r#310
[#508 '|=']: r#310
[#508 '||']: r#310
[#509 '!=']: r#311
[#509 '%']: r#311
[#509 '%=']: r#311
[#509 '&&']: r#311
[#509 '&']: r#311
[#509 '&=']: r#311
[#509 ')']: r#311
[#509 '*']: r#311
[#509 '*=']: r#311
[#509 '+']: r#311
[#509 '++']: r#311
[#509 '+=']: r#311
[#509 ',']: r#311
[#509 '-']: r#311
[#509 '--']: r#311
[#509 '-=']: r#311
[#509 '/']: r#311
[#509 '/=']: r#311
[#509 ':']: r#311
[#509 ';']: r#311
[#509 '<']: r#311
[#509 '<<']: r#311
[#509 '<<=']: r#311
[#509 '<=']: r#311
[#509 '=']: r#311
[#509 '==']: r#311
[#509 '>']: r#311
[#509 '>=']: r#311
[#509 '>>']: r#311
[#509 '>>=']: r#311
[#509 ']']: r#311
[#509 '^']: r#311
[#509 '^=']: r#311
[#509 '{']: r#311
[#509 '|']: r#311
[#509 '|=']: r#311
[#509 '||']: r#311
[#510 '!=']: r#312
[#510 '%']: r#312
[#510 '%=']: r#312
[#510 '&&']: r#312
[#510 '&']: r#312
[#510 '&=']: r#312
[#510 ')']: r#312
[#510 '*']: r#312
[#510 '*=']: r#312
[#510 '+']: r#312
[#510 '++']: r#312
[#510 '+=']: r#312
[#510 ',']: r#312
[#510 '-']: r#312
[#510 '--']: r#312
[#510 '-=']: r#312
[#510 '/']: r#312
[#510 '/=']: r#312
[#510 ':']: r#312
[#510 ';']: r#312
[#510 '<']: r#312
[#510 '<<']: r#312
[#510 '<<=']: r#312
[#510 '<=']: r#312
[#510 '=']: r#312
[#510 '==']: r#312
[#510 '>']: r#312
[#510 '>=']: r#312
[#510 '>>']: r#312
[#510 '>>=']: r#312
[#510 ']']: r#312
[#510 '^']: r#312
[#510 '^=']: r#312
[#510 '{']: r#312
[#510 '|']: r#312
[#510 '|=']: r#312
[#510 '||']: r#312
[#511 '!=']: r#313
[#511 '%']: r#313
[#511 '%=']: r#313
[#511 '&&']: r#313
[#511 '&']: r#313
[#511 '&=']: r#313
[#511 ')']: r#313
[#511 '*']: r#313
[#511 '*=']: r#313
[#511 '+']: r#313
[#511 '++']: r#313
[#511 '+=']: r#313
[#511 ',']: r#313
[#511 '-']: r#313
[#511 '--']: r#313
[#511 '-=']: r#313
[#511 '/']: r#313
[#511 '/=']: r#313
[#511 ':']: r#313
[#511 ';']: r#313
[#511 '<']: r#313
[#511 '<<']: r#313
[#511 '<<=']: r#313
[#511 '<=']: r#313
[#511 '=']: r#313
[#511 '==']: r#313
[#511 '>']: r#313
[#511 '>=']: r#313
[#511 '>>']: r#313
[#511 '>>=']: r#313
[#511 ']']: r#313
[#511 '^']: r#313
[#511 '^=']: r#313
[#511 '{']: r#313
[#511 '|']: r#313
[#511 '|=']: r#313
[#511 '||']: r#313
[#512 '!=']: r#314
[#512 '%']: r#314
[#512 '%=']: r#314
[#512 '&&']: r#314
[#512 '&']: r#314
[#512 '&=']: r#314
[#512 ')']: r#314
[#512 '*']: r#314
[#512 '*=']: r#314
[#512 '+']: r#314
[#512 '++']: r#314
[#512 '+=']: r#314
[#512 ',']: r#314
[#512 '-']: r#314
[#512 '--']: r#314
[#512 '-=']: r#314
[#512 '/']: r#314
[#512 '/=']: r#314
[#512 ':']: r#314
[#512 ';']: r#314
[#512 '<']: r#314
[#512 '<<']: r#314
[#512 '<<=']: r#314
[#512 '<=']: r#314
[#512 '=']: r#314
[#512 '==']: r#314
[#512 '>']: r#314
[#512 '>=']: r#314
[#512 '>>']: r#314
[#512 '>>=']: r#314
[#512 ']']: r#314
[#512 '^']: r#314
[#512 '^=']: r#314
[#512 '{']: r#314
[#512 '|']: r#314
[#512 '|=']: r#314
[#512 '||']: r#314
[#513 '@']: r#315
[#513 'array']: r#315
[#513 'atomic']: r#315
[#513 'bool']: r#315
[#513 'f16']: r#315
[#513 'f32']: r#315
[#513 'fn']: r#315
[#513 'i32']: r#315
[#513 'mat2x2']: r#315
[#513 'mat2x3']: r#315
[#513 'mat2x4']: r#315
[#513 'mat3x2']: r#315
[#513 'mat3x3']: r#315
[#513 'mat3x4']: r#315
[#513 'mat4x2']: r#315
[#513 'mat4x3']: r#315
[#513 'mat4x4']: r#315
[#513 'override']: r#315
[#513 'ptr']: r#315
[#513 'sampler']: r#315
[#513 'sampler_comparison']: r#315
[#513 'texture_1d']: r#315
[#513 'texture_2d']: r#315
[#513 'texture_2d_array']: r#315
[#513 'texture_3d']: r#315
[#513 'texture_cube']: r#315
[#513 'texture_cube_array']: r#315
[#513 'texture_depth_2d']: r#315
[#513 'texture_depth_2d_array']: r#315
[#513 'texture_depth_cube']: r#315
[#513 'texture_depth_cube_array']: r#315
[#513 'texture_depth_multisampled_2d']: r#315
[#513 'texture_multisampled_2d']: r#315
[#513 'texture_storage_1d']: r#315
[#513 'texture_storage_2d']: r#315
[#513 'texture_storage_2d_array']: r#315
[#513 'texture_storage_3d']: r#315
[#513 'u32']: r#315
[#513 'var']: r#315
[#513 'vec2']: r#315
[#513 'vec3']: r#315
[#513 'vec4']: r#315
[#514 '!']: s#77
[#514 '&']: s#80
[#514 '(']: s#13
[#514 ')']: r#243
[#514 '*']: s#79
[#514 '-']: s#76
[#514 '@']: s#38
[#514 'bitcast']: s#85
[#514 'false']: s#98
[#514 'true']: s#97
[#514 '~']: s#78
[#514 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#514 /0[fh]/]: s#102
[#514 /0[iu]?/]: s#99
[#514 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#514 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#514 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#514 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#514 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#514 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#514 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#514 /[1-9][0-9]*[fh]/]: s#103
[#514 /[1-9][0-9]*[iu]?/]: s#100
[#515 '@']: r#316
[#515 'array']: r#316
[#515 'atomic']: r#316
[#515 'bool']: r#316
[#515 'f16']: r#316
[#515 'f32']: r#316
[#515 'fn']: r#316
[#515 'i32']: r#316
[#515 'mat2x2']: r#316
[#515 'mat2x3']: r#316
[#515 'mat2x4']: r#316
[#515 'mat3x2']: r#316
[#515 'mat3x3']: r#316
[#515 'mat3x4']: r#316
[#515 'mat4x2']: r#316
[#515 'mat4x3']: r#316
[#515 'mat4x4']: r#316
[#515 'override']: r#316
[#515 'ptr']: r#316
[#515 'sampler']: r#316
[#515 'sampler_comparison']: r#316
[#515 'texture_1d']: r#316
[#515 'texture_2d']: r#316
[#515 'texture_2d_array']: r#316
[#515 'texture_3d']: r#316
[#515 'texture_cube']: r#316
[#515 'texture_cube_array']: r#316
[#515 'texture_depth_2d']: r#316
[#515 'texture_depth_2d_array']: r#316
[#515 'texture_depth_cube']: r#316
[#515 'texture_depth_cube_array']: r#316
[#515 'texture_depth_multisampled_2d']: r#316
[#515 'texture_multisampled_2d']: r#316
[#515 'texture_storage_1d']: r#316
[#515 'texture_storage_2d']: r#316
[#515 'texture_storage_2d_array']: r#316
[#515 'texture_storage_3d']: r#316
[#515 'u32']: r#316
[#515 'var']: r#316
[#515 'vec2']: r#316
[#515 'vec3']: r#316
[#515 'vec4']: r#316
[#516 '@']: r#317
[#516 'array']: r#317
[#516 'atomic']: r#317
[#516 'bool']: r#317
[#516 'f16']: r#317
[#516 'f32']: r#317
[#516 'fn']: r#317
[#516 'i32']: r#317
[#516 'mat2x2']: r#317
[#516 'mat2x3']: r#317
[#516 'mat2x4']: r#317
[#516 'mat3x2']: r#317
[#516 'mat3x3']: r#317
[#516 'mat3x4']: r#317
[#516 'mat4x2']: r#317
[#516 'mat4x3']: r#317
[#516 'mat4x4']: r#317
[#516 'override']: r#317
[#516 'ptr']: r#317
[#516 'sampler']: r#317
[#516 'sampler_comparison']: r#317
[#516 'texture_1d']: r#317
[#516 'texture_2d']: r#317
[#516 'texture_2d_array']: r#317
[#516 'texture_3d']: r#317
[#516 'texture_cube']: r#317
[#516 'texture_cube_array']: r#317
[#516 'texture_depth_2d']: r#317
[#516 'texture_depth_2d_array']: r#317
[#516 'texture_depth_cube']: r#317
[#516 'texture_depth_cube_array']: r#317
[#516 'texture_depth_multisampled_2d']: r#317
[#516 'texture_multisampled_2d']: r#317
[#516 'texture_storage_1d']: r#317
[#516 'texture_storage_2d']: r#317
[#516 'texture_storage_2d_array']: r#317
[#516 'texture_storage_3d']: r#317
[#516 'u32']: r#317
[#516 'var']: r#317
[#516 'vec2']: r#317
[#516 'vec3']: r#317
[#516 'vec4']: r#317
[#517 '@']: r#318
[#517 'array']: r#318
[#517 'atomic']: r#318
[#517 'bool']: r#318
[#517 'f16']: r#318
[#517 'f32']: r#318
[#517 'fn']: r#318
[#517 'i32']: r#318
[#517 'mat2x2']: r#318
[#517 'mat2x3']: r#318
[#517 'mat2x4']: r#318
[#517 'mat3x2']: r#318
[#517 'mat3x3']: r#318
[#517 'mat3x4']: r#318
[#517 'mat4x2']: r#318
[#517 'mat4x3']: r#318
[#517 'mat4x4']: r#318
[#517 'override']: r#318
[#517 'ptr']: r#318
[#517 'sampler']: r#318
[#517 'sampler_comparison']: r#318
[#517 'texture_1d']: r#318
[#517 'texture_2d']: r#318
[#517 'texture_2d_array']: r#318
[#517 'texture_3d']: r#318
[#517 'texture_cube']: r#318
[#517 'texture_cube_array']: r#318
[#517 'texture_depth_2d']: r#318
[#517 'texture_depth_2d_array']: r#318
[#517 'texture_depth_cube']: r#318
[#517 'texture_depth_cube_array']: r#318
[#517 'texture_depth_multisampled_2d']: r#318
[#517 'texture_multisampled_2d']: r#318
[#517 'texture_storage_1d']: r#318
[#517 'texture_storage_2d']: r#318
[#517 'texture_storage_2d_array']: r#318
[#517 'texture_storage_3d']: r#318
[#517 'u32']: r#318
[#517 'var']: r#318
[#517 'vec2']: r#318
[#517 'vec3']: r#318
[#517 'vec4']: r#318
[#518 ')']: r#243
[#518 'center']: s#525
[#518 'centroid']: s#526
[#518 'sample']: s#527
[#519 '@']: r#319
[#519 'array']: r#319
[#519 'atomic']: r#319
[#519 'bool']: r#319
[#519 'f16']: r#319
[#519 'f32']: r#319
[#519 'fn']: r#319
[#519 'i32']: r#319
[#519 'mat2x2']: r#319
[#519 'mat2x3']: r#319
[#519 'mat2x4']: r#319
[#519 'mat3x2']: r#319
[#519 'mat3x3']: r#319
[#519 'mat3x4']: r#319
[#519 'mat4x2']: r#319
[#519 'mat4x3']: r#319
[#519 'mat4x4']: r#319
[#519 'override']: r#319
[#519 'ptr']: r#319
[#519 'sampler']: r#319
[#519 'sampler_comparison']: r#319
[#519 'texture_1d']: r#319
[#519 'texture_2d']: r#319
[#519 'texture_2d_array']: r#319
[#519 'texture_3d']: r#319
[#519 'texture_cube']: r#319
[#519 'texture_cube_array']: r#319
[#519 'texture_depth_2d']: r#319
[#519 'texture_depth_2d_array']: r#319
[#519 'texture_depth_cube']: r#319
[#519 'texture_depth_cube_array']: r#319
[#519 'texture_depth_multisampled_2d']: r#319
[#519 'texture_multisampled_2d']: r#319
[#519 'texture_storage_1d']: r#319
[#519 'texture_storage_2d']: r#319
[#519 'texture_storage_2d_array']: r#319
[#519 'texture_storage_3d']: r#319
[#519 'u32']: r#319
[#519 'var']: r#319
[#519 'vec2']: r#319
[#519 'vec3']: r#319
[#519 'vec4']: r#319
[#520 '@']: r#320
[#520 'array']: r#320
[#520 'atomic']: r#320
[#520 'bool']: r#320
[#520 'f16']: r#320
[#520 'f32']: r#320
[#520 'fn']: r#320
[#520 'i32']: r#320
[#520 'mat2x2']: r#320
[#520 'mat2x3']: r#320
[#520 'mat2x4']: r#320
[#520 'mat3x2']: r#320
[#520 'mat3x3']: r#320
[#520 'mat3x4']: r#320
[#520 'mat4x2']: r#320
[#520 'mat4x3']: r#320
[#520 'mat4x4']: r#320
[#520 'override']: r#320
[#520 'ptr']: r#320
[#520 'sampler']: r#320
[#520 'sampler_comparison']: r#320
[#520 'texture_1d']: r#320
[#520 'texture_2d']: r#320
[#520 'texture_2d_array']: r#320
[#520 'texture_3d']: r#320
[#520 'texture_cube']: r#320
[#520 'texture_cube_array']: r#320
[#520 'texture_depth_2d']: r#320
[#520 'texture_depth_2d_array']: r#320
[#520 'texture_depth_cube']: r#320
[#520 'texture_depth_cube_array']: r#320
[#520 'texture_depth_multisampled_2d']: r#320
[#520 'texture_multisampled_2d']: r#320
[#520 'texture_storage_1d']: r#320
[#520 'texture_storage_2d']: r#320
[#520 'texture_storage_2d_array']: r#320
[#520 'texture_storage_3d']: r#320
[#520 'u32']: r#320
[#520 'var']: r#320
[#520 'vec2']: r#320
[#520 'vec3']: r#320
[#520 'vec4']: r#320
[#521 '@']: r#321
[#521 'array']: r#321
[#521 'atomic']: r#321
[#521 'bool']: r#321
[#521 'f16']: r#321
[#521 'f32']: r#321
[#521 'fn']: r#321
[#521 'i32']: r#321
[#521 'mat2x2']: r#321
[#521 'mat2x3']: r#321
[#521 'mat2x4']: r#321
[#521 'mat3x2']: r#321
[#521 'mat3x3']: r#321
[#521 'mat3x4']: r#321
[#521 'mat4x2']: r#321
[#521 'mat4x3']: r#321
[#521 'mat4x4']: r#321
[#521 'override']: r#321
[#521 'ptr']: r#321
[#521 'sampler']: r#321
[#521 'sampler_comparison']: r#321
[#521 'texture_1d']: r#321
[#521 'texture_2d']: r#321
[#521 'texture_2d_array']: r#321
[#521 'texture_3d']: r#321
[#521 'texture_cube']: r#321
[#521 'texture_cube_array']: r#321
[#521 'texture_depth_2d']: r#321
[#521 'texture_depth_2d_array']: r#321
[#521 'texture_depth_cube']: r#321
[#521 'texture_depth_cube_array']: r#321
[#521 'texture_depth_multisampled_2d']: r#321
[#521 'texture_multisampled_2d']: r#321
[#521 'texture_storage_1d']: r#321
[#521 'texture_storage_2d']: r#321
[#521 'texture_storage_2d_array']: r#321
[#521 'texture_storage_3d']: r#321
[#521 'u32']: r#321
[#521 'var']: r#321
[#521 'vec2']: r#321
[#521 'vec3']: r#321
[#521 'vec4']: r#321
[#522 '@']: r#322
[#522 'array']: r#322
[#522 'atomic']: r#322
[#522 'bool']: r#322
[#522 'f16']: r#322
[#522 'f32']: r#322
[#522 'fn']: r#322
[#522 'i32']: r#322
[#522 'mat2x2']: r#322
[#522 'mat2x3']: r#322
[#522 'mat2x4']: r#322
[#522 'mat3x2']: r#322
[#522 'mat3x3']: r#322
[#522 'mat3x4']: r#322
[#522 'mat4x2']: r#322
[#522 'mat4x3']: r#322
[#522 'mat4x4']: r#322
[#522 'override']: r#322
[#522 'ptr']: r#322
[#522 'sampler']: r#322
[#522 'sampler_comparison']: r#322
[#522 'texture_1d']: r#322
[#522 'texture_2d']: r#322
[#522 'texture_2d_array']: r#322
[#522 'texture_3d']: r#322
[#522 'texture_cube']: r#322
[#522 'texture_cube_array']: r#322
[#522 'texture_depth_2d']: r#322
[#522 'texture_depth_2d_array']: r#322
[#522 'texture_depth_cube']: r#322
[#522 'texture_depth_cube_array']: r#322
[#522 'texture_depth_multisampled_2d']: r#322
[#522 'texture_multisampled_2d']: r#322
[#522 'texture_storage_1d']: r#322
[#522 'texture_storage_2d']: r#322
[#522 'texture_storage_2d_array']: r#322
[#522 'texture_storage_3d']: r#322
[#522 'u32']: r#322
[#522 'var']: r#322
[#522 'vec2']: r#322
[#522 'vec3']: r#322
[#522 'vec4']: r#322
[#523 '@']: r#323
[#523 'array']: r#323
[#523 'atomic']: r#323
[#523 'bool']: r#323
[#523 'f16']: r#323
[#523 'f32']: r#323
[#523 'fn']: r#323
[#523 'i32']: r#323
[#523 'mat2x2']: r#323
[#523 'mat2x3']: r#323
[#523 'mat2x4']: r#323
[#523 'mat3x2']: r#323
[#523 'mat3x3']: r#323
[#523 'mat3x4']: r#323
[#523 'mat4x2']: r#323
[#523 'mat4x3']: r#323
[#523 'mat4x4']: r#323
[#523 'override']: r#323
[#523 'ptr']: r#323
[#523 'sampler']: r#323
[#523 'sampler_comparison']: r#323
[#523 'texture_1d']: r#323
[#523 'texture_2d']: r#323
[#523 'texture_2d_array']: r#323
[#523 'texture_3d']: r#323
[#523 'texture_cube']: r#323
[#523 'texture_cube_array']: r#323
[#523 'texture_depth_2d']: r#323
[#523 'texture_depth_2d_array']: r#323
[#523 'texture_depth_cube']: r#323
[#523 'texture_depth_cube_array']: r#323
[#523 'texture_depth_multisampled_2d']: r#323
[#523 'texture_multisampled_2d']: r#323
[#523 'texture_storage_1d']: r#323
[#523 'texture_storage_2d']: r#323
[#523 'texture_storage_2d_array']: r#323
[#523 'texture_storage_3d']: r#323
[#523 'u32']: r#323
[#523 'var']: r#323
[#523 'vec2']: r#323
[#523 'vec3']: r#323
[#523 'vec4']: r#323
[#524 ',']: s#131
[#525 ')']: r#324
[#525 ',']: r#324
[#526 ')']: r#325
[#526 ',']: r#325
[#527 ')']: r#326
[#527 ',']: r#326
[#528 ',']: s#131
[#529 '!=']: r#327
[#529 '%']: r#327
[#529 '%=']: r#327
[#529 '&&']: r#327
[#529 '&']: r#327
[#529 '&=']: r#327
[#529 ')']: r#327
[#529 '*']: r#327
[#529 '*=']: r#327
[#529 '+']: r#327
[#529 '++']: r#327
[#529 '+=']: r#327
[#529 ',']: r#327
[#529 '-']: r#327
[#529 '--']: r#327
[#529 '-=']: r#327
[#529 '/']: r#327
[#529 '/=']: r#327
[#529 ':']: r#327
[#529 ';']: r#327
[#529 '<']: r#327
[#529 '<<']: r#327
[#529 '<<=']: r#327
[#529 '<=']: r#327
[#529 '=']: r#327
[#529 '==']: r#327
[#529 '>']: r#327
[#529 '>=']: r#327
[#529 '>>']: r#327
[#529 '>>=']: r#327
[#529 ']']: r#327
[#529 '^']: r#327
[#529 '^=']: r#327
[#529 '{']: r#327
[#529 '|']: r#327
[#529 '|=']: r#327
[#529 '||']: r#327
[#530 '!=']: r#328
[#530 '%']: r#328
[#530 '%=']: r#328
[#530 '&&']: r#328
[#530 '&']: r#328
[#530 '&=']: r#328
[#530 ')']: r#328
[#530 '*']: r#328
[#530 '*=']: r#328
[#530 '+']: r#328
[#530 '++']: r#328
[#530 '+=']: r#328
[#530 ',']: r#328
[#530 '-']: r#328
[#530 '--']: r#328
[#530 '-=']: r#328
[#530 '/']: r#328
[#530 '/=']: r#328
[#530 ':']: r#328
[#530 ';']: r#328
[#530 '<']: r#328
[#530 '<<']: r#328
[#530 '<<=']: r#328
[#530 '<=']: r#328
[#530 '=']: r#328
[#530 '==']: r#328
[#530 '>']: r#328
[#530 '>=']: r#328
[#530 '>>']: r#328
[#530 '>>=']: r#328
[#530 ']']: r#328
[#530 '^']: r#328
[#530 '^=']: r#328
[#530 '{']: r#328
[#530 '|']: r#328
[#530 '|=']: r#328
[#530 '||']: r#328
[#531 'read']: s#583
[#531 'read_write']: s#585
[#531 'write']: s#584
[#532 '(']: r#329
[#532 ')']: r#329
[#532 ',']: r#329
[#532 ';']: r#329
[#532 '=']: r#329
[#532 '>']: r#329
[#532 '{']: r#329
[#532 '}']: r#329
[#533 '(']: r#330
[#533 ')']: r#330
[#533 ',']: r#330
[#533 ';']: r#330
[#533 '=']: r#330
[#533 '>']: r#330
[#533 '{']: r#330
[#533 '}']: r#330
[#534 '(']: r#331
[#534 ')']: r#331
[#534 ',']: r#331
[#534 ';']: r#331
[#534 '=']: r#331
[#534 '>']: r#331
[#534 '{']: r#331
[#534 '}']: r#331
[#535 'array']: s#333
[#535 'atomic']: s#168
[#535 'bool']: s#161
[#535 'f16']: s#183
[#535 'f32']: s#182
[#535 'i32']: s#184
[#535 'mat2x2']: s#173
[#535 'mat2x3']: s#174
[#535 'mat2x4']: s#175
[#535 'mat3x2']: s#176
[#535 'mat3x3']: s#177
[#535 'mat3x4']: s#178
[#535 'mat4x2']: s#179
[#535 'mat4x3']: s#180
[#535 'mat4x4']: s#181
[#535 'ptr']: s#186
[#535 'sampler']: s#192
[#535 'sampler_comparison']: s#193
[#535 'texture_1d']: s#199
[#535 'texture_2d']: s#200
[#535 'texture_2d_array']: s#201
[#535 'texture_3d']: s#202
[#535 'texture_cube']: s#203
[#535 'texture_cube_array']: s#204
[#535 'texture_depth_2d']: s#194
[#535 'texture_depth_2d_array']: s#195
[#535 'texture_depth_cube']: s#196
[#535 'texture_depth_cube_array']: s#197
[#535 'texture_depth_multisampled_2d']: s#198
[#535 'texture_multisampled_2d']: s#205
[#535 'texture_storage_1d']: s#206
[#535 'texture_storage_2d']: s#207
[#535 'texture_storage_2d_array']: s#208
[#535 'texture_storage_3d']: s#209
[#535 'u32']: s#185
[#535 'vec2']: s#170
[#535 'vec3']: s#171
[#535 'vec4']: s#172
[#535 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#536 '>']: s#246
[#537 '!']: s#77
[#537 '&']: s#80
[#537 '(']: s#13
[#537 '*']: s#79
[#537 '-']: s#76
[#537 '@']: s#38
[#537 'bitcast']: s#85
[#537 'false']: s#98
[#537 'true']: s#97
[#537 '~']: s#78
[#537 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#537 /0[fh]/]: s#102
[#537 /0[iu]?/]: s#99
[#537 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#537 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#537 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#537 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#537 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#537 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#537 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#537 /[1-9][0-9]*[fh]/]: s#103
[#537 /[1-9][0-9]*[iu]?/]: s#100
[#538 '(']: r#332
[#538 ')']: r#332
[#538 ',']: r#332
[#538 ';']: r#332
[#538 '=']: r#332
[#538 '>']: r#332
[#538 '{']: r#332
[#538 '}']: r#332
[#539 '(']: r#333
[#539 ')']: r#333
[#539 ',']: r#333
[#539 ';']: r#333
[#539 '=']: r#333
[#539 '>']: r#333
[#539 '{']: r#333
[#539 '}']: r#333
[#540 ',']: s#131
[#541 ')']: r#334
[#541 ',']: r#334
[#542 ',']: s#131
[#543 '!']: s#77
[#543 '&']: s#80
[#543 '(']: s#13
[#543 '*']: s#79
[#543 '-']: s#76
[#543 '@']: s#38
[#543 'bitcast']: s#85
[#543 'false']: s#98
[#543 'true']: s#97
[#543 '~']: s#78
[#543 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#543 /0[fh]/]: s#102
[#543 /0[iu]?/]: s#99
[#543 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#543 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#543 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#543 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#543 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#543 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#543 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#543 /[1-9][0-9]*[fh]/]: s#103
[#543 /[1-9][0-9]*[iu]?/]: s#100
[#544 '!=']: r#335
[#544 '%']: r#335
[#544 '&&']: r#335
[#544 '&']: r#335
[#544 ')']: r#335
[#544 '*']: r#335
[#544 '+']: r#335
[#544 ',']: r#335
[#544 '-']: r#335
[#544 '.']: r#335
[#544 '/']: r#335
[#544 ':']: r#335
[#544 ';']: r#335
[#544 '<']: r#335
[#544 '<<']: r#335
[#544 '<=']: r#335
[#544 '==']: r#335
[#544 '>']: r#335
[#544 '>=']: r#335
[#544 '>>']: r#335
[#544 '[']: r#335
[#544 ']']: r#335
[#544 '^']: r#335
[#544 '{']: r#335
[#544 '|']: r#335
[#544 '||']: r#335
[#545 '!=']: r#336
[#545 '%']: r#336
[#545 '&&']: r#336
[#545 '&']: r#336
[#545 ')']: r#336
[#545 '*']: r#336
[#545 '+']: r#336
[#545 ',']: r#336
[#545 '-']: r#336
[#545 '.']: r#336
[#545 '/']: r#336
[#545 ':']: r#336
[#545 ';']: r#336
[#545 '<']: r#336
[#545 '<<']: r#336
[#545 '<=']: r#336
[#545 '==']: r#336
[#545 '>']: r#336
[#545 '>=']: r#336
[#545 '>>']: r#336
[#545 '[']: r#336
[#545 ']']: r#336
[#545 '^']: r#336
[#545 '{']: r#336
[#545 '|']: r#336
[#545 '||']: r#336
[#546 '!']: s#77
[#546 '&']: s#80
[#546 '(']: s#13
[#546 '*']: s#79
[#546 '-']: s#76
[#546 '@']: s#38
[#546 'bitcast']: s#85
[#546 'false']: s#98
[#546 'true']: s#97
[#546 '~']: s#78
[#546 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#546 /0[fh]/]: s#102
[#546 /0[iu]?/]: s#99
[#546 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#546 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#546 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#546 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#546 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#546 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#546 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#546 /[1-9][0-9]*[fh]/]: s#103
[#546 /[1-9][0-9]*[iu]?/]: s#100
[#547 '&']: r#337
[#547 '(']: r#337
[#547 '*']: r#337
[#547 ';']: r#337
[#547 '@']: r#337
[#547 '_']: r#337
[#547 'array']: r#337
[#547 'atomic']: r#337
[#547 'bool']: r#337
[#547 'break']: r#337
[#547 'const']: r#337
[#547 'continue']: r#337
[#547 'continuing']: r#337
[#547 'discard']: r#337
[#547 'else']: r#337
[#547 'f16']: r#337
[#547 'f32']: r#337
[#547 'for']: r#337
[#547 'i32']: r#337
[#547 'if']: r#337
[#547 'let']: r#337
[#547 'loop']: r#337
[#547 'mat2x2']: r#337
[#547 'mat2x3']: r#337
[#547 'mat2x4']: r#337
[#547 'mat3x2']: r#337
[#547 'mat3x3']: r#337
[#547 'mat3x4']: r#337
[#547 'mat4x2']: r#337
[#547 'mat4x3']: r#337
[#547 'mat4x4']: r#337
[#547 'ptr']: r#337
[#547 'return']: r#337
[#547 'sampler']: r#337
[#547 'sampler_comparison']: r#337
[#547 'static_assert']: r#337
[#547 'switch']: r#337
[#547 'texture_1d']: r#337
[#547 'texture_2d']: r#337
[#547 'texture_2d_array']: r#337
[#547 'texture_3d']: r#337
[#547 'texture_cube']: r#337
[#547 'texture_cube_array']: r#337
[#547 'texture_depth_2d']: r#337
[#547 'texture_depth_2d_array']: r#337
[#547 'texture_depth_cube']: r#337
[#547 'texture_depth_cube_array']: r#337
[#547 'texture_depth_multisampled_2d']: r#337
[#547 'texture_multisampled_2d']: r#337
[#547 'texture_storage_1d']: r#337
[#547 'texture_storage_2d']: r#337
[#547 'texture_storage_2d_array']: r#337
[#547 'texture_storage_3d']: r#337
[#547 'u32']: r#337
[#547 'var']: r#337
[#547 'vec2']: r#337
[#547 'vec3']: r#337
[#547 'vec4']: r#337
[#547 'while']: r#337
[#547 '{']: r#337
[#547 '}']: r#337
[#548 '&']: r#338
[#548 '(']: r#338
[#548 '*']: r#338
[#548 ';']: r#338
[#548 '@']: r#338
[#548 '_']: r#338
[#548 'array']: r#338
[#548 'atomic']: r#338
[#548 'bool']: r#338
[#548 'break']: r#338
[#548 'const']: r#338
[#548 'continue']: r#338
[#548 'continuing']: r#338
[#548 'discard']: r#338
[#548 'f16']: r#338
[#548 'f32']: r#338
[#548 'for']: r#338
[#548 'i32']: r#338
[#548 'if']: r#338
[#548 'let']: r#338
[#548 'loop']: r#338
[#548 'mat2x2']: r#338
[#548 'mat2x3']: r#338
[#548 'mat2x4']: r#338
[#548 'mat3x2']: r#338
[#548 'mat3x3']: r#338
[#548 'mat3x4']: r#338
[#548 'mat4x2']: r#338
[#548 'mat4x3']: r#338
[#548 'mat4x4']: r#338
[#548 'ptr']: r#338
[#548 'return']: r#338
[#548 'sampler']: r#338
[#548 'sampler_comparison']: r#338
[#548 'static_assert']: r#338
[#548 'switch']: r#338
[#548 'texture_1d']: r#338
[#548 'texture_2d']: r#338
[#548 'texture_2d_array']: r#338
[#548 'texture_3d']: r#338
[#548 'texture_cube']: r#338
[#548 'texture_cube_array']: r#338
[#548 'texture_depth_2d']: r#338
[#548 'texture_depth_2d_array']: r#338
[#548 'texture_depth_cube']: r#338
[#548 'texture_depth_cube_array']: r#338
[#548 'texture_depth_multisampled_2d']: r#338
[#548 'texture_multisampled_2d']: r#338
[#548 'texture_storage_1d']: r#338
[#548 'texture_storage_2d']: r#338
[#548 'texture_storage_2d_array']: r#338
[#548 'texture_storage_3d']: r#338
[#548 'u32']: r#338
[#548 'var']: r#338
[#548 'vec2']: r#338
[#548 'vec3']: r#338
[#548 'vec4']: r#338
[#548 'while']: r#338
[#548 '{']: r#338
[#548 '}']: r#338
[#549 '&']: r#339
[#549 '(']: r#339
[#549 '*']: r#339
[#549 ';']: r#339
[#549 '@']: r#339
[#549 '_']: r#339
[#549 'array']: r#339
[#549 'atomic']: r#339
[#549 'bool']: r#339
[#549 'break']: r#339
[#549 'const']: r#339
[#549 'continue']: r#339
[#549 'continuing']: r#339
[#549 'discard']: r#339
[#549 'f16']: r#339
[#549 'f32']: r#339
[#549 'for']: r#339
[#549 'i32']: r#339
[#549 'if']: r#339
[#549 'let']: r#339
[#549 'loop']: r#339
[#549 'mat2x2']: r#339
[#549 'mat2x3']: r#339
[#549 'mat2x4']: r#339
[#549 'mat3x2']: r#339
[#549 'mat3x3']: r#339
[#549 'mat3x4']: r#339
[#549 'mat4x2']: r#339
[#549 'mat4x3']: r#339
[#549 'mat4x4']: r#339
[#549 'ptr']: r#339
[#549 'return']: r#339
[#549 'sampler']: r#339
[#549 'sampler_comparison']: r#339
[#549 'static_assert']: r#339
[#549 'switch']: r#339
[#549 'texture_1d']: r#339
[#549 'texture_2d']: r#339
[#549 'texture_2d_array']: r#339
[#549 'texture_3d']: r#339
[#549 'texture_cube']: r#339
[#549 'texture_cube_array']: r#339
[#549 'texture_depth_2d']: r#339
[#549 'texture_depth_2d_array']: r#339
[#549 'texture_depth_cube']: r#339
[#549 'texture_depth_cube_array']: r#339
[#549 'texture_depth_multisampled_2d']: r#339
[#549 'texture_multisampled_2d']: r#339
[#549 'texture_storage_1d']: r#339
[#549 'texture_storage_2d']: r#339
[#549 'texture_storage_2d_array']: r#339
[#549 'texture_storage_3d']: r#339
[#549 'u32']: r#339
[#549 'var']: r#339
[#549 'vec2']: r#339
[#549 'vec3']: r#339
[#549 'vec4']: r#339
[#549 'while']: r#339
[#549 '{']: r#339
[#549 '}']: r#339
[#550 '{']: s#147
[#551 'case']: s#611
[#551 'default']: s#612
[#552 'continuing']: s#605
[#553 'continuing']: r#340
[#553 '}']: r#340
[#554 '&']: s#80
[#554 '(']: s#13
[#554 '*']: s#79
[#554 ';']: s#25
[#554 '@']: s#38
[#554 '_']: s#377
[#554 'break']: s#364
[#554 'const']: s#363
[#554 'continue']: s#365
[#554 'discard']: s#350
[#554 'for']: s#358
[#554 'if']: s#369
[#554 'let']: s#362
[#554 'loop']: s#357
[#554 'return']: s#354
[#554 'static_assert']: s#32
[#554 'switch']: s#356
[#554 'var']: s#118
[#554 'while']: s#359
[#554 '{']: s#147
[#554 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#555 ')']: s#335
[#556 ';']: s#25
[#557 ';']: r#341
[#558 ';']: r#342
[#559 ';']: r#343
[#560 ';']: r#344
[#561 '&']: r#345
[#561 '(']: r#345
[#561 '*']: r#345
[#561 ';']: r#345
[#561 '@']: r#345
[#561 '_']: r#345
[#561 'array']: r#345
[#561 'atomic']: r#345
[#561 'bool']: r#345
[#561 'break']: r#345
[#561 'const']: r#345
[#561 'continue']: r#345
[#561 'continuing']: r#345
[#561 'discard']: r#345
[#561 'f16']: r#345
[#561 'f32']: r#345
[#561 'for']: r#345
[#561 'i32']: r#345
[#561 'if']: r#345
[#561 'let']: r#345
[#561 'loop']: r#345
[#561 'mat2x2']: r#345
[#561 'mat2x3']: r#345
[#561 'mat2x4']: r#345
[#561 'mat3x2']: r#345
[#561 'mat3x3']: r#345
[#561 'mat3x4']: r#345
[#561 'mat4x2']: r#345
[#561 'mat4x3']: r#345
[#561 'mat4x4']: r#345
[#561 'ptr']: r#345
[#561 'return']: r#345
[#561 'sampler']: r#345
[#561 'sampler_comparison']: r#345
[#561 'static_assert']: r#345
[#561 'switch']: r#345
[#561 'texture_1d']: r#345
[#561 'texture_2d']: r#345
[#561 'texture_2d_array']: r#345
[#561 'texture_3d']: r#345
[#561 'texture_cube']: r#345
[#561 'texture_cube_array']: r#345
[#561 'texture_depth_2d']: r#345
[#561 'texture_depth_2d_array']: r#345
[#561 'texture_depth_cube']: r#345
[#561 'texture_depth_cube_array']: r#345
[#561 'texture_depth_multisampled_2d']: r#345
[#561 'texture_multisampled_2d']: r#345
[#561 'texture_storage_1d']: r#345
[#561 'texture_storage_2d']: r#345
[#561 'texture_storage_2d_array']: r#345
[#561 'texture_storage_3d']: r#345
[#561 'u32']: r#345
[#561 'var']: r#345
[#561 'vec2']: r#345
[#561 'vec3']: r#345
[#561 'vec4']: r#345
[#561 'while']: r#345
[#561 '{']: r#345
[#561 '}']: r#345
[#562 ')']: r#346
[#562 ';']: r#346
[#563 ';']: r#347
[#564 '!']: s#77
[#564 '&']: s#80
[#564 '(']: s#13
[#564 '*']: s#79
[#564 '-']: s#76
[#564 '@']: s#38
[#564 'bitcast']: s#85
[#564 'false']: s#98
[#564 'true']: s#97
[#564 '~']: s#78
[#564 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#564 /0[fh]/]: s#102
[#564 /0[iu]?/]: s#99
[#564 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#564 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#564 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#564 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#564 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#564 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#564 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#564 /[1-9][0-9]*[fh]/]: s#103
[#564 /[1-9][0-9]*[iu]?/]: s#100
[#565 '!']: s#77
[#565 '&']: s#80
[#565 '(']: s#13
[#565 '*']: s#79
[#565 '-']: s#76
[#565 '@']: s#38
[#565 'bitcast']: s#85
[#565 'false']: s#98
[#565 'true']: s#97
[#565 '~']: s#78
[#565 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#565 /0[fh]/]: s#102
[#565 /0[iu]?/]: s#99
[#565 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#565 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#565 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#565 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#565 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#565 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#565 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#565 /[1-9][0-9]*[fh]/]: s#103
[#565 /[1-9][0-9]*[iu]?/]: s#100
[#566 '&']: r#348
[#566 '(']: r#348
[#566 '*']: r#348
[#566 ';']: r#348
[#566 '@']: r#348
[#566 '_']: r#348
[#566 'array']: r#348
[#566 'atomic']: r#348
[#566 'bool']: r#348
[#566 'break']: r#348
[#566 'const']: r#348
[#566 'continue']: r#348
[#566 'continuing']: r#348
[#566 'discard']: r#348
[#566 'else']: r#348
[#566 'f16']: r#348
[#566 'f32']: r#348
[#566 'for']: r#348
[#566 'i32']: r#348
[#566 'if']: r#348
[#566 'let']: r#348
[#566 'loop']: r#348
[#566 'mat2x2']: r#348
[#566 'mat2x3']: r#348
[#566 'mat2x4']: r#348
[#566 'mat3x2']: r#348
[#566 'mat3x3']: r#348
[#566 'mat3x4']: r#348
[#566 'mat4x2']: r#348
[#566 'mat4x3']: r#348
[#566 'mat4x4']: r#348
[#566 'ptr']: r#348
[#566 'return']: r#348
[#566 'sampler']: r#348
[#566 'sampler_comparison']: r#348
[#566 'static_assert']: r#348
[#566 'switch']: r#348
[#566 'texture_1d']: r#348
[#566 'texture_2d']: r#348
[#566 'texture_2d_array']: r#348
[#566 'texture_3d']: r#348
[#566 'texture_cube']: r#348
[#566 'texture_cube_array']: r#348
[#566 'texture_depth_2d']: r#348
[#566 'texture_depth_2d_array']: r#348
[#566 'texture_depth_cube']: r#348
[#566 'texture_depth_cube_array']: r#348
[#566 'texture_depth_multisampled_2d']: r#348
[#566 'texture_multisampled_2d']: r#348
[#566 'texture_storage_1d']: r#348
[#566 'texture_storage_2d']: r#348
[#566 'texture_storage_2d_array']: r#348
[#566 'texture_storage_3d']: r#348
[#566 'u32']: r#348
[#566 'var']: r#348
[#566 'vec2']: r#348
[#566 'vec3']: r#348
[#566 'vec4']: r#348
[#566 'while']: r#348
[#566 '{']: r#348
[#566 '}']: r#348
[#567 ')']: r#349
[#567 ';']: r#349
[#568 ')']: r#350
[#568 ';']: r#350
[#569 '%=']: r#351
[#569 '&=']: r#351
[#569 ')']: r#351
[#569 '*=']: r#351
[#569 '++']: r#351
[#569 '+=']: r#351
[#569 '--']: r#351
[#569 '-=']: r#351
[#569 '.']: r#351
[#569 '/=']: r#351
[#569 '<<=']: r#351
[#569 '=']: r#351
[#569 '>>=']: r#351
[#569 '[']: r#351
[#569 '^=']: r#351
[#569 '|=']: r#351
[#571 ':']: s#141
[#572 ',']: s#131
[#573 ')']: r#352
[#573 ',']: r#352
[#574 ',']: s#131
[#575 '@']: s#38
[#576 '->']: s#592
[#577 ',']: r#353
[#577 '}']: r#353
[#578 ',']: r#354
[#578 '}']: r#354
[#579 '}']: s#478
[#580 '}']: r#355
[#581 'array']: s#333
[#581 'atomic']: s#168
[#581 'bool']: s#161
[#581 'f16']: s#183
[#581 'f32']: s#182
[#581 'i32']: s#184
[#581 'mat2x2']: s#173
[#581 'mat2x3']: s#174
[#581 'mat2x4']: s#175
[#581 'mat3x2']: s#176
[#581 'mat3x3']: s#177
[#581 'mat3x4']: s#178
[#581 'mat4x2']: s#179
[#581 'mat4x3']: s#180
[#581 'mat4x4']: s#181
[#581 'ptr']: s#186
[#581 'sampler']: s#192
[#581 'sampler_comparison']: s#193
[#581 'texture_1d']: s#199
[#581 'texture_2d']: s#200
[#581 'texture_2d_array']: s#201
[#581 'texture_3d']: s#202
[#581 'texture_cube']: s#203
[#581 'texture_cube_array']: s#204
[#581 'texture_depth_2d']: s#194
[#581 'texture_depth_2d_array']: s#195
[#581 'texture_depth_cube']: s#196
[#581 'texture_depth_cube_array']: s#197
[#581 'texture_depth_multisampled_2d']: s#198
[#581 'texture_multisampled_2d']: s#205
[#581 'texture_storage_1d']: s#206
[#581 'texture_storage_2d']: s#207
[#581 'texture_storage_2d_array']: s#208
[#581 'texture_storage_3d']: s#209
[#581 'u32']: s#185
[#581 'vec2']: s#170
[#581 'vec3']: s#171
[#581 'vec4']: s#172
[#581 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#582 '>']: r#356
[#583 '>']: r#357
[#584 '>']: r#358
[#585 '>']: r#359
[#586 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: r#360
[#587 ';']: r#361
[#587 '@']: r#361
[#587 'array']: r#361
[#587 'atomic']: r#361
[#587 'bool']: r#361
[#587 'f16']: r#361
[#587 'f32']: r#361
[#587 'fn']: r#361
[#587 'i32']: r#361
[#587 'mat2x2']: r#361
[#587 'mat2x3']: r#361
[#587 'mat2x4']: r#361
[#587 'mat3x2']: r#361
[#587 'mat3x3']: r#361
[#587 'mat3x4']: r#361
[#587 'mat4x2']: r#361
[#587 'mat4x3']: r#361
[#587 'mat4x4']: r#361
[#587 'override']: r#361
[#587 'ptr']: r#361
[#587 'sampler']: r#361
[#587 'sampler_comparison']: r#361
[#587 'texture_1d']: r#361
[#587 'texture_2d']: r#361
[#587 'texture_2d_array']: r#361
[#587 'texture_3d']: r#361
[#587 'texture_cube']: r#361
[#587 'texture_cube_array']: r#361
[#587 'texture_depth_2d']: r#361
[#587 'texture_depth_2d_array']: r#361
[#587 'texture_depth_cube']: r#361
[#587 'texture_depth_cube_array']: r#361
[#587 'texture_depth_multisampled_2d']: r#361
[#587 'texture_multisampled_2d']: r#361
[#587 'texture_storage_1d']: r#361
[#587 'texture_storage_2d']: r#361
[#587 'texture_storage_2d_array']: r#361
[#587 'texture_storage_3d']: r#361
[#587 'u32']: r#361
[#587 'var']: r#361
[#587 'vec2']: r#361
[#587 'vec3']: r#361
[#587 'vec4']: r#361
[#588 ',']: r#362
[#588 '}']: r#362
[#589 ';']: r#363
[#589 '@']: r#363
[#589 'const']: r#363
[#589 'fn']: r#363
[#589 'override']: r#363
[#589 'static_assert']: r#363
[#589 'struct']: r#363
[#589 'type']: r#363
[#589 'var']: r#363
[#589 EndOfText]: r#363
[#590 '{']: r#364
[#591 '@']: s#38
[#592 '@']: r#365
[#592 'array']: r#365
[#592 'atomic']: r#365
[#592 'bool']: r#365
[#592 'f16']: r#365
[#592 'f32']: r#365
[#592 'i32']: r#365
[#592 'mat2x2']: r#365
[#592 'mat2x3']: r#365
[#592 'mat2x4']: r#365
[#592 'mat3x2']: r#365
[#592 'mat3x3']: r#365
[#592 'mat3x4']: r#365
[#592 'mat4x2']: r#365
[#592 'mat4x3']: r#365
[#592 'mat4x4']: r#365
[#592 'ptr']: r#365
[#592 'sampler']: r#365
[#592 'sampler_comparison']: r#365
[#592 'texture_1d']: r#365
[#592 'texture_2d']: r#365
[#592 'texture_2d_array']: r#365
[#592 'texture_3d']: r#365
[#592 'texture_cube']: r#365
[#592 'texture_cube_array']: r#365
[#592 'texture_depth_2d']: r#365
[#592 'texture_depth_2d_array']: r#365
[#592 'texture_depth_cube']: r#365
[#592 'texture_depth_cube_array']: r#365
[#592 'texture_depth_multisampled_2d']: r#365
[#592 'texture_multisampled_2d']: r#365
[#592 'texture_storage_1d']: r#365
[#592 'texture_storage_2d']: r#365
[#592 'texture_storage_2d_array']: r#365
[#592 'texture_storage_3d']: r#365
[#592 'u32']: r#365
[#592 'vec2']: r#365
[#592 'vec3']: r#365
[#592 'vec4']: r#365
[#593 ')']: r#366
[#593 ',']: r#366
[#594 ')']: r#367
[#594 ',']: r#367
[#595 ')']: r#368
[#596 ')']: r#369
[#597 'array']: s#333
[#597 'atomic']: s#168
[#597 'bool']: s#161
[#597 'f16']: s#183
[#597 'f32']: s#182
[#597 'i32']: s#184
[#597 'mat2x2']: s#173
[#597 'mat2x3']: s#174
[#597 'mat2x4']: s#175
[#597 'mat3x2']: s#176
[#597 'mat3x3']: s#177
[#597 'mat3x4']: s#178
[#597 'mat4x2']: s#179
[#597 'mat4x3']: s#180
[#597 'mat4x4']: s#181
[#597 'ptr']: s#186
[#597 'sampler']: s#192
[#597 'sampler_comparison']: s#193
[#597 'texture_1d']: s#199
[#597 'texture_2d']: s#200
[#597 'texture_2d_array']: s#201
[#597 'texture_3d']: s#202
[#597 'texture_cube']: s#203
[#597 'texture_cube_array']: s#204
[#597 'texture_depth_2d']: s#194
[#597 'texture_depth_2d_array']: s#195
[#597 'texture_depth_cube']: s#196
[#597 'texture_depth_cube_array']: s#197
[#597 'texture_depth_multisampled_2d']: s#198
[#597 'texture_multisampled_2d']: s#205
[#597 'texture_storage_1d']: s#206
[#597 'texture_storage_2d']: s#207
[#597 'texture_storage_2d_array']: s#208
[#597 'texture_storage_3d']: s#209
[#597 'u32']: s#185
[#597 'vec2']: s#170
[#597 'vec3']: s#171
[#597 'vec4']: s#172
[#597 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#598 ';']: r#370
[#599 ';']: r#371
[#600 '!']: s#77
[#600 '&']: s#80
[#600 '(']: s#13
[#600 '*']: s#79
[#600 '-']: s#76
[#600 '@']: s#38
[#600 'bitcast']: s#85
[#600 'false']: s#98
[#600 'true']: s#97
[#600 '~']: s#78
[#600 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#600 /0[fh]/]: s#102
[#600 /0[iu]?/]: s#99
[#600 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#600 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#600 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#600 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#600 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#600 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#600 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#600 /[1-9][0-9]*[fh]/]: s#103
[#600 /[1-9][0-9]*[iu]?/]: s#100
[#601 '{']: s#147
[#602 'continuing']: r#372
[#602 '}']: r#372
[#603 '}']: s#478
[#604 '}']: r#373
[#605 '{']: s#147
[#606 '}']: s#478
[#607 '}']: r#374
[#608 'case']: s#611
[#608 'default']: s#612
[#609 'case']: r#375
[#609 'default']: r#375
[#609 '}']: r#375
[#610 'case']: r#376
[#610 'default']: r#376
[#610 '}']: r#376
[#611 '!']: s#77
[#611 '&']: s#80
[#611 '(']: s#13
[#611 '*']: s#79
[#611 '-']: s#76
[#611 '@']: s#38
[#611 'bitcast']: s#85
[#611 'default']: s#638
[#611 'false']: s#98
[#611 'true']: s#97
[#611 '~']: s#78
[#611 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#611 /0[fh]/]: s#102
[#611 /0[iu]?/]: s#99
[#611 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#611 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#611 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#611 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#611 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#611 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#611 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#611 /[1-9][0-9]*[fh]/]: s#103
[#611 /[1-9][0-9]*[iu]?/]: s#100
[#612 ':']: s#141
[#613 '&']: r#377
[#613 '(']: r#377
[#613 '*']: r#377
[#613 ';']: r#377
[#613 '@']: r#377
[#613 '_']: r#377
[#613 'array']: r#377
[#613 'atomic']: r#377
[#613 'bool']: r#377
[#613 'break']: r#377
[#613 'const']: r#377
[#613 'continue']: r#377
[#613 'continuing']: r#377
[#613 'discard']: r#377
[#613 'f16']: r#377
[#613 'f32']: r#377
[#613 'for']: r#377
[#613 'i32']: r#377
[#613 'if']: r#377
[#613 'let']: r#377
[#613 'loop']: r#377
[#613 'mat2x2']: r#377
[#613 'mat2x3']: r#377
[#613 'mat2x4']: r#377
[#613 'mat3x2']: r#377
[#613 'mat3x3']: r#377
[#613 'mat3x4']: r#377
[#613 'mat4x2']: r#377
[#613 'mat4x3']: r#377
[#613 'mat4x4']: r#377
[#613 'ptr']: r#377
[#613 'return']: r#377
[#613 'sampler']: r#377
[#613 'sampler_comparison']: r#377
[#613 'static_assert']: r#377
[#613 'switch']: r#377
[#613 'texture_1d']: r#377
[#613 'texture_2d']: r#377
[#613 'texture_2d_array']: r#377
[#613 'texture_3d']: r#377
[#613 'texture_cube']: r#377
[#613 'texture_cube_array']: r#377
[#613 'texture_depth_2d']: r#377
[#613 'texture_depth_2d_array']: r#377
[#613 'texture_depth_cube']: r#377
[#613 'texture_depth_cube_array']: r#377
[#613 'texture_depth_multisampled_2d']: r#377
[#613 'texture_multisampled_2d']: r#377
[#613 'texture_storage_1d']: r#377
[#613 'texture_storage_2d']: r#377
[#613 'texture_storage_2d_array']: r#377
[#613 'texture_storage_3d']: r#377
[#613 'u32']: r#377
[#613 'var']: r#377
[#613 'vec2']: r#377
[#613 'vec3']: r#377
[#613 'vec4']: r#377
[#613 'while']: r#377
[#613 '{']: r#377
[#613 '}']: r#377
[#614 '{']: s#147
[#615 ')']: r#378
[#615 ',']: r#378
[#616 ')']: r#379
[#616 ',']: r#379
[#617 ')']: r#380
[#618 ')']: r#381
[#619 '>']: r#382
[#620 '+']: s#234
[#620 '-']: s#76
[#620 '>']: r#383
[#621 '>']: r#384
[#622 '%']: r#34
[#622 '&']: r#31
[#622 '*']: r#34
[#622 '+']: r#34
[#622 '-']: r#34
[#622 '/']: r#34
[#622 '>']: r#34
[#622 '^']: r#33
[#622 '|']: r#32
[#623 '(']: r#385
[#623 ')']: r#385
[#623 ',']: r#385
[#623 ';']: r#385
[#623 '=']: r#385
[#623 '>']: r#385
[#623 '{']: r#385
[#623 '}']: r#385
[#624 ',']: s#131
[#625 '>']: s#246
[#626 '@']: r#386
[#626 'array']: r#386
[#626 'atomic']: r#386
[#626 'bool']: r#386
[#626 'f16']: r#386
[#626 'f32']: r#386
[#626 'fn']: r#386
[#626 'i32']: r#386
[#626 'mat2x2']: r#386
[#626 'mat2x3']: r#386
[#626 'mat2x4']: r#386
[#626 'mat3x2']: r#386
[#626 'mat3x3']: r#386
[#626 'mat3x4']: r#386
[#626 'mat4x2']: r#386
[#626 'mat4x3']: r#386
[#626 'mat4x4']: r#386
[#626 'override']: r#386
[#626 'ptr']: r#386
[#626 'sampler']: r#386
[#626 'sampler_comparison']: r#386
[#626 'texture_1d']: r#386
[#626 'texture_2d']: r#386
[#626 'texture_2d_array']: r#386
[#626 'texture_3d']: r#386
[#626 'texture_cube']: r#386
[#626 'texture_cube_array']: r#386
[#626 'texture_depth_2d']: r#386
[#626 'texture_depth_2d_array']: r#386
[#626 'texture_depth_cube']: r#386
[#626 'texture_depth_cube_array']: r#386
[#626 'texture_depth_multisampled_2d']: r#386
[#626 'texture_multisampled_2d']: r#386
[#626 'texture_storage_1d']: r#386
[#626 'texture_storage_2d']: r#386
[#626 'texture_storage_2d_array']: r#386
[#626 'texture_storage_3d']: r#386
[#626 'u32']: r#386
[#626 'var']: r#386
[#626 'vec2']: r#386
[#626 'vec3']: r#386
[#626 'vec4']: r#386
[#627 '!']: s#77
[#627 '&']: s#80
[#627 '(']: s#13
[#627 ')']: r#243
[#627 '*']: s#79
[#627 '-']: s#76
[#627 '@']: s#38
[#627 'bitcast']: s#85
[#627 'false']: s#98
[#627 'true']: s#97
[#627 '~']: s#78
[#627 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#627 /0[fh]/]: s#102
[#627 /0[iu]?/]: s#99
[#627 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#627 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#627 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#627 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#627 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#627 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#627 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#627 /[1-9][0-9]*[fh]/]: s#103
[#627 /[1-9][0-9]*[iu]?/]: s#100
[#628 '@']: r#387
[#628 'array']: r#387
[#628 'atomic']: r#387
[#628 'bool']: r#387
[#628 'f16']: r#387
[#628 'f32']: r#387
[#628 'fn']: r#387
[#628 'i32']: r#387
[#628 'mat2x2']: r#387
[#628 'mat2x3']: r#387
[#628 'mat2x4']: r#387
[#628 'mat3x2']: r#387
[#628 'mat3x3']: r#387
[#628 'mat3x4']: r#387
[#628 'mat4x2']: r#387
[#628 'mat4x3']: r#387
[#628 'mat4x4']: r#387
[#628 'override']: r#387
[#628 'ptr']: r#387
[#628 'sampler']: r#387
[#628 'sampler_comparison']: r#387
[#628 'texture_1d']: r#387
[#628 'texture_2d']: r#387
[#628 'texture_2d_array']: r#387
[#628 'texture_3d']: r#387
[#628 'texture_cube']: r#387
[#628 'texture_cube_array']: r#387
[#628 'texture_depth_2d']: r#387
[#628 'texture_depth_2d_array']: r#387
[#628 'texture_depth_cube']: r#387
[#628 'texture_depth_cube_array']: r#387
[#628 'texture_depth_multisampled_2d']: r#387
[#628 'texture_multisampled_2d']: r#387
[#628 'texture_storage_1d']: r#387
[#628 'texture_storage_2d']: r#387
[#628 'texture_storage_2d_array']: r#387
[#628 'texture_storage_3d']: r#387
[#628 'u32']: r#387
[#628 'var']: r#387
[#628 'vec2']: r#387
[#628 'vec3']: r#387
[#628 'vec4']: r#387
[#629 ',']: s#131
[#630 '(']: r#388
[#630 ')']: r#388
[#630 ',']: r#388
[#630 ';']: r#388
[#630 '=']: r#388
[#630 '>']: r#388
[#630 '{']: r#388
[#630 '}']: r#388
[#631 '>']: s#246
[#632 'read']: s#583
[#632 'read_write']: s#585
[#632 'write']: s#584
[#633 '&']: r#389
[#633 '(']: r#389
[#633 '*']: r#389
[#633 ';']: r#389
[#633 '@']: r#389
[#633 '_']: r#389
[#633 'array']: r#389
[#633 'atomic']: r#389
[#633 'bool']: r#389
[#633 'break']: r#389
[#633 'const']: r#389
[#633 'continue']: r#389
[#633 'continuing']: r#389
[#633 'discard']: r#389
[#633 'else']: r#389
[#633 'f16']: r#389
[#633 'f32']: r#389
[#633 'for']: r#389
[#633 'i32']: r#389
[#633 'if']: r#389
[#633 'let']: r#389
[#633 'loop']: r#389
[#633 'mat2x2']: r#389
[#633 'mat2x3']: r#389
[#633 'mat2x4']: r#389
[#633 'mat3x2']: r#389
[#633 'mat3x3']: r#389
[#633 'mat3x4']: r#389
[#633 'mat4x2']: r#389
[#633 'mat4x3']: r#389
[#633 'mat4x4']: r#389
[#633 'ptr']: r#389
[#633 'return']: r#389
[#633 'sampler']: r#389
[#633 'sampler_comparison']: r#389
[#633 'static_assert']: r#389
[#633 'switch']: r#389
[#633 'texture_1d']: r#389
[#633 'texture_2d']: r#389
[#633 'texture_2d_array']: r#389
[#633 'texture_3d']: r#389
[#633 'texture_cube']: r#389
[#633 'texture_cube_array']: r#389
[#633 'texture_depth_2d']: r#389
[#633 'texture_depth_2d_array']: r#389
[#633 'texture_depth_cube']: r#389
[#633 'texture_depth_cube_array']: r#389
[#633 'texture_depth_multisampled_2d']: r#389
[#633 'texture_multisampled_2d']: r#389
[#633 'texture_storage_1d']: r#389
[#633 'texture_storage_2d']: r#389
[#633 'texture_storage_2d_array']: r#389
[#633 'texture_storage_3d']: r#389
[#633 'u32']: r#389
[#633 'var']: r#389
[#633 'vec2']: r#389
[#633 'vec3']: r#389
[#633 'vec4']: r#389
[#633 'while']: r#389
[#633 '{']: r#389
[#633 '}']: r#389
[#634 '{']: s#147
[#635 '{']: r#390
[#636 ':']: s#141
[#637 ',']: s#131
[#638 ',']: r#391
[#638 ':']: r#391
[#638 '{']: r#391
[#639 ',']: r#392
[#639 ':']: r#392
[#639 '{']: r#392
[#640 '}']: r#393
[#641 '&']: r#394
[#641 '(']: r#394
[#641 '*']: r#394
[#641 ';']: r#394
[#641 '@']: r#394
[#641 '_']: r#394
[#641 'array']: r#394
[#641 'atomic']: r#394
[#641 'bool']: r#394
[#641 'break']: r#394
[#641 'const']: r#394
[#641 'continue']: r#394
[#641 'continuing']: r#394
[#641 'discard']: r#394
[#641 'f16']: r#394
[#641 'f32']: r#394
[#641 'for']: r#394
[#641 'i32']: r#394
[#641 'if']: r#394
[#641 'let']: r#394
[#641 'loop']: r#394
[#641 'mat2x2']: r#394
[#641 'mat2x3']: r#394
[#641 'mat2x4']: r#394
[#641 'mat3x2']: r#394
[#641 'mat3x3']: r#394
[#641 'mat3x4']: r#394
[#641 'mat4x2']: r#394
[#641 'mat4x3']: r#394
[#641 'mat4x4']: r#394
[#641 'ptr']: r#394
[#641 'return']: r#394
[#641 'sampler']: r#394
[#641 'sampler_comparison']: r#394
[#641 'static_assert']: r#394
[#641 'switch']: r#394
[#641 'texture_1d']: r#394
[#641 'texture_2d']: r#394
[#641 'texture_2d_array']: r#394
[#641 'texture_3d']: r#394
[#641 'texture_cube']: r#394
[#641 'texture_cube_array']: r#394
[#641 'texture_depth_2d']: r#394
[#641 'texture_depth_2d_array']: r#394
[#641 'texture_depth_cube']: r#394
[#641 'texture_depth_cube_array']: r#394
[#641 'texture_depth_multisampled_2d']: r#394
[#641 'texture_multisampled_2d']: r#394
[#641 'texture_storage_1d']: r#394
[#641 'texture_storage_2d']: r#394
[#641 'texture_storage_2d_array']: r#394
[#641 'texture_storage_3d']: r#394
[#641 'u32']: r#394
[#641 'var']: r#394
[#641 'vec2']: r#394
[#641 'vec3']: r#394
[#641 'vec4']: r#394
[#641 'while']: r#394
[#641 '{']: r#394
[#641 '}']: r#394
[#642 '}']: r#395
[#643 '&']: s#80
[#643 '(']: s#13
[#643 '*']: s#79
[#643 ';']: s#25
[#643 '@']: s#38
[#643 '_']: s#377
[#643 'break']: s#364
[#643 'const']: s#363
[#643 'continue']: s#365
[#643 'discard']: s#350
[#643 'for']: s#358
[#643 'if']: s#369
[#643 'let']: s#362
[#643 'loop']: s#357
[#643 'return']: s#354
[#643 'static_assert']: s#32
[#643 'switch']: s#356
[#643 'var']: s#118
[#643 'while']: s#359
[#643 '{']: s#147
[#643 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#644 '&']: r#396
[#644 '(']: r#396
[#644 '*']: r#396
[#644 ';']: r#396
[#644 '@']: r#396
[#644 '_']: r#396
[#644 'array']: r#396
[#644 'atomic']: r#396
[#644 'bool']: r#396
[#644 'break']: r#396
[#644 'const']: r#396
[#644 'continue']: r#396
[#644 'continuing']: r#396
[#644 'discard']: r#396
[#644 'f16']: r#396
[#644 'f32']: r#396
[#644 'for']: r#396
[#644 'i32']: r#396
[#644 'if']: r#396
[#644 'let']: r#396
[#644 'loop']: r#396
[#644 'mat2x2']: r#396
[#644 'mat2x3']: r#396
[#644 'mat2x4']: r#396
[#644 'mat3x2']: r#396
[#644 'mat3x3']: r#396
[#644 'mat3x4']: r#396
[#644 'mat4x2']: r#396
[#644 'mat4x3']: r#396
[#644 'mat4x4']: r#396
[#644 'ptr']: r#396
[#644 'return']: r#396
[#644 'sampler']: r#396
[#644 'sampler_comparison']: r#396
[#644 'static_assert']: r#396
[#644 'switch']: r#396
[#644 'texture_1d']: r#396
[#644 'texture_2d']: r#396
[#644 'texture_2d_array']: r#396
[#644 'texture_3d']: r#396
[#644 'texture_cube']: r#396
[#644 'texture_cube_array']: r#396
[#644 'texture_depth_2d']: r#396
[#644 'texture_depth_2d_array']: r#396
[#644 'texture_depth_cube']: r#396
[#644 'texture_depth_cube_array']: r#396
[#644 'texture_depth_multisampled_2d']: r#396
[#644 'texture_multisampled_2d']: r#396
[#644 'texture_storage_1d']: r#396
[#644 'texture_storage_2d']: r#396
[#644 'texture_storage_2d_array']: r#396
[#644 'texture_storage_3d']: r#396
[#644 'u32']: r#396
[#644 'var']: r#396
[#644 'vec2']: r#396
[#644 'vec3']: r#396
[#644 'vec4']: r#396
[#644 'while']: r#396
[#644 '{']: r#396
[#644 '}']: r#396
[#645 '&']: r#397
[#645 '(']: r#397
[#645 '*']: r#397
[#645 ';']: r#397
[#645 '@']: r#397
[#645 '_']: r#397
[#645 'array']: r#397
[#645 'atomic']: r#397
[#645 'bool']: r#397
[#645 'break']: r#397
[#645 'const']: r#397
[#645 'continue']: r#397
[#645 'continuing']: r#397
[#645 'discard']: r#397
[#645 'f16']: r#397
[#645 'f32']: r#397
[#645 'for']: r#397
[#645 'i32']: r#397
[#645 'if']: r#397
[#645 'let']: r#397
[#645 'loop']: r#397
[#645 'mat2x2']: r#397
[#645 'mat2x3']: r#397
[#645 'mat2x4']: r#397
[#645 'mat3x2']: r#397
[#645 'mat3x3']: r#397
[#645 'mat3x4']: r#397
[#645 'mat4x2']: r#397
[#645 'mat4x3']: r#397
[#645 'mat4x4']: r#397
[#645 'ptr']: r#397
[#645 'return']: r#397
[#645 'sampler']: r#397
[#645 'sampler_comparison']: r#397
[#645 'static_assert']: r#397
[#645 'switch']: r#397
[#645 'texture_1d']: r#397
[#645 'texture_2d']: r#397
[#645 'texture_2d_array']: r#397
[#645 'texture_3d']: r#397
[#645 'texture_cube']: r#397
[#645 'texture_cube_array']: r#397
[#645 'texture_depth_2d']: r#397
[#645 'texture_depth_2d_array']: r#397
[#645 'texture_depth_cube']: r#397
[#645 'texture_depth_cube_array']: r#397
[#645 'texture_depth_multisampled_2d']: r#397
[#645 'texture_multisampled_2d']: r#397
[#645 'texture_storage_1d']: r#397
[#645 'texture_storage_2d']: r#397
[#645 'texture_storage_2d_array']: r#397
[#645 'texture_storage_3d']: r#397
[#645 'u32']: r#397
[#645 'var']: r#397
[#645 'vec2']: r#397
[#645 'vec3']: r#397
[#645 'vec4']: r#397
[#645 'while']: r#397
[#645 '{']: r#397
[#645 '}']: r#397
[#646 ';']: s#25
[#647 ';']: r#398
[#648 ')']: r#399
[#648 ',']: r#399
[#649 'array']: s#333
[#649 'atomic']: s#168
[#649 'bool']: s#161
[#649 'f16']: s#183
[#649 'f32']: s#182
[#649 'i32']: s#184
[#649 'mat2x2']: s#173
[#649 'mat2x3']: s#174
[#649 'mat2x4']: s#175
[#649 'mat3x2']: s#176
[#649 'mat3x3']: s#177
[#649 'mat3x4']: s#178
[#649 'mat4x2']: s#179
[#649 'mat4x3']: s#180
[#649 'mat4x4']: s#181
[#649 'ptr']: s#186
[#649 'sampler']: s#192
[#649 'sampler_comparison']: s#193
[#649 'texture_1d']: s#199
[#649 'texture_2d']: s#200
[#649 'texture_2d_array']: s#201
[#649 'texture_3d']: s#202
[#649 'texture_cube']: s#203
[#649 'texture_cube_array']: s#204
[#649 'texture_depth_2d']: s#194
[#649 'texture_depth_2d_array']: s#195
[#649 'texture_depth_cube']: s#196
[#649 'texture_depth_cube_array']: s#197
[#649 'texture_depth_multisampled_2d']: s#198
[#649 'texture_multisampled_2d']: s#205
[#649 'texture_storage_1d']: s#206
[#649 'texture_storage_2d']: s#207
[#649 'texture_storage_2d_array']: s#208
[#649 'texture_storage_3d']: s#209
[#649 'u32']: s#185
[#649 'vec2']: s#170
[#649 'vec3']: s#171
[#649 'vec4']: s#172
[#649 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#650 'array']: r#400
[#650 'atomic']: r#400
[#650 'bool']: r#400
[#650 'f16']: r#400
[#650 'f32']: r#400
[#650 'i32']: r#400
[#650 'mat2x2']: r#400
[#650 'mat2x3']: r#400
[#650 'mat2x4']: r#400
[#650 'mat3x2']: r#400
[#650 'mat3x3']: r#400
[#650 'mat3x4']: r#400
[#650 'mat4x2']: r#400
[#650 'mat4x3']: r#400
[#650 'mat4x4']: r#400
[#650 'ptr']: r#400
[#650 'sampler']: r#400
[#650 'sampler_comparison']: r#400
[#650 'texture_1d']: r#400
[#650 'texture_2d']: r#400
[#650 'texture_2d_array']: r#400
[#650 'texture_3d']: r#400
[#650 'texture_cube']: r#400
[#650 'texture_cube_array']: r#400
[#650 'texture_depth_2d']: r#400
[#650 'texture_depth_2d_array']: r#400
[#650 'texture_depth_cube']: r#400
[#650 'texture_depth_cube_array']: r#400
[#650 'texture_depth_multisampled_2d']: r#400
[#650 'texture_multisampled_2d']: r#400
[#650 'texture_storage_1d']: r#400
[#650 'texture_storage_2d']: r#400
[#650 'texture_storage_2d_array']: r#400
[#650 'texture_storage_3d']: r#400
[#650 'u32']: r#400
[#650 'vec2']: r#400
[#650 'vec3']: r#400
[#650 'vec4']: r#400
[#651 '@']: s#38
[#652 'array']: r#401
[#652 'atomic']: r#401
[#652 'bool']: r#401
[#652 'f16']: r#401
[#652 'f32']: r#401
[#652 'i32']: r#401
[#652 'mat2x2']: r#401
[#652 'mat2x3']: r#401
[#652 'mat2x4']: r#401
[#652 'mat3x2']: r#401
[#652 'mat3x3']: r#401
[#652 'mat3x4']: r#401
[#652 'mat4x2']: r#401
[#652 'mat4x3']: r#401
[#652 'mat4x4']: r#401
[#652 'ptr']: r#401
[#652 'sampler']: r#401
[#652 'sampler_comparison']: r#401
[#652 'texture_1d']: r#401
[#652 'texture_2d']: r#401
[#652 'texture_2d_array']: r#401
[#652 'texture_3d']: r#401
[#652 'texture_cube']: r#401
[#652 'texture_cube_array']: r#401
[#652 'texture_depth_2d']: r#401
[#652 'texture_depth_2d_array']: r#401
[#652 'texture_depth_cube']: r#401
[#652 'texture_depth_cube_array']: r#401
[#652 'texture_depth_multisampled_2d']: r#401
[#652 'texture_multisampled_2d']: r#401
[#652 'texture_storage_1d']: r#401
[#652 'texture_storage_2d']: r#401
[#652 'texture_storage_2d_array']: r#401
[#652 'texture_storage_3d']: r#401
[#652 'u32']: r#401
[#652 'vec2']: r#401
[#652 'vec3']: r#401
[#652 'vec4']: r#401
[#653 '{']: r#402
[#654 '&']: s#80
[#654 '(']: s#13
[#654 '*']: s#79
[#654 '@']: s#38
[#654 '_']: s#377
[#654 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#655 'break']: s#676
[#656 'break']: r#403
[#656 '}']: r#403
[#657 '&']: s#80
[#657 '(']: s#13
[#657 '*']: s#79
[#657 ';']: s#25
[#657 '@']: s#38
[#657 '_']: s#377
[#657 'break']: s#364
[#657 'const']: s#363
[#657 'continue']: s#365
[#657 'discard']: s#350
[#657 'for']: s#358
[#657 'if']: s#369
[#657 'let']: s#362
[#657 'loop']: s#357
[#657 'return']: s#354
[#657 'static_assert']: s#32
[#657 'switch']: s#356
[#657 'var']: s#118
[#657 'while']: s#359
[#657 '{']: s#147
[#657 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#658 ',']: s#131
[#659 ',']: r#404
[#659 ':']: r#404
[#659 '{']: r#404
[#660 ',']: s#131
[#661 '!']: s#77
[#661 '&']: s#80
[#661 '(']: s#13
[#661 '*']: s#79
[#661 '-']: s#76
[#661 '@']: s#38
[#661 'bitcast']: s#85
[#661 'default']: s#638
[#661 'false']: s#98
[#661 'true']: s#97
[#661 '~']: s#78
[#661 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#661 /0[fh]/]: s#102
[#661 /0[iu]?/]: s#99
[#661 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#661 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#661 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#661 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#661 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#661 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#661 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#661 /[1-9][0-9]*[fh]/]: s#103
[#661 /[1-9][0-9]*[iu]?/]: s#100
[#662 '{']: s#147
[#663 '{']: r#405
[#664 'case']: r#406
[#664 'default']: r#406
[#664 '}']: r#406
[#665 '>']: r#407
[#666 '(']: r#408
[#666 ')']: r#408
[#666 ',']: r#408
[#666 ';']: r#408
[#666 '=']: r#408
[#666 '>']: r#408
[#666 '{']: r#408
[#666 '}']: r#408
[#667 '@']: r#409
[#667 'array']: r#409
[#667 'atomic']: r#409
[#667 'bool']: r#409
[#667 'f16']: r#409
[#667 'f32']: r#409
[#667 'fn']: r#409
[#667 'i32']: r#409
[#667 'mat2x2']: r#409
[#667 'mat2x3']: r#409
[#667 'mat2x4']: r#409
[#667 'mat3x2']: r#409
[#667 'mat3x3']: r#409
[#667 'mat3x4']: r#409
[#667 'mat4x2']: r#409
[#667 'mat4x3']: r#409
[#667 'mat4x4']: r#409
[#667 'override']: r#409
[#667 'ptr']: r#409
[#667 'sampler']: r#409
[#667 'sampler_comparison']: r#409
[#667 'texture_1d']: r#409
[#667 'texture_2d']: r#409
[#667 'texture_2d_array']: r#409
[#667 'texture_3d']: r#409
[#667 'texture_cube']: r#409
[#667 'texture_cube_array']: r#409
[#667 'texture_depth_2d']: r#409
[#667 'texture_depth_2d_array']: r#409
[#667 'texture_depth_cube']: r#409
[#667 'texture_depth_cube_array']: r#409
[#667 'texture_depth_multisampled_2d']: r#409
[#667 'texture_multisampled_2d']: r#409
[#667 'texture_storage_1d']: r#409
[#667 'texture_storage_2d']: r#409
[#667 'texture_storage_2d_array']: r#409
[#667 'texture_storage_3d']: r#409
[#667 'u32']: r#409
[#667 'var']: r#409
[#667 'vec2']: r#409
[#667 'vec3']: r#409
[#667 'vec4']: r#409
[#668 'case']: r#410
[#668 'default']: r#410
[#668 '}']: r#410
[#669 ',']: r#411
[#669 ':']: r#411
[#669 '{']: r#411
[#670 ',']: r#412
[#670 ':']: r#412
[#670 '{']: r#412
[#671 ':']: r#413
[#671 '{']: r#413
[#672 ':']: r#414
[#672 '{']: r#414
[#673 'break']: r#415
[#673 '}']: r#415
[#674 '}']: s#478
[#675 '}']: r#416
[#676 'if']: s#681
[#677 ')']: r#417
[#678 ')']: r#418
[#679 ')']: r#419
[#680 ')']: r#420
[#681 '!']: s#77
[#681 '&']: s#80
[#681 '(']: s#13
[#681 '*']: s#79
[#681 '-']: s#76
[#681 '@']: s#38
[#681 'bitcast']: s#85
[#681 'false']: s#98
[#681 'true']: s#97
[#681 '~']: s#78
[#681 /([_\p{XID_Start}][\p{XID_Continue}]+)|([\p{XID_Start}])/]: s#86
[#681 /0[fh]/]: s#102
[#681 /0[iu]?/]: s#99
[#681 /0[xX][0-9a-fA-F]*\.[0-9a-fA-F]+([pP][+-]?[0-9]+[fh]?)?/]: s#107
[#681 /0[xX][0-9a-fA-F]+[iu]?/]: s#101
[#681 /0[xX][0-9a-fA-F]+[pP][+-]?[0-9]+[fh]?/]: s#109
[#681 /0[xX][0-9a-fA-F]+\.[0-9a-fA-F]*([pP][+-]?[0-9]+[fh]?)?/]: s#108
[#681 /[0-9]*\.[0-9]+([eE][+-]?[0-9]+)?[fh]?/]: s#104
[#681 /[0-9]+[eE][+-]?[0-9]+[fh]?/]: s#106
[#681 /[0-9]+\.[0-9]*([eE][+-]?[0-9]+)?[fh]?/]: s#105
[#681 /[1-9][0-9]*[fh]/]: s#103
[#681 /[1-9][0-9]*[iu]?/]: s#100
[#682 '}']: r#421
[#683 ';']: s#25
[#684 '}']: r#422

=Goto:
[#0 diagnostic_directive]: #5
[#0 enable_directive]: #6
[#0 global_directive]: #4
[#0 translation_unit]: #1
[#0 translation_unit/0.0]: #2
[#0 translation_unit/0.0/0]: #3
[#2 attr]: #37
[#2 attribute]: #36
[#2 function_decl]: #23
[#2 function_decl/0.0]: #31
[#2 function_decl/0.0/0]: #35
[#2 global_constant_decl]: #20
[#2 global_constant_decl/1.0]: #28
[#2 global_constant_decl/1.0/0]: #34
[#2 global_decl]: #17
[#2 global_variable_decl]: #19
[#2 global_variable_decl/0.0]: #26
[#2 global_variable_decl/0.0/0]: #33
[#2 semicolon]: #18
[#2 static_assert_statement]: #24
[#2 struct_decl]: #22
[#2 translation_unit/0.1]: #15
[#2 translation_unit/0.1/0]: #16
[#2 type_alias_decl]: #21
[#4 diagnostic_directive]: #5
[#4 enable_directive]: #6
[#4 global_directive]: #4
[#4 translation_unit/0.0/0]: #14
[#7 diagnostic_control]: #11
[#7 paren_left]: #12
[#8 extension_name]: #9
[#9 semicolon]: #129
[#11 semicolon]: #128
[#12 severity_control_name]: #124
[#17 attr]: #37
[#17 attribute]: #36
[#17 function_decl]: #23
[#17 function_decl/0.0]: #31
[#17 function_decl/0.0/0]: #35
[#17 global_constant_decl]: #20
[#17 global_constant_decl/1.0]: #28
[#17 global_constant_decl/1.0/0]: #34
[#17 global_decl]: #17
[#17 global_variable_decl]: #19
[#17 global_variable_decl/0.0]: #26
[#17 global_variable_decl/0.0/0]: #33
[#17 semicolon]: #18
[#17 static_assert_statement]: #24
[#17 struct_decl]: #22
[#17 translation_unit/0.1/0]: #123
[#17 type_alias_decl]: #21
[#19 semicolon]: #122
[#20 semicolon]: #121
[#21 semicolon]: #120
[#24 semicolon]: #119
[#26 variable_decl]: #117
[#27 ident]: #116
[#27 optionally_typed_ident]: #115
[#29 ident]: #113
[#30 ident]: #112
[#31 function_header]: #110
[#32 additive_expression]: #66
[#32 and]: #74
[#32 attr]: #37
[#32 attribute]: #92
[#32 bang]: #71
[#32 binary_and_expression]: #63
[#32 binary_or_expression]: #64
[#32 binary_xor_expression]: #65
[#32 bitwise_expression]: #61
[#32 bool_literal]: #90
[#32 decimal_float_literal]: #95
[#32 decimal_int_literal]: #93
[#32 expression]: #57
[#32 float_literal]: #89
[#32 hex_float_literal]: #96
[#32 hex_int_literal]: #94
[#32 ident]: #81
[#32 int_literal]: #88
[#32 literal]: #83
[#32 minus]: #70
[#32 multiplicative_expression]: #68
[#32 paren_expression]: #84
[#32 paren_left]: #91
[#32 primary_expression]: #75
[#32 primary_expression/1.0]: #82
[#32 primary_expression/1.0/0]: #87
[#32 relational_expression]: #58
[#32 shift_expression]: #62
[#32 short_circuit_and_expression]: #60
[#32 short_circuit_or_expression]: #59
[#32 singular_expression]: #69
[#32 star]: #73
[#32 tilde]: #72
[#32 unary_expression]: #67
[#36 attr]: #37
[#36 attribute]: #36
[#36 function_decl/0.0/0]: #56
[#36 global_constant_decl/1.0/0]: #55
[#36 global_variable_decl/0.0/0]: #54
[#39 paren_left]: #264
[#40 paren_left]: #263
[#41 paren_left]: #262
[#43 diagnostic_control]: #261
[#43 paren_left]: #12
[#44 paren_left]: #260
[#45 paren_left]: #259
[#46 paren_left]: #258
[#48 paren_left]: #257
[#49 paren_left]: #256
[#50 paren_left]: #255
[#59 or_or]: #253
[#60 and_and]: #251
[#62 equal_equal]: #244
[#62 greater_than]: #241
[#62 greater_than_equal]: #243
[#62 less_than]: #240
[#62 less_than_equal]: #242
[#62 not_equal]: #245
[#63 and]: #239
[#64 or]: #237
[#65 xor]: #235
[#66 additive_operator]: #231
[#66 minus]: #233
[#66 plus]: #232
[#67 shift_left]: #227
[#67 shift_right]: #228
[#68 forward_slash]: #223
[#68 modulo]: #224
[#68 multiplicative_operator]: #221
[#68 star]: #222
[#70 and]: #74
[#70 attr]: #37
[#70 attribute]: #92
[#70 bang]: #71
[#70 bool_literal]: #90
[#70 decimal_float_literal]: #95
[#70 decimal_int_literal]: #93
[#70 float_literal]: #89
[#70 hex_float_literal]: #96
[#70 hex_int_literal]: #94
[#70 ident]: #81
[#70 int_literal]: #88
[#70 literal]: #83
[#70 minus]: #70
[#70 paren_expression]: #84
[#70 paren_left]: #91
[#70 primary_expression]: #75
[#70 primary_expression/1.0]: #82
[#70 primary_expression/1.0/0]: #87
[#70 singular_expression]: #69
[#70 star]: #73
[#70 tilde]: #72
[#70 unary_expression]: #220
[#71 and]: #74
[#71 attr]: #37
[#71 attribute]: #92
[#71 bang]: #71
[#71 bool_literal]: #90
[#71 decimal_float_literal]: #95
[#71 decimal_int_literal]: #93
[#71 float_literal]: #89
[#71 hex_float_literal]: #96
[#71 hex_int_literal]: #94
[#71 ident]: #81
[#71 int_literal]: #88
[#71 literal]: #83
[#71 minus]: #70
[#71 paren_expression]: #84
[#71 paren_left]: #91
[#71 primary_expression]: #75
[#71 primary_expression/1.0]: #82
[#71 primary_expression/1.0/0]: #87
[#71 singular_expression]: #69
[#71 star]: #73
[#71 tilde]: #72
[#71 unary_expression]: #219
[#72 and]: #74
[#72 attr]: #37
[#72 attribute]: #92
[#72 bang]: #71
[#72 bool_literal]: #90
[#72 decimal_float_literal]: #95
[#72 decimal_int_literal]: #93
[#72 float_literal]: #89
[#72 hex_float_literal]: #96
[#72 hex_int_literal]: #94
[#72 ident]: #81
[#72 int_literal]: #88
[#72 literal]: #83
[#72 minus]: #70
[#72 paren_expression]: #84
[#72 paren_left]: #91
[#72 primary_expression]: #75
[#72 primary_expression/1.0]: #82
[#72 primary_expression/1.0/0]: #87
[#72 singular_expression]: #69
[#72 star]: #73
[#72 tilde]: #72
[#72 unary_expression]: #218
[#73 and]: #74
[#73 attr]: #37
[#73 attribute]: #92
[#73 bang]: #71
[#73 bool_literal]: #90
[#73 decimal_float_literal]: #95
[#73 decimal_int_literal]: #93
[#73 float_literal]: #89
[#73 hex_float_literal]: #96
[#73 hex_int_literal]: #94
[#73 ident]: #81
[#73 int_literal]: #88
[#73 literal]: #83
[#73 minus]: #70
[#73 paren_expression]: #84
[#73 paren_left]: #91
[#73 primary_expression]: #75
[#73 primary_expression/1.0]: #82
[#73 primary_expression/1.0/0]: #87
[#73 singular_expression]: #69
[#73 star]: #73
[#73 tilde]: #72
[#73 unary_expression]: #217
[#74 and]: #74
[#74 attr]: #37
[#74 attribute]: #92
[#74 bang]: #71
[#74 bool_literal]: #90
[#74 decimal_float_literal]: #95
[#74 decimal_int_literal]: #93
[#74 float_literal]: #89
[#74 hex_float_literal]: #96
[#74 hex_int_literal]: #94
[#74 ident]: #81
[#74 int_literal]: #88
[#74 literal]: #83
[#74 minus]: #70
[#74 paren_expression]: #84
[#74 paren_left]: #91
[#74 primary_expression]: #75
[#74 primary_expression/1.0]: #82
[#74 primary_expression/1.0/0]: #87
[#74 singular_expression]: #69
[#74 star]: #73
[#74 tilde]: #72
[#74 unary_expression]: #216
[#75 bracket_left]: #212
[#75 component_or_swizzle_specifier]: #211
[#75 period]: #213
[#75 singular_expression/0.1]: #210
[#82 array_type_specifier]: #167
[#82 call_expr]: #154
[#82 callable]: #155
[#82 depth_texture_type]: #188
[#82 float16]: #163
[#82 float32]: #162
[#82 ident]: #156
[#82 int32]: #164
[#82 mat_prefix]: #159
[#82 multisampled_texture_type]: #190
[#82 pointer]: #166
[#82 sampled_texture_type]: #189
[#82 sampler_type]: #187
[#82 storage_texture_type]: #191
[#82 texture_and_sampler_types]: #169
[#82 type_specifier_without_ident]: #157
[#82 uint32]: #165
[#82 vec_prefix]: #158
[#85 less_than]: #153
[#91 additive_expression]: #66
[#91 and]: #74
[#91 attr]: #37
[#91 attribute]: #92
[#91 bang]: #71
[#91 binary_and_expression]: #63
[#91 binary_or_expression]: #64
[#91 binary_xor_expression]: #65
[#91 bitwise_expression]: #61
[#91 bool_literal]: #90
[#91 decimal_float_literal]: #95
[#91 decimal_int_literal]: #93
[#91 expression]: #152
[#91 float_literal]: #89
[#91 hex_float_literal]: #96
[#91 hex_int_literal]: #94
[#91 ident]: #81
[#91 int_literal]: #88
[#91 literal]: #83
[#91 minus]: #70
[#91 multiplicative_expression]: #68
[#91 paren_expression]: #84
[#91 paren_left]: #91
[#91 primary_expression]: #75
[#91 primary_expression/1.0]: #82
[#91 primary_expression/1.0/0]: #87
[#91 relational_expression]: #58
[#91 shift_expression]: #62
[#91 short_circuit_and_expression]: #60
[#91 short_circuit_or_expression]: #59
[#91 singular_expression]: #69
[#91 star]: #73
[#91 tilde]: #72
[#91 unary_expression]: #67
[#92 attr]: #37
[#92 attribute]: #92
[#92 primary_expression/1.0/0]: #151
[#110 brace_left]: #150
[#110 compound_statement]: #149
[#111 ident]: #148
[#112 brace_left]: #146
[#112 struct_body_decl]: #145
[#113 equal]: #144
[#114 ident]: #116
[#114 optionally_typed_ident]: #143
[#115 equal]: #142
[#116 colon]: #140
[#116 optionally_typed_ident/0.1]: #139
[#117 equal]: #137
[#117 global_variable_decl/0.2]: #136
[#118 less_than]: #134
[#118 variable_decl/0.1]: #132
[#118 variable_qualifier]: #133
[#124 comma]: #130
[#130 diagnostic_rule_name]: #398
[#132 ident]: #116
[#132 optionally_typed_ident]: #397
[#134 address_space]: #391
[#137 additive_expression]: #66
[#137 and]: #74
[#137 attr]: #37
[#137 attribute]: #92
[#137 bang]: #71
[#137 binary_and_expression]: #63
[#137 binary_or_expression]: #64
[#137 binary_xor_expression]: #65
[#137 bitwise_expression]: #61
[#137 bool_literal]: #90
[#137 decimal_float_literal]: #95
[#137 decimal_int_literal]: #93
[#137 expression]: #390
[#137 float_literal]: #89
[#137 hex_float_literal]: #96
[#137 hex_int_literal]: #94
[#137 ident]: #81
[#137 int_literal]: #88
[#137 literal]: #83
[#137 minus]: #70
[#137 multiplicative_expression]: #68
[#137 paren_expression]: #84
[#137 paren_left]: #91
[#137 primary_expression]: #75
[#137 primary_expression/1.0]: #82
[#137 primary_expression/1.0/0]: #87
[#137 relational_expression]: #58
[#137 shift_expression]: #62
[#137 short_circuit_and_expression]: #60
[#137 short_circuit_or_expression]: #59
[#137 singular_expression]: #69
[#137 star]: #73
[#137 tilde]: #72
[#137 unary_expression]: #67
[#140 array_type_specifier]: #167
[#140 depth_texture_type]: #188
[#140 float16]: #163
[#140 float32]: #162
[#140 ident]: #329
[#140 int32]: #164
[#140 mat_prefix]: #332
[#140 multisampled_texture_type]: #190
[#140 pointer]: #166
[#140 sampled_texture_type]: #189
[#140 sampler_type]: #187
[#140 storage_texture_type]: #191
[#140 texture_and_sampler_types]: #169
[#140 type_specifier]: #389
[#140 type_specifier_without_ident]: #330
[#140 uint32]: #165
[#140 vec_prefix]: #331
[#142 additive_expression]: #66
[#142 and]: #74
[#142 attr]: #37
[#142 attribute]: #92
[#142 bang]: #71
[#142 binary_and_expression]: #63
[#142 binary_or_expression]: #64
[#142 binary_xor_expression]: #65
[#142 bitwise_expression]: #61
[#142 bool_literal]: #90
[#142 decimal_float_literal]: #95
[#142 decimal_int_literal]: #93
[#142 expression]: #388
[#142 float_literal]: #89
[#142 hex_float_literal]: #96
[#142 hex_int_literal]: #94
[#142 ident]: #81
[#142 int_literal]: #88
[#142 literal]: #83
[#142 minus]: #70
[#142 multiplicative_expression]: #68
[#142 paren_expression]: #84
[#142 paren_left]: #91
[#142 primary_expression]: #75
[#142 primary_expression/1.0]: #82
[#142 primary_expression/1.0/0]: #87
[#142 relational_expression]: #58
[#142 shift_expression]: #62
[#142 short_circuit_and_expression]: #60
[#142 short_circuit_or_expression]: #59
[#142 singular_expression]: #69
[#142 star]: #73
[#142 tilde]: #72
[#142 unary_expression]: #67
[#143 equal]: #387
[#143 global_constant_decl/1.3]: #386
[#144 array_type_specifier]: #167
[#144 depth_texture_type]: #188
[#144 float16]: #163
[#144 float32]: #162
[#144 ident]: #329
[#144 int32]: #164
[#144 mat_prefix]: #332
[#144 multisampled_texture_type]: #190
[#144 pointer]: #166
[#144 sampled_texture_type]: #189
[#144 sampler_type]: #187
[#144 storage_texture_type]: #191
[#144 texture_and_sampler_types]: #169
[#144 type_specifier]: #385
[#144 type_specifier_without_ident]: #330
[#144 uint32]: #165
[#144 vec_prefix]: #331
[#146 attr]: #37
[#146 attribute]: #384
[#146 struct_member]: #381
[#146 struct_member/0.0]: #382
[#146 struct_member/0.0/0]: #383
[#148 paren_left]: #380
[#150 and]: #376
[#150 assignment_statement]: #366
[#150 attr]: #37
[#150 attribute]: #373
[#150 brace_left]: #150
[#150 break_statement]: #348
[#150 compound_statement]: #352
[#150 compound_statement/0.1]: #336
[#150 compound_statement/0.1/0]: #337
[#150 continue_statement]: #349
[#150 core_lhs_expression]: #374
[#150 decrement_statement]: #368
[#150 for_statement]: #344
[#150 func_call_statement]: #346
[#150 func_call_statement/0.0]: #360
[#150 func_call_statement/0.0/0]: #370
[#150 ident]: #378
[#150 if_clause]: #355
[#150 if_statement]: #341
[#150 increment_statement]: #367
[#150 lhs_expression]: #371
[#150 loop_statement]: #343
[#150 paren_left]: #379
[#150 return_statement]: #340
[#150 semicolon]: #339
[#150 star]: #375
[#150 statement]: #338
[#150 static_assert_statement]: #353
[#150 switch_statement]: #342
[#150 underscore]: #372
[#150 variable_decl]: #361
[#150 variable_statement]: #347
[#150 variable_updating_statement]: #351
[#150 while_statement]: #345
[#152 paren_right]: #334
[#153 array_type_specifier]: #167
[#153 depth_texture_type]: #188
[#153 float16]: #163
[#153 float32]: #162
[#153 ident]: #329
[#153 int32]: #164
[#153 mat_prefix]: #332
[#153 multisampled_texture_type]: #190
[#153 pointer]: #166
[#153 sampled_texture_type]: #189
[#153 sampler_type]: #187
[#153 storage_texture_type]: #191
[#153 texture_and_sampler_types]: #169
[#153 type_specifier]: #328
[#153 type_specifier_without_ident]: #330
[#153 uint32]: #165
[#153 vec_prefix]: #331
[#155 argument_expression_list]: #326
[#155 paren_left]: #327
[#158 less_than]: #325
[#159 less_than]: #324
[#160 less_than]: #323
[#166 less_than]: #322
[#168 less_than]: #321
[#189 less_than]: #320
[#190 less_than]: #319
[#191 less_than]: #318
[#212 additive_expression]: #66
[#212 and]: #74
[#212 attr]: #37
[#212 attribute]: #92
[#212 bang]: #71
[#212 binary_and_expression]: #63
[#212 binary_or_expression]: #64
[#212 binary_xor_expression]: #65
[#212 bitwise_expression]: #61
[#212 bool_literal]: #90
[#212 decimal_float_literal]: #95
[#212 decimal_int_literal]: #93
[#212 expression]: #317
[#212 float_literal]: #89
[#212 hex_float_literal]: #96
[#212 hex_int_literal]: #94
[#212 ident]: #81
[#212 int_literal]: #88
[#212 literal]: #83
[#212 minus]: #70
[#212 multiplicative_expression]: #68
[#212 paren_expression]: #84
[#212 paren_left]: #91
[#212 primary_expression]: #75
[#212 primary_expression/1.0]: #82
[#212 primary_expression/1.0/0]: #87
[#212 relational_expression]: #58
[#212 shift_expression]: #62
[#212 short_circuit_and_expression]: #60
[#212 short_circuit_or_expression]: #59
[#212 singular_expression]: #69
[#212 star]: #73
[#212 tilde]: #72
[#212 unary_expression]: #67
[#213 member_ident]: #306
[#213 swizzle_name]: #307
[#221 and]: #74
[#221 attr]: #37
[#221 attribute]: #92
[#221 bang]: #71
[#221 bool_literal]: #90
[#221 decimal_float_literal]: #95
[#221 decimal_int_literal]: #93
[#221 float_literal]: #89
[#221 hex_float_literal]: #96
[#221 hex_int_literal]: #94
[#221 ident]: #81
[#221 int_literal]: #88
[#221 literal]: #83
[#221 minus]: #70
[#221 paren_expression]: #84
[#221 paren_left]: #91
[#221 primary_expression]: #75
[#221 primary_expression/1.0]: #82
[#221 primary_expression/1.0/0]: #87
[#221 singular_expression]: #69
[#221 star]: #73
[#221 tilde]: #72
[#221 unary_expression]: #305
[#227 and]: #74
[#227 attr]: #37
[#227 attribute]: #92
[#227 bang]: #71
[#227 bool_literal]: #90
[#227 decimal_float_literal]: #95
[#227 decimal_int_literal]: #93
[#227 float_literal]: #89
[#227 hex_float_literal]: #96
[#227 hex_int_literal]: #94
[#227 ident]: #81
[#227 int_literal]: #88
[#227 literal]: #83
[#227 minus]: #70
[#227 paren_expression]: #84
[#227 paren_left]: #91
[#227 primary_expression]: #75
[#227 primary_expression/1.0]: #82
[#227 primary_expression/1.0/0]: #87
[#227 singular_expression]: #69
[#227 star]: #73
[#227 tilde]: #72
[#227 unary_expression]: #304
[#228 and]: #74
[#228 attr]: #37
[#228 attribute]: #92
[#228 bang]: #71
[#228 bool_literal]: #90
[#228 decimal_float_literal]: #95
[#228 decimal_int_literal]: #93
[#228 float_literal]: #89
[#228 hex_float_literal]: #96
[#228 hex_int_literal]: #94
[#228 ident]: #81
[#228 int_literal]: #88
[#228 literal]: #83
[#228 minus]: #70
[#228 paren_expression]: #84
[#228 paren_left]: #91
[#228 primary_expression]: #75
[#228 primary_expression/1.0]: #82
[#228 primary_expression/1.0/0]: #87
[#228 singular_expression]: #69
[#228 star]: #73
[#228 tilde]: #72
[#228 unary_expression]: #303
[#231 and]: #74
[#231 attr]: #37
[#231 attribute]: #92
[#231 bang]: #71
[#231 bool_literal]: #90
[#231 decimal_float_literal]: #95
[#231 decimal_int_literal]: #93
[#231 float_literal]: #89
[#231 hex_float_literal]: #96
[#231 hex_int_literal]: #94
[#231 ident]: #81
[#231 int_literal]: #88
[#231 literal]: #83
[#231 minus]: #70
[#231 multiplicative_expression]: #301
[#231 paren_expression]: #84
[#231 paren_left]: #91
[#231 primary_expression]: #75
[#231 primary_expression/1.0]: #82
[#231 primary_expression/1.0/0]: #87
[#231 singular_expression]: #69
[#231 star]: #73
[#231 tilde]: #72
[#231 unary_expression]: #302
[#235 and]: #74
[#235 attr]: #37
[#235 attribute]: #92
[#235 bang]: #71
[#235 bool_literal]: #90
[#235 decimal_float_literal]: #95
[#235 decimal_int_literal]: #93
[#235 float_literal]: #89
[#235 hex_float_literal]: #96
[#235 hex_int_literal]: #94
[#235 ident]: #81
[#235 int_literal]: #88
[#235 literal]: #83
[#235 minus]: #70
[#235 paren_expression]: #84
[#235 paren_left]: #91
[#235 primary_expression]: #75
[#235 primary_expression/1.0]: #82
[#235 primary_expression/1.0/0]: #87
[#235 singular_expression]: #69
[#235 star]: #73
[#235 tilde]: #72
[#235 unary_expression]: #300
[#237 and]: #74
[#237 attr]: #37
[#237 attribute]: #92
[#237 bang]: #71
[#237 bool_literal]: #90
[#237 decimal_float_literal]: #95
[#237 decimal_int_literal]: #93
[#237 float_literal]: #89
[#237 hex_float_literal]: #96
[#237 hex_int_literal]: #94
[#237 ident]: #81
[#237 int_literal]: #88
[#237 literal]: #83
[#237 minus]: #70
[#237 paren_expression]: #84
[#237 paren_left]: #91
[#237 primary_expression]: #75
[#237 primary_expression/1.0]: #82
[#237 primary_expression/1.0/0]: #87
[#237 singular_expression]: #69
[#237 star]: #73
[#237 tilde]: #72
[#237 unary_expression]: #299
[#239 and]: #74
[#239 attr]: #37
[#239 attribute]: #92
[#239 bang]: #71
[#239 bool_literal]: #90
[#239 decimal_float_literal]: #95
[#239 decimal_int_literal]: #93
[#239 float_literal]: #89
[#239 hex_float_literal]: #96
[#239 hex_int_literal]: #94
[#239 ident]: #81
[#239 int_literal]: #88
[#239 literal]: #83
[#239 minus]: #70
[#239 paren_expression]: #84
[#239 paren_left]: #91
[#239 primary_expression]: #75
[#239 primary_expression/1.0]: #82
[#239 primary_expression/1.0/0]: #87
[#239 singular_expression]: #69
[#239 star]: #73
[#239 tilde]: #72
[#239 unary_expression]: #298
[#240 additive_expression]: #66
[#240 and]: #74
[#240 attr]: #37
[#240 attribute]: #92
[#240 bang]: #71
[#240 bool_literal]: #90
[#240 decimal_float_literal]: #95
[#240 decimal_int_literal]: #93
[#240 float_literal]: #89
[#240 hex_float_literal]: #96
[#240 hex_int_literal]: #94
[#240 ident]: #81
[#240 int_literal]: #88
[#240 literal]: #83
[#240 minus]: #70
[#240 multiplicative_expression]: #68
[#240 paren_expression]: #84
[#240 paren_left]: #91
[#240 primary_expression]: #75
[#240 primary_expression/1.0]: #82
[#240 primary_expression/1.0/0]: #87
[#240 shift_expression]: #297
[#240 singular_expression]: #69
[#240 star]: #73
[#240 tilde]: #72
[#240 unary_expression]: #290
[#241 additive_expression]: #66
[#241 and]: #74
[#241 attr]: #37
[#241 attribute]: #92
[#241 bang]: #71
[#241 bool_literal]: #90
[#241 decimal_float_literal]: #95
[#241 decimal_int_literal]: #93
[#241 float_literal]: #89
[#241 hex_float_literal]: #96
[#241 hex_int_literal]: #94
[#241 ident]: #81
[#241 int_literal]: #88
[#241 literal]: #83
[#241 minus]: #70
[#241 multiplicative_expression]: #68
[#241 paren_expression]: #84
[#241 paren_left]: #91
[#241 primary_expression]: #75
[#241 primary_expression/1.0]: #82
[#241 primary_expression/1.0/0]: #87
[#241 shift_expression]: #296
[#241 singular_expression]: #69
[#241 star]: #73
[#241 tilde]: #72
[#241 unary_expression]: #290
[#242 additive_expression]: #66
[#242 and]: #74
[#242 attr]: #37
[#242 attribute]: #92
[#242 bang]: #71
[#242 bool_literal]: #90
[#242 decimal_float_literal]: #95
[#242 decimal_int_literal]: #93
[#242 float_literal]: #89
[#242 hex_float_literal]: #96
[#242 hex_int_literal]: #94
[#242 ident]: #81
[#242 int_literal]: #88
[#242 literal]: #83
[#242 minus]: #70
[#242 multiplicative_expression]: #68
[#242 paren_expression]: #84
[#242 paren_left]: #91
[#242 primary_expression]: #75
[#242 primary_expression/1.0]: #82
[#242 primary_expression/1.0/0]: #87
[#242 shift_expression]: #295
[#242 singular_expression]: #69
[#242 star]: #73
[#242 tilde]: #72
[#242 unary_expression]: #290
[#243 additive_expression]: #66
[#243 and]: #74
[#243 attr]: #37
[#243 attribute]: #92
[#243 bang]: #71
[#243 bool_literal]: #90
[#243 decimal_float_literal]: #95
[#243 decimal_int_literal]: #93
[#243 float_literal]: #89
[#243 hex_float_literal]: #96
[#243 hex_int_literal]: #94
[#243 ident]: #81
[#243 int_literal]: #88
[#243 literal]: #83
[#243 minus]: #70
[#243 multiplicative_expression]: #68
[#243 paren_expression]: #84
[#243 paren_left]: #91
[#243 primary_expression]: #75
[#243 primary_expression/1.0]: #82
[#243 primary_expression/1.0/0]: #87
[#243 shift_expression]: #294
[#243 singular_expression]: #69
[#243 star]: #73
[#243 tilde]: #72
[#243 unary_expression]: #290
[#244 additive_expression]: #66
[#244 and]: #74
[#244 attr]: #37
[#244 attribute]: #92
[#244 bang]: #71
[#244 bool_literal]: #90
[#244 decimal_float_literal]: #95
[#244 decimal_int_literal]: #93
[#244 float_literal]: #89
[#244 hex_float_literal]: #96
[#244 hex_int_literal]: #94
[#244 ident]: #81
[#244 int_literal]: #88
[#244 literal]: #83
[#244 minus]: #70
[#244 multiplicative_expression]: #68
[#244 paren_expression]: #84
[#244 paren_left]: #91
[#244 primary_expression]: #75
[#244 primary_expression/1.0]: #82
[#244 primary_expression/1.0/0]: #87
[#244 shift_expression]: #293
[#244 singular_expression]: #69
[#244 star]: #73
[#244 tilde]: #72
[#244 unary_expression]: #290
[#245 additive_expression]: #66
[#245 and]: #74
[#245 attr]: #37
[#245 attribute]: #92
[#245 bang]: #71
[#245 bool_literal]: #90
[#245 decimal_float_literal]: #95
[#245 decimal_int_literal]: #93
[#245 float_literal]: #89
[#245 hex_float_literal]: #96
[#245 hex_int_literal]: #94
[#245 ident]: #81
[#245 int_literal]: #88
[#245 literal]: #83
[#245 minus]: #70
[#245 multiplicative_expression]: #68
[#245 paren_expression]: #84
[#245 paren_left]: #91
[#245 primary_expression]: #75
[#245 primary_expression/1.0]: #82
[#245 primary_expression/1.0/0]: #87
[#245 shift_expression]: #292
[#245 singular_expression]: #69
[#245 star]: #73
[#245 tilde]: #72
[#245 unary_expression]: #290
[#251 additive_expression]: #66
[#251 and]: #74
[#251 attr]: #37
[#251 attribute]: #92
[#251 bang]: #71
[#251 bool_literal]: #90
[#251 decimal_float_literal]: #95
[#251 decimal_int_literal]: #93
[#251 float_literal]: #89
[#251 hex_float_literal]: #96
[#251 hex_int_literal]: #94
[#251 ident]: #81
[#251 int_literal]: #88
[#251 literal]: #83
[#251 minus]: #70
[#251 multiplicative_expression]: #68
[#251 paren_expression]: #84
[#251 paren_left]: #91
[#251 primary_expression]: #75
[#251 primary_expression/1.0]: #82
[#251 primary_expression/1.0/0]: #87
[#251 relational_expression]: #291
[#251 shift_expression]: #62
[#251 singular_expression]: #69
[#251 star]: #73
[#251 tilde]: #72
[#251 unary_expression]: #290
[#253 additive_expression]: #66
[#253 and]: #74
[#253 attr]: #37
[#253 attribute]: #92
[#253 bang]: #71
[#253 bool_literal]: #90
[#253 decimal_float_literal]: #95
[#253 decimal_int_literal]: #93
[#253 float_literal]: #89
[#253 hex_float_literal]: #96
[#253 hex_int_literal]: #94
[#253 ident]: #81
[#253 int_literal]: #88
[#253 literal]: #83
[#253 minus]: #70
[#253 multiplicative_expression]: #68
[#253 paren_expression]: #84
[#253 paren_left]: #91
[#253 primary_expression]: #75
[#253 primary_expression/1.0]: #82
[#253 primary_expression/1.0/0]: #87
[#253 relational_expression]: #289
[#253 shift_expression]: #62
[#253 singular_expression]: #69
[#253 star]: #73
[#253 tilde]: #72
[#253 unary_expression]: #290
[#255 additive_expression]: #66
[#255 and]: #74
[#255 attr]: #37
[#255 attribute]: #92
[#255 bang]: #71
[#255 binary_and_expression]: #63
[#255 binary_or_expression]: #64
[#255 binary_xor_expression]: #65
[#255 bitwise_expression]: #61
[#255 bool_literal]: #90
[#255 decimal_float_literal]: #95
[#255 decimal_int_literal]: #93
[#255 expression]: #288
[#255 float_literal]: #89
[#255 hex_float_literal]: #96
[#255 hex_int_literal]: #94
[#255 ident]: #81
[#255 int_literal]: #88
[#255 literal]: #83
[#255 minus]: #70
[#255 multiplicative_expression]: #68
[#255 paren_expression]: #84
[#255 paren_left]: #91
[#255 primary_expression]: #75
[#255 primary_expression/1.0]: #82
[#255 primary_expression/1.0/0]: #87
[#255 relational_expression]: #58
[#255 shift_expression]: #62
[#255 short_circuit_and_expression]: #60
[#255 short_circuit_or_expression]: #59
[#255 singular_expression]: #69
[#255 star]: #73
[#255 tilde]: #72
[#255 unary_expression]: #67
[#256 additive_expression]: #66
[#256 and]: #74
[#256 attr]: #37
[#256 attribute]: #92
[#256 bang]: #71
[#256 binary_and_expression]: #63
[#256 binary_or_expression]: #64
[#256 binary_xor_expression]: #65
[#256 bitwise_expression]: #61
[#256 bool_literal]: #90
[#256 decimal_float_literal]: #95
[#256 decimal_int_literal]: #93
[#256 expression]: #287
[#256 float_literal]: #89
[#256 hex_float_literal]: #96
[#256 hex_int_literal]: #94
[#256 ident]: #81
[#256 int_literal]: #88
[#256 literal]: #83
[#256 minus]: #70
[#256 multiplicative_expression]: #68
[#256 paren_expression]: #84
[#256 paren_left]: #91
[#256 primary_expression]: #75
[#256 primary_expression/1.0]: #82
[#256 primary_expression/1.0/0]: #87
[#256 relational_expression]: #58
[#256 shift_expression]: #62
[#256 short_circuit_and_expression]: #60
[#256 short_circuit_or_expression]: #59
[#256 singular_expression]: #69
[#256 star]: #73
[#256 tilde]: #72
[#256 unary_expression]: #67
[#257 additive_expression]: #66
[#257 and]: #74
[#257 attr]: #37
[#257 attribute]: #92
[#257 bang]: #71
[#257 binary_and_expression]: #63
[#257 binary_or_expression]: #64
[#257 binary_xor_expression]: #65
[#257 bitwise_expression]: #61
[#257 bool_literal]: #90
[#257 decimal_float_literal]: #95
[#257 decimal_int_literal]: #93
[#257 expression]: #286
[#257 float_literal]: #89
[#257 hex_float_literal]: #96
[#257 hex_int_literal]: #94
[#257 ident]: #81
[#257 int_literal]: #88
[#257 literal]: #83
[#257 minus]: #70
[#257 multiplicative_expression]: #68
[#257 paren_expression]: #84
[#257 paren_left]: #91
[#257 primary_expression]: #75
[#257 primary_expression/1.0]: #82
[#257 primary_expression/1.0/0]: #87
[#257 relational_expression]: #58
[#257 shift_expression]: #62
[#257 short_circuit_and_expression]: #60
[#257 short_circuit_or_expression]: #59
[#257 singular_expression]: #69
[#257 star]: #73
[#257 tilde]: #72
[#257 unary_expression]: #67
[#258 interpolation_type_name]: #282
[#259 additive_expression]: #66
[#259 and]: #74
[#259 attr]: #37
[#259 attribute]: #92
[#259 bang]: #71
[#259 binary_and_expression]: #63
[#259 binary_or_expression]: #64
[#259 binary_xor_expression]: #65
[#259 bitwise_expression]: #61
[#259 bool_literal]: #90
[#259 decimal_float_literal]: #95
[#259 decimal_int_literal]: #93
[#259 expression]: #281
[#259 float_literal]: #89
[#259 hex_float_literal]: #96
[#259 hex_int_literal]: #94
[#259 ident]: #81
[#259 int_literal]: #88
[#259 literal]: #83
[#259 minus]: #70
[#259 multiplicative_expression]: #68
[#259 paren_expression]: #84
[#259 paren_left]: #91
[#259 primary_expression]: #75
[#259 primary_expression/1.0]: #82
[#259 primary_expression/1.0/0]: #87
[#259 relational_expression]: #58
[#259 shift_expression]: #62
[#259 short_circuit_and_expression]: #60
[#259 short_circuit_or_expression]: #59
[#259 singular_expression]: #69
[#259 star]: #73
[#259 tilde]: #72
[#259 unary_expression]: #67
[#260 additive_expression]: #66
[#260 and]: #74
[#260 attr]: #37
[#260 attribute]: #92
[#260 bang]: #71
[#260 binary_and_expression]: #63
[#260 binary_or_expression]: #64
[#260 binary_xor_expression]: #65
[#260 bitwise_expression]: #61
[#260 bool_literal]: #90
[#260 decimal_float_literal]: #95
[#260 decimal_int_literal]: #93
[#260 expression]: #280
[#260 float_literal]: #89
[#260 hex_float_literal]: #96
[#260 hex_int_literal]: #94
[#260 ident]: #81
[#260 int_literal]: #88
[#260 literal]: #83
[#260 minus]: #70
[#260 multiplicative_expression]: #68
[#260 paren_expression]: #84
[#260 paren_left]: #91
[#260 primary_expression]: #75
[#260 primary_expression/1.0]: #82
[#260 primary_expression/1.0/0]: #87
[#260 relational_expression]: #58
[#260 shift_expression]: #62
[#260 short_circuit_and_expression]: #60
[#260 short_circuit_or_expression]: #59
[#260 singular_expression]: #69
[#260 star]: #73
[#260 tilde]: #72
[#260 unary_expression]: #67
[#262 builtin_value_name]: #267
[#263 additive_expression]: #66
[#263 and]: #74
[#263 attr]: #37
[#263 attribute]: #92
[#263 bang]: #71
[#263 binary_and_expression]: #63
[#263 binary_or_expression]: #64
[#263 binary_xor_expression]: #65
[#263 bitwise_expression]: #61
[#263 bool_literal]: #90
[#263 decimal_float_literal]: #95
[#263 decimal_int_literal]: #93
[#263 expression]: #266
[#263 float_literal]: #89
[#263 hex_float_literal]: #96
[#263 hex_int_literal]: #94
[#263 ident]: #81
[#263 int_literal]: #88
[#263 literal]: #83
[#263 minus]: #70
[#263 multiplicative_expression]: #68
[#263 paren_expression]: #84
[#263 paren_left]: #91
[#263 primary_expression]: #75
[#263 primary_expression/1.0]: #82
[#263 primary_expression/1.0/0]: #87
[#263 relational_expression]: #58
[#263 shift_expression]: #62
[#263 short_circuit_and_expression]: #60
[#263 short_circuit_or_expression]: #59
[#263 singular_expression]: #69
[#263 star]: #73
[#263 tilde]: #72
[#263 unary_expression]: #67
[#264 additive_expression]: #66
[#264 and]: #74
[#264 attr]: #37
[#264 attribute]: #92
[#264 bang]: #71
[#264 binary_and_expression]: #63
[#264 binary_or_expression]: #64
[#264 binary_xor_expression]: #65
[#264 bitwise_expression]: #61
[#264 bool_literal]: #90
[#264 decimal_float_literal]: #95
[#264 decimal_int_literal]: #93
[#264 expression]: #265
[#264 float_literal]: #89
[#264 hex_float_literal]: #96
[#264 hex_int_literal]: #94
[#264 ident]: #81
[#264 int_literal]: #88
[#264 literal]: #83
[#264 minus]: #70
[#264 multiplicative_expression]: #68
[#264 paren_expression]: #84
[#264 paren_left]: #91
[#264 primary_expression]: #75
[#264 primary_expression/1.0]: #82
[#264 primary_expression/1.0/0]: #87
[#264 relational_expression]: #58
[#264 shift_expression]: #62
[#264 short_circuit_and_expression]: #60
[#264 short_circuit_or_expression]: #59
[#264 singular_expression]: #69
[#264 star]: #73
[#264 tilde]: #72
[#264 unary_expression]: #67
[#265 attrib_end]: #523
[#265 attrib_end/0.0]: #401
[#265 comma]: #402
[#266 attrib_end]: #522
[#266 attrib_end/0.0]: #401
[#266 comma]: #402
[#267 attrib_end]: #521
[#267 attrib_end/0.0]: #401
[#267 comma]: #402
[#280 attrib_end]: #520
[#280 attrib_end/0.0]: #401
[#280 comma]: #402
[#281 attrib_end]: #519
[#281 attrib_end/0.0]: #401
[#281 comma]: #402
[#282 attrib_end]: #517
[#282 attrib_end/0.0]: #401
[#282 comma]: #518
[#286 attrib_end]: #516
[#286 attrib_end/0.0]: #401
[#286 comma]: #402
[#287 attrib_end]: #515
[#287 attrib_end/0.0]: #401
[#287 comma]: #402
[#288 attrib_end]: #513
[#288 attrib_end/0.0]: #401
[#288 comma]: #514
[#290 shift_left]: #227
[#290 shift_right]: #228
[#301 forward_slash]: #223
[#301 modulo]: #224
[#301 multiplicative_operator]: #221
[#301 star]: #222
[#306 bracket_left]: #212
[#306 component_or_swizzle_specifier]: #512
[#306 component_or_swizzle_specifier/1.2]: #511
[#306 period]: #213
[#307 bracket_left]: #212
[#307 component_or_swizzle_specifier]: #510
[#307 component_or_swizzle_specifier/2.2]: #509
[#307 period]: #213
[#317 bracket_right]: #507
[#318 texel_format]: #490
[#319 array_type_specifier]: #167
[#319 depth_texture_type]: #188
[#319 float16]: #163
[#319 float32]: #162
[#319 ident]: #329
[#319 int32]: #164
[#319 mat_prefix]: #332
[#319 multisampled_texture_type]: #190
[#319 pointer]: #166
[#319 sampled_texture_type]: #189
[#319 sampler_type]: #187
[#319 storage_texture_type]: #191
[#319 texture_and_sampler_types]: #169
[#319 type_specifier]: #489
[#319 type_specifier_without_ident]: #330
[#319 uint32]: #165
[#319 vec_prefix]: #331
[#320 array_type_specifier]: #167
[#320 depth_texture_type]: #188
[#320 float16]: #163
[#320 float32]: #162
[#320 ident]: #329
[#320 int32]: #164
[#320 mat_prefix]: #332
[#320 multisampled_texture_type]: #190
[#320 pointer]: #166
[#320 sampled_texture_type]: #189
[#320 sampler_type]: #187
[#320 storage_texture_type]: #191
[#320 texture_and_sampler_types]: #169
[#320 type_specifier]: #488
[#320 type_specifier_without_ident]: #330
[#320 uint32]: #165
[#320 vec_prefix]: #331
[#321 array_type_specifier]: #167
[#321 depth_texture_type]: #188
[#321 float16]: #163
[#321 float32]: #162
[#321 ident]: #329
[#321 int32]: #164
[#321 mat_prefix]: #332
[#321 multisampled_texture_type]: #190
[#321 pointer]: #166
[#321 sampled_texture_type]: #189
[#321 sampler_type]: #187
[#321 storage_texture_type]: #191
[#321 texture_and_sampler_types]: #169
[#321 type_specifier]: #487
[#321 type_specifier_without_ident]: #330
[#321 uint32]: #165
[#321 vec_prefix]: #331
[#322 address_space]: #486
[#323 array_type_specifier]: #167
[#323 depth_texture_type]: #188
[#323 float16]: #163
[#323 float32]: #162
[#323 ident]: #329
[#323 int32]: #164
[#323 mat_prefix]: #332
[#323 multisampled_texture_type]: #190
[#323 pointer]: #166
[#323 sampled_texture_type]: #189
[#323 sampler_type]: #187
[#323 storage_texture_type]: #191
[#323 texture_and_sampler_types]: #169
[#323 type_specifier]: #485
[#323 type_specifier_without_ident]: #330
[#323 uint32]: #165
[#323 vec_prefix]: #331
[#324 array_type_specifier]: #167
[#324 depth_texture_type]: #188
[#324 float16]: #163
[#324 float32]: #162
[#324 ident]: #329
[#324 int32]: #164
[#324 mat_prefix]: #332
[#324 multisampled_texture_type]: #190
[#324 pointer]: #166
[#324 sampled_texture_type]: #189
[#324 sampler_type]: #187
[#324 storage_texture_type]: #191
[#324 texture_and_sampler_types]: #169
[#324 type_specifier]: #484
[#324 type_specifier_without_ident]: #330
[#324 uint32]: #165
[#324 vec_prefix]: #331
[#325 array_type_specifier]: #167
[#325 depth_texture_type]: #188
[#325 float16]: #163
[#325 float32]: #162
[#325 ident]: #329
[#325 int32]: #164
[#325 mat_prefix]: #332
[#325 multisampled_texture_type]: #190
[#325 pointer]: #166
[#325 sampled_texture_type]: #189
[#325 sampler_type]: #187
[#325 storage_texture_type]: #191
[#325 texture_and_sampler_types]: #169
[#325 type_specifier]: #483
[#325 type_specifier_without_ident]: #330
[#325 uint32]: #165
[#325 vec_prefix]: #331
[#327 additive_expression]: #66
[#327 and]: #74
[#327 argument_expression_list/0.1]: #480
[#327 attr]: #37
[#327 attribute]: #92
[#327 bang]: #71
[#327 binary_and_expression]: #63
[#327 binary_or_expression]: #64
[#327 binary_xor_expression]: #65
[#327 bitwise_expression]: #61
[#327 bool_literal]: #90
[#327 decimal_float_literal]: #95
[#327 decimal_int_literal]: #93
[#327 expression]: #482
[#327 expression_comma_list]: #481
[#327 float_literal]: #89
[#327 hex_float_literal]: #96
[#327 hex_int_literal]: #94
[#327 ident]: #81
[#327 int_literal]: #88
[#327 literal]: #83
[#327 minus]: #70
[#327 multiplicative_expression]: #68
[#327 paren_expression]: #84
[#327 paren_left]: #91
[#327 primary_expression]: #75
[#327 primary_expression/1.0]: #82
[#327 primary_expression/1.0/0]: #87
[#327 relational_expression]: #58
[#327 shift_expression]: #62
[#327 short_circuit_and_expression]: #60
[#327 short_circuit_or_expression]: #59
[#327 singular_expression]: #69
[#327 star]: #73
[#327 tilde]: #72
[#327 unary_expression]: #67
[#328 greater_than]: #479
[#331 less_than]: #325
[#332 less_than]: #324
[#333 less_than]: #323
[#336 brace_right]: #477
[#338 and]: #376
[#338 assignment_statement]: #366
[#338 attr]: #37
[#338 attribute]: #373
[#338 brace_left]: #150
[#338 break_statement]: #348
[#338 compound_statement]: #352
[#338 compound_statement/0.1/0]: #476
[#338 continue_statement]: #349
[#338 core_lhs_expression]: #374
[#338 decrement_statement]: #368
[#338 for_statement]: #344
[#338 func_call_statement]: #346
[#338 func_call_statement/0.0]: #360
[#338 func_call_statement/0.0/0]: #370
[#338 ident]: #378
[#338 if_clause]: #355
[#338 if_statement]: #341
[#338 increment_statement]: #367
[#338 lhs_expression]: #371
[#338 loop_statement]: #343
[#338 paren_left]: #379
[#338 return_statement]: #340
[#338 semicolon]: #339
[#338 star]: #375
[#338 statement]: #338
[#338 static_assert_statement]: #353
[#338 switch_statement]: #342
[#338 underscore]: #372
[#338 variable_decl]: #361
[#338 variable_statement]: #347
[#338 variable_updating_statement]: #351
[#338 while_statement]: #345
[#340 semicolon]: #475
[#346 semicolon]: #474
[#347 semicolon]: #473
[#348 semicolon]: #472
[#349 semicolon]: #471
[#350 semicolon]: #470
[#351 semicolon]: #469
[#353 semicolon]: #468
[#354 additive_expression]: #66
[#354 and]: #74
[#354 attr]: #37
[#354 attribute]: #92
[#354 bang]: #71
[#354 binary_and_expression]: #63
[#354 binary_or_expression]: #64
[#354 binary_xor_expression]: #65
[#354 bitwise_expression]: #61
[#354 bool_literal]: #90
[#354 decimal_float_literal]: #95
[#354 decimal_int_literal]: #93
[#354 expression]: #467
[#354 float_literal]: #89
[#354 hex_float_literal]: #96
[#354 hex_int_literal]: #94
[#354 ident]: #81
[#354 int_literal]: #88
[#354 literal]: #83
[#354 minus]: #70
[#354 multiplicative_expression]: #68
[#354 paren_expression]: #84
[#354 paren_left]: #91
[#354 primary_expression]: #75
[#354 primary_expression/1.0]: #82
[#354 primary_expression/1.0/0]: #87
[#354 relational_expression]: #58
[#354 return_statement/0.1]: #466
[#354 shift_expression]: #62
[#354 short_circuit_and_expression]: #60
[#354 short_circuit_or_expression]: #59
[#354 singular_expression]: #69
[#354 star]: #73
[#354 tilde]: #72
[#354 unary_expression]: #67
[#355 else_if_clause]: #464
[#355 if_statement/0.1]: #462
[#355 if_statement/0.1/0]: #463
[#356 additive_expression]: #66
[#356 and]: #74
[#356 attr]: #37
[#356 attribute]: #92
[#356 bang]: #71
[#356 binary_and_expression]: #63
[#356 binary_or_expression]: #64
[#356 binary_xor_expression]: #65
[#356 bitwise_expression]: #61
[#356 bool_literal]: #90
[#356 decimal_float_literal]: #95
[#356 decimal_int_literal]: #93
[#356 expression]: #461
[#356 float_literal]: #89
[#356 hex_float_literal]: #96
[#356 hex_int_literal]: #94
[#356 ident]: #81
[#356 int_literal]: #88
[#356 literal]: #83
[#356 minus]: #70
[#356 multiplicative_expression]: #68
[#356 paren_expression]: #84
[#356 paren_left]: #91
[#356 primary_expression]: #75
[#356 primary_expression/1.0]: #82
[#356 primary_expression/1.0/0]: #87
[#356 relational_expression]: #58
[#356 shift_expression]: #62
[#356 short_circuit_and_expression]: #60
[#356 short_circuit_or_expression]: #59
[#356 singular_expression]: #69
[#356 star]: #73
[#356 tilde]: #72
[#356 unary_expression]: #67
[#357 brace_left]: #460
[#358 paren_left]: #459
[#359 additive_expression]: #66
[#359 and]: #74
[#359 attr]: #37
[#359 attribute]: #92
[#359 bang]: #71
[#359 binary_and_expression]: #63
[#359 binary_or_expression]: #64
[#359 binary_xor_expression]: #65
[#359 bitwise_expression]: #61
[#359 bool_literal]: #90
[#359 decimal_float_literal]: #95
[#359 decimal_int_literal]: #93
[#359 expression]: #458
[#359 float_literal]: #89
[#359 hex_float_literal]: #96
[#359 hex_int_literal]: #94
[#359 ident]: #81
[#359 int_literal]: #88
[#359 literal]: #83
[#359 minus]: #70
[#359 multiplicative_expression]: #68
[#359 paren_expression]: #84
[#359 paren_left]: #91
[#359 primary_expression]: #75
[#359 primary_expression/1.0]: #82
[#359 primary_expression/1.0/0]: #87
[#359 relational_expression]: #58
[#359 shift_expression]: #62
[#359 short_circuit_and_expression]: #60
[#359 short_circuit_or_expression]: #59
[#359 singular_expression]: #69
[#359 star]: #73
[#359 tilde]: #72
[#359 unary_expression]: #67
[#360 array_type_specifier]: #167
[#360 call_phrase]: #456
[#360 callable]: #457
[#360 depth_texture_type]: #188
[#360 float16]: #163
[#360 float32]: #162
[#360 ident]: #156
[#360 int32]: #164
[#360 mat_prefix]: #159
[#360 multisampled_texture_type]: #190
[#360 pointer]: #166
[#360 sampled_texture_type]: #189
[#360 sampler_type]: #187
[#360 storage_texture_type]: #191
[#360 texture_and_sampler_types]: #169
[#360 type_specifier_without_ident]: #157
[#360 uint32]: #165
[#360 vec_prefix]: #158
[#361 equal]: #455
[#362 ident]: #116
[#362 optionally_typed_ident]: #454
[#363 ident]: #116
[#363 optionally_typed_ident]: #453
[#369 additive_expression]: #66
[#369 and]: #74
[#369 attr]: #37
[#369 attribute]: #92
[#369 bang]: #71
[#369 binary_and_expression]: #63
[#369 binary_or_expression]: #64
[#369 binary_xor_expression]: #65
[#369 bitwise_expression]: #61
[#369 bool_literal]: #90
[#369 decimal_float_literal]: #95
[#369 decimal_int_literal]: #93
[#369 expression]: #452
[#369 float_literal]: #89
[#369 hex_float_literal]: #96
[#369 hex_int_literal]: #94
[#369 ident]: #81
[#369 int_literal]: #88
[#369 literal]: #83
[#369 minus]: #70
[#369 multiplicative_expression]: #68
[#369 paren_expression]: #84
[#369 paren_left]: #91
[#369 primary_expression]: #75
[#369 primary_expression/1.0]: #82
[#369 primary_expression/1.0/0]: #87
[#369 relational_expression]: #58
[#369 shift_expression]: #62
[#369 short_circuit_and_expression]: #60
[#369 short_circuit_or_expression]: #59
[#369 singular_expression]: #69
[#369 star]: #73
[#369 tilde]: #72
[#369 unary_expression]: #67
[#371 and_equal]: #437
[#371 assignment_statement/0.1]: #425
[#371 compound_assignment_operator]: #429
[#371 division_equal]: #435
[#371 equal]: #428
[#371 minus_equal]: #433
[#371 minus_minus]: #427
[#371 modulo_equal]: #436
[#371 or_equal]: #438
[#371 plus_equal]: #432
[#371 plus_plus]: #426
[#371 shift_left_equal]: #441
[#371 shift_right_equal]: #440
[#371 times_equal]: #434
[#371 xor_equal]: #439
[#372 equal]: #424
[#373 attr]: #37
[#373 attribute]: #373
[#373 func_call_statement/0.0/0]: #423
[#374 bracket_left]: #212
[#374 component_or_swizzle_specifier]: #422
[#374 lhs_expression/0.1]: #421
[#374 period]: #213
[#375 and]: #376
[#375 core_lhs_expression]: #374
[#375 ident]: #378
[#375 lhs_expression]: #420
[#375 paren_left]: #379
[#375 star]: #375
[#376 and]: #376
[#376 core_lhs_expression]: #374
[#376 ident]: #378
[#376 lhs_expression]: #419
[#376 paren_left]: #379
[#376 star]: #375
[#379 and]: #376
[#379 core_lhs_expression]: #374
[#379 ident]: #378
[#379 lhs_expression]: #418
[#379 paren_left]: #379
[#379 star]: #375
[#380 attr]: #37
[#380 attribute]: #417
[#380 function_header/0.3]: #412
[#380 param]: #414
[#380 param/0.0]: #415
[#380 param/0.0/0]: #416
[#380 param_list]: #413
[#381 comma]: #411
[#381 struct_body_decl/0.2]: #408
[#381 struct_body_decl/0.2/0]: #409
[#381 struct_body_decl/0.2/0/0.0]: #410
[#382 member_ident]: #407
[#384 attr]: #37
[#384 attribute]: #384
[#384 struct_member/0.0/0]: #406
[#387 additive_expression]: #66
[#387 and]: #74
[#387 attr]: #37
[#387 attribute]: #92
[#387 bang]: #71
[#387 binary_and_expression]: #63
[#387 binary_or_expression]: #64
[#387 binary_xor_expression]: #65
[#387 bitwise_expression]: #61
[#387 bool_literal]: #90
[#387 decimal_float_literal]: #95
[#387 decimal_int_literal]: #93
[#387 expression]: #405
[#387 float_literal]: #89
[#387 hex_float_literal]: #96
[#387 hex_int_literal]: #94
[#387 ident]: #81
[#387 int_literal]: #88
[#387 literal]: #83
[#387 minus]: #70
[#387 multiplicative_expression]: #68
[#387 paren_expression]: #84
[#387 paren_left]: #91
[#387 primary_expression]: #75
[#387 primary_expression/1.0]: #82
[#387 primary_expression/1.0/0]: #87
[#387 relational_expression]: #58
[#387 shift_expression]: #62
[#387 short_circuit_and_expression]: #60
[#387 short_circuit_or_expression]: #59
[#387 singular_expression]: #69
[#387 star]: #73
[#387 tilde]: #72
[#387 unary_expression]: #67
[#391 comma]: #404
[#391 variable_qualifier/0.2]: #403
[#398 attrib_end]: #400
[#398 attrib_end/0.0]: #401
[#398 comma]: #402
[#401 paren_right]: #587
[#403 greater_than]: #586
[#404 access_mode]: #582
[#407 colon]: #581
[#408 comma]: #580
[#408 struct_body_decl/0.3]: #579
[#410 comma]: #411
[#410 struct_body_decl/0.2/0]: #578
[#410 struct_body_decl/0.2/0/0.0]: #410
[#411 attr]: #37
[#411 attribute]: #384
[#411 struct_member]: #577
[#411 struct_member/0.0]: #382
[#411 struct_member/0.0/0]: #383
[#412 paren_right]: #576
[#414 comma]: #575
[#414 param_list/0.1]: #572
[#414 param_list/0.1/0]: #573
[#414 param_list/0.1/0/0.0]: #574
[#415 ident]: #571
[#417 attr]: #37
[#417 attribute]: #417
[#417 param/0.0/0]: #570
[#418 paren_right]: #569
[#424 additive_expression]: #66
[#424 and]: #74
[#424 attr]: #37
[#424 attribute]: #92
[#424 bang]: #71
[#424 binary_and_expression]: #63
[#424 binary_or_expression]: #64
[#424 binary_xor_expression]: #65
[#424 bitwise_expression]: #61
[#424 bool_literal]: #90
[#424 decimal_float_literal]: #95
[#424 decimal_int_literal]: #93
[#424 expression]: #568
[#424 float_literal]: #89
[#424 hex_float_literal]: #96
[#424 hex_int_literal]: #94
[#424 ident]: #81
[#424 int_literal]: #88
[#424 literal]: #83
[#424 minus]: #70
[#424 multiplicative_expression]: #68
[#424 paren_expression]: #84
[#424 paren_left]: #91
[#424 primary_expression]: #75
[#424 primary_expression/1.0]: #82
[#424 primary_expression/1.0/0]: #87
[#424 relational_expression]: #58
[#424 shift_expression]: #62
[#424 short_circuit_and_expression]: #60
[#424 short_circuit_or_expression]: #59
[#424 singular_expression]: #69
[#424 star]: #73
[#424 tilde]: #72
[#424 unary_expression]: #67
[#425 additive_expression]: #66
[#425 and]: #74
[#425 attr]: #37
[#425 attribute]: #92
[#425 bang]: #71
[#425 binary_and_expression]: #63
[#425 binary_or_expression]: #64
[#425 binary_xor_expression]: #65
[#425 bitwise_expression]: #61
[#425 bool_literal]: #90
[#425 decimal_float_literal]: #95
[#425 decimal_int_literal]: #93
[#425 expression]: #567
[#425 float_literal]: #89
[#425 hex_float_literal]: #96
[#425 hex_int_literal]: #94
[#425 ident]: #81
[#425 int_literal]: #88
[#425 literal]: #83
[#425 minus]: #70
[#425 multiplicative_expression]: #68
[#425 paren_expression]: #84
[#425 paren_left]: #91
[#425 primary_expression]: #75
[#425 primary_expression/1.0]: #82
[#425 primary_expression/1.0/0]: #87
[#425 relational_expression]: #58
[#425 shift_expression]: #62
[#425 short_circuit_and_expression]: #60
[#425 short_circuit_or_expression]: #59
[#425 singular_expression]: #69
[#425 star]: #73
[#425 tilde]: #72
[#425 unary_expression]: #67
[#452 brace_left]: #150
[#452 compound_statement]: #566
[#453 equal]: #565
[#454 equal]: #564
[#455 additive_expression]: #66
[#455 and]: #74
[#455 attr]: #37
[#455 attribute]: #92
[#455 bang]: #71
[#455 binary_and_expression]: #63
[#455 binary_or_expression]: #64
[#455 binary_xor_expression]: #65
[#455 bitwise_expression]: #61
[#455 bool_literal]: #90
[#455 decimal_float_literal]: #95
[#455 decimal_int_literal]: #93
[#455 expression]: #563
[#455 float_literal]: #89
[#455 hex_float_literal]: #96
[#455 hex_int_literal]: #94
[#455 ident]: #81
[#455 int_literal]: #88
[#455 literal]: #83
[#455 minus]: #70
[#455 multiplicative_expression]: #68
[#455 paren_expression]: #84
[#455 paren_left]: #91
[#455 primary_expression]: #75
[#455 primary_expression/1.0]: #82
[#455 primary_expression/1.0/0]: #87
[#455 relational_expression]: #58
[#455 shift_expression]: #62
[#455 short_circuit_and_expression]: #60
[#455 short_circuit_or_expression]: #59
[#455 singular_expression]: #69
[#455 star]: #73
[#455 tilde]: #72
[#455 unary_expression]: #67
[#457 argument_expression_list]: #562
[#457 paren_left]: #327
[#458 brace_left]: #150
[#458 compound_statement]: #561
[#459 and]: #376
[#459 assignment_statement]: #366
[#459 attr]: #37
[#459 attribute]: #373
[#459 core_lhs_expression]: #374
[#459 decrement_statement]: #368
[#459 for_header]: #555
[#459 for_header/0.0]: #556
[#459 for_init]: #557
[#459 func_call_statement]: #560
[#459 func_call_statement/0.0]: #360
[#459 func_call_statement/0.0/0]: #370
[#459 ident]: #378
[#459 increment_statement]: #367
[#459 lhs_expression]: #371
[#459 paren_left]: #379
[#459 star]: #375
[#459 underscore]: #372
[#459 variable_decl]: #361
[#459 variable_statement]: #558
[#459 variable_updating_statement]: #559
[#460 and]: #376
[#460 assignment_statement]: #366
[#460 attr]: #37
[#460 attribute]: #373
[#460 brace_left]: #150
[#460 break_statement]: #348
[#460 compound_statement]: #352
[#460 continue_statement]: #349
[#460 core_lhs_expression]: #374
[#460 decrement_statement]: #368
[#460 for_statement]: #344
[#460 func_call_statement]: #346
[#460 func_call_statement/0.0]: #360
[#460 func_call_statement/0.0/0]: #370
[#460 ident]: #378
[#460 if_clause]: #355
[#460 if_statement]: #341
[#460 increment_statement]: #367
[#460 lhs_expression]: #371
[#460 loop_statement]: #343
[#460 loop_statement/0.2]: #552
[#460 loop_statement/0.2/0]: #553
[#460 paren_left]: #379
[#460 return_statement]: #340
[#460 semicolon]: #339
[#460 star]: #375
[#460 statement]: #554
[#460 static_assert_statement]: #353
[#460 switch_statement]: #342
[#460 underscore]: #372
[#460 variable_decl]: #361
[#460 variable_statement]: #347
[#460 variable_updating_statement]: #351
[#460 while_statement]: #345
[#461 brace_left]: #551
[#462 else_clause]: #549
[#462 if_statement/0.2]: #548
[#464 else_if_clause]: #464
[#464 if_statement/0.1/0]: #547
[#479 paren_expression]: #545
[#479 paren_left]: #91
[#480 paren_right]: #544
[#482 comma]: #543
[#482 expression_comma_list/0.1]: #540
[#482 expression_comma_list/0.1/0]: #541
[#482 expression_comma_list/0.1/0/0.0]: #542
[#483 greater_than]: #539
[#484 greater_than]: #538
[#485 array_type_specifier/0.3]: #536
[#485 comma]: #537
[#486 comma]: #535
[#487 greater_than]: #534
[#488 greater_than]: #533
[#489 greater_than]: #532
[#490 comma]: #531
[#507 bracket_left]: #212
[#507 component_or_swizzle_specifier]: #530
[#507 component_or_swizzle_specifier/0.3]: #529
[#507 period]: #213
[#514 additive_expression]: #66
[#514 and]: #74
[#514 attr]: #37
[#514 attribute]: #92
[#514 bang]: #71
[#514 binary_and_expression]: #63
[#514 binary_or_expression]: #64
[#514 binary_xor_expression]: #65
[#514 bitwise_expression]: #61
[#514 bool_literal]: #90
[#514 decimal_float_literal]: #95
[#514 decimal_int_literal]: #93
[#514 expression]: #528
[#514 float_literal]: #89
[#514 hex_float_literal]: #96
[#514 hex_int_literal]: #94
[#514 ident]: #81
[#514 int_literal]: #88
[#514 literal]: #83
[#514 minus]: #70
[#514 multiplicative_expression]: #68
[#514 paren_expression]: #84
[#514 paren_left]: #91
[#514 primary_expression]: #75
[#514 primary_expression/1.0]: #82
[#514 primary_expression/1.0/0]: #87
[#514 relational_expression]: #58
[#514 shift_expression]: #62
[#514 short_circuit_and_expression]: #60
[#514 short_circuit_or_expression]: #59
[#514 singular_expression]: #69
[#514 star]: #73
[#514 tilde]: #72
[#514 unary_expression]: #67
[#518 interpolation_sample_name]: #524
[#524 attrib_end]: #628
[#524 attrib_end/0.0]: #401
[#524 comma]: #402
[#528 attrib_end]: #626
[#528 attrib_end/0.0]: #401
[#528 comma]: #627
[#531 access_mode]: #625
[#535 array_type_specifier]: #167
[#535 depth_texture_type]: #188
[#535 float16]: #163
[#535 float32]: #162
[#535 ident]: #329
[#535 int32]: #164
[#535 mat_prefix]: #332
[#535 multisampled_texture_type]: #190
[#535 pointer]: #166
[#535 sampled_texture_type]: #189
[#535 sampler_type]: #187
[#535 storage_texture_type]: #191
[#535 texture_and_sampler_types]: #169
[#535 type_specifier]: #624
[#535 type_specifier_without_ident]: #330
[#535 uint32]: #165
[#535 vec_prefix]: #331
[#536 greater_than]: #623
[#537 additive_expression]: #620
[#537 and]: #74
[#537 attr]: #37
[#537 attribute]: #92
[#537 bang]: #71
[#537 binary_and_expression]: #63
[#537 binary_or_expression]: #64
[#537 binary_xor_expression]: #65
[#537 bitwise_expression]: #621
[#537 bool_literal]: #90
[#537 decimal_float_literal]: #95
[#537 decimal_int_literal]: #93
[#537 element_count_expression]: #619
[#537 float_literal]: #89
[#537 hex_float_literal]: #96
[#537 hex_int_literal]: #94
[#537 ident]: #81
[#537 int_literal]: #88
[#537 literal]: #83
[#537 minus]: #70
[#537 multiplicative_expression]: #68
[#537 paren_expression]: #84
[#537 paren_left]: #91
[#537 primary_expression]: #75
[#537 primary_expression/1.0]: #82
[#537 primary_expression/1.0/0]: #87
[#537 singular_expression]: #69
[#537 star]: #73
[#537 tilde]: #72
[#537 unary_expression]: #622
[#540 comma]: #618
[#540 expression_comma_list/0.2]: #617
[#542 comma]: #543
[#542 expression_comma_list/0.1/0]: #616
[#542 expression_comma_list/0.1/0/0.0]: #542
[#543 additive_expression]: #66
[#543 and]: #74
[#543 attr]: #37
[#543 attribute]: #92
[#543 bang]: #71
[#543 binary_and_expression]: #63
[#543 binary_or_expression]: #64
[#543 binary_xor_expression]: #65
[#543 bitwise_expression]: #61
[#543 bool_literal]: #90
[#543 decimal_float_literal]: #95
[#543 decimal_int_literal]: #93
[#543 expression]: #615
[#543 float_literal]: #89
[#543 hex_float_literal]: #96
[#543 hex_int_literal]: #94
[#543 ident]: #81
[#543 int_literal]: #88
[#543 literal]: #83
[#543 minus]: #70
[#543 multiplicative_expression]: #68
[#543 paren_expression]: #84
[#543 paren_left]: #91
[#543 primary_expression]: #75
[#543 primary_expression/1.0]: #82
[#543 primary_expression/1.0/0]: #87
[#543 relational_expression]: #58
[#543 shift_expression]: #62
[#543 short_circuit_and_expression]: #60
[#543 short_circuit_or_expression]: #59
[#543 singular_expression]: #69
[#543 star]: #73
[#543 tilde]: #72
[#543 unary_expression]: #67
[#546 additive_expression]: #66
[#546 and]: #74
[#546 attr]: #37
[#546 attribute]: #92
[#546 bang]: #71
[#546 binary_and_expression]: #63
[#546 binary_or_expression]: #64
[#546 binary_xor_expression]: #65
[#546 bitwise_expression]: #61
[#546 bool_literal]: #90
[#546 decimal_float_literal]: #95
[#546 decimal_int_literal]: #93
[#546 expression]: #614
[#546 float_literal]: #89
[#546 hex_float_literal]: #96
[#546 hex_int_literal]: #94
[#546 ident]: #81
[#546 int_literal]: #88
[#546 literal]: #83
[#546 minus]: #70
[#546 multiplicative_expression]: #68
[#546 paren_expression]: #84
[#546 paren_left]: #91
[#546 primary_expression]: #75
[#546 primary_expression/1.0]: #82
[#546 primary_expression/1.0/0]: #87
[#546 relational_expression]: #58
[#546 shift_expression]: #62
[#546 short_circuit_and_expression]: #60
[#546 short_circuit_or_expression]: #59
[#546 singular_expression]: #69
[#546 star]: #73
[#546 tilde]: #72
[#546 unary_expression]: #67
[#550 brace_left]: #150
[#550 compound_statement]: #613
[#551 case_clause]: #609
[#551 default_alone_clause]: #610
[#551 switch_body]: #608
[#551 switch_statement/0.3]: #606
[#551 switch_statement/0.3/0]: #607
[#552 continuing_statement]: #604
[#552 loop_statement/0.3]: #603
[#554 and]: #376
[#554 assignment_statement]: #366
[#554 attr]: #37
[#554 attribute]: #373
[#554 brace_left]: #150
[#554 break_statement]: #348
[#554 compound_statement]: #352
[#554 continue_statement]: #349
[#554 core_lhs_expression]: #374
[#554 decrement_statement]: #368
[#554 for_statement]: #344
[#554 func_call_statement]: #346
[#554 func_call_statement/0.0]: #360
[#554 func_call_statement/0.0/0]: #370
[#554 ident]: #378
[#554 if_clause]: #355
[#554 if_statement]: #341
[#554 increment_statement]: #367
[#554 lhs_expression]: #371
[#554 loop_statement]: #343
[#554 loop_statement/0.2/0]: #602
[#554 paren_left]: #379
[#554 return_statement]: #340
[#554 semicolon]: #339
[#554 star]: #375
[#554 statement]: #554
[#554 static_assert_statement]: #353
[#554 switch_statement]: #342
[#554 underscore]: #372
[#554 variable_decl]: #361
[#554 variable_statement]: #347
[#554 variable_updating_statement]: #351
[#554 while_statement]: #345
[#555 paren_right]: #601
[#556 semicolon]: #600
[#564 additive_expression]: #66
[#564 and]: #74
[#564 attr]: #37
[#564 attribute]: #92
[#564 bang]: #71
[#564 binary_and_expression]: #63
[#564 binary_or_expression]: #64
[#564 binary_xor_expression]: #65
[#564 bitwise_expression]: #61
[#564 bool_literal]: #90
[#564 decimal_float_literal]: #95
[#564 decimal_int_literal]: #93
[#564 expression]: #599
[#564 float_literal]: #89
[#564 hex_float_literal]: #96
[#564 hex_int_literal]: #94
[#564 ident]: #81
[#564 int_literal]: #88
[#564 literal]: #83
[#564 minus]: #70
[#564 multiplicative_expression]: #68
[#564 paren_expression]: #84
[#564 paren_left]: #91
[#564 primary_expression]: #75
[#564 primary_expression/1.0]: #82
[#564 primary_expression/1.0/0]: #87
[#564 relational_expression]: #58
[#564 shift_expression]: #62
[#564 short_circuit_and_expression]: #60
[#564 short_circuit_or_expression]: #59
[#564 singular_expression]: #69
[#564 star]: #73
[#564 tilde]: #72
[#564 unary_expression]: #67
[#565 additive_expression]: #66
[#565 and]: #74
[#565 attr]: #37
[#565 attribute]: #92
[#565 bang]: #71
[#565 binary_and_expression]: #63
[#565 binary_or_expression]: #64
[#565 binary_xor_expression]: #65
[#565 bitwise_expression]: #61
[#565 bool_literal]: #90
[#565 decimal_float_literal]: #95
[#565 decimal_int_literal]: #93
[#565 expression]: #598
[#565 float_literal]: #89
[#565 hex_float_literal]: #96
[#565 hex_int_literal]: #94
[#565 ident]: #81
[#565 int_literal]: #88
[#565 literal]: #83
[#565 minus]: #70
[#565 multiplicative_expression]: #68
[#565 paren_expression]: #84
[#565 paren_left]: #91
[#565 primary_expression]: #75
[#565 primary_expression/1.0]: #82
[#565 primary_expression/1.0/0]: #87
[#565 relational_expression]: #58
[#565 shift_expression]: #62
[#565 short_circuit_and_expression]: #60
[#565 short_circuit_or_expression]: #59
[#565 singular_expression]: #69
[#565 star]: #73
[#565 tilde]: #72
[#565 unary_expression]: #67
[#571 colon]: #597
[#572 comma]: #596
[#572 param_list/0.2]: #595
[#574 comma]: #575
[#574 param_list/0.1/0]: #594
[#574 param_list/0.1/0/0.0]: #574
[#575 attr]: #37
[#575 attribute]: #417
[#575 param]: #593
[#575 param/0.0]: #415
[#575 param/0.0/0]: #416
[#576 arrow]: #591
[#576 function_header/0.5]: #590
[#579 brace_right]: #589
[#581 array_type_specifier]: #167
[#581 depth_texture_type]: #188
[#581 float16]: #163
[#581 float32]: #162
[#581 ident]: #329
[#581 int32]: #164
[#581 mat_prefix]: #332
[#581 multisampled_texture_type]: #190
[#581 pointer]: #166
[#581 sampled_texture_type]: #189
[#581 sampler_type]: #187
[#581 storage_texture_type]: #191
[#581 texture_and_sampler_types]: #169
[#581 type_specifier]: #588
[#581 type_specifier_without_ident]: #330
[#581 uint32]: #165
[#581 vec_prefix]: #331
[#591 attr]: #37
[#591 attribute]: #651
[#591 function_header/0.5/0.1]: #649
[#591 function_header/0.5/0.1/0]: #650
[#597 array_type_specifier]: #167
[#597 depth_texture_type]: #188
[#597 float16]: #163
[#597 float32]: #162
[#597 ident]: #329
[#597 int32]: #164
[#597 mat_prefix]: #332
[#597 multisampled_texture_type]: #190
[#597 pointer]: #166
[#597 sampled_texture_type]: #189
[#597 sampler_type]: #187
[#597 storage_texture_type]: #191
[#597 texture_and_sampler_types]: #169
[#597 type_specifier]: #648
[#597 type_specifier_without_ident]: #330
[#597 uint32]: #165
[#597 vec_prefix]: #331
[#600 additive_expression]: #66
[#600 and]: #74
[#600 attr]: #37
[#600 attribute]: #92
[#600 bang]: #71
[#600 binary_and_expression]: #63
[#600 binary_or_expression]: #64
[#600 binary_xor_expression]: #65
[#600 bitwise_expression]: #61
[#600 bool_literal]: #90
[#600 decimal_float_literal]: #95
[#600 decimal_int_literal]: #93
[#600 expression]: #647
[#600 float_literal]: #89
[#600 for_header/0.2]: #646
[#600 hex_float_literal]: #96
[#600 hex_int_literal]: #94
[#600 ident]: #81
[#600 int_literal]: #88
[#600 literal]: #83
[#600 minus]: #70
[#600 multiplicative_expression]: #68
[#600 paren_expression]: #84
[#600 paren_left]: #91
[#600 primary_expression]: #75
[#600 primary_expression/1.0]: #82
[#600 primary_expression/1.0/0]: #87
[#600 relational_expression]: #58
[#600 shift_expression]: #62
[#600 short_circuit_and_expression]: #60
[#600 short_circuit_or_expression]: #59
[#600 singular_expression]: #69
[#600 star]: #73
[#600 tilde]: #72
[#600 unary_expression]: #67
[#601 brace_left]: #150
[#601 compound_statement]: #645
[#603 brace_right]: #644
[#605 brace_left]: #643
[#605 continuing_compound_statement]: #642
[#606 brace_right]: #641
[#608 case_clause]: #609
[#608 default_alone_clause]: #610
[#608 switch_body]: #608
[#608 switch_statement/0.3/0]: #640
[#611 additive_expression]: #66
[#611 and]: #74
[#611 attr]: #37
[#611 attribute]: #92
[#611 bang]: #71
[#611 binary_and_expression]: #63
[#611 binary_or_expression]: #64
[#611 binary_xor_expression]: #65
[#611 bitwise_expression]: #61
[#611 bool_literal]: #90
[#611 case_selector]: #637
[#611 case_selectors]: #636
[#611 decimal_float_literal]: #95
[#611 decimal_int_literal]: #93
[#611 expression]: #639
[#611 float_literal]: #89
[#611 hex_float_literal]: #96
[#611 hex_int_literal]: #94
[#611 ident]: #81
[#611 int_literal]: #88
[#611 literal]: #83
[#611 minus]: #70
[#611 multiplicative_expression]: #68
[#611 paren_expression]: #84
[#611 paren_left]: #91
[#611 primary_expression]: #75
[#611 primary_expression/1.0]: #82
[#611 primary_expression/1.0/0]: #87
[#611 relational_expression]: #58
[#611 shift_expression]: #62
[#611 short_circuit_and_expression]: #60
[#611 short_circuit_or_expression]: #59
[#611 singular_expression]: #69
[#611 star]: #73
[#611 tilde]: #72
[#611 unary_expression]: #67
[#612 colon]: #635
[#612 default_alone_clause/0.1]: #634
[#614 brace_left]: #150
[#614 compound_statement]: #633
[#620 additive_operator]: #231
[#620 minus]: #233
[#620 plus]: #232
[#624 comma]: #632
[#624 type_specifier_without_ident/7.5]: #631
[#625 greater_than]: #630
[#627 additive_expression]: #66
[#627 and]: #74
[#627 attr]: #37
[#627 attribute]: #92
[#627 bang]: #71
[#627 binary_and_expression]: #63
[#627 binary_or_expression]: #64
[#627 binary_xor_expression]: #65
[#627 bitwise_expression]: #61
[#627 bool_literal]: #90
[#627 decimal_float_literal]: #95
[#627 decimal_int_literal]: #93
[#627 expression]: #629
[#627 float_literal]: #89
[#627 hex_float_literal]: #96
[#627 hex_int_literal]: #94
[#627 ident]: #81
[#627 int_literal]: #88
[#627 literal]: #83
[#627 minus]: #70
[#627 multiplicative_expression]: #68
[#627 paren_expression]: #84
[#627 paren_left]: #91
[#627 primary_expression]: #75
[#627 primary_expression/1.0]: #82
[#627 primary_expression/1.0/0]: #87
[#627 relational_expression]: #58
[#627 shift_expression]: #62
[#627 short_circuit_and_expression]: #60
[#627 short_circuit_or_expression]: #59
[#627 singular_expression]: #69
[#627 star]: #73
[#627 tilde]: #72
[#627 unary_expression]: #67
[#629 attrib_end]: #667
[#629 attrib_end/0.0]: #401
[#629 comma]: #402
[#631 greater_than]: #666
[#632 access_mode]: #665
[#634 brace_left]: #150
[#634 compound_statement]: #664
[#636 case_clause/0.2]: #662
[#636 colon]: #663
[#637 case_selectors/0.1]: #658
[#637 case_selectors/0.1/0]: #659
[#637 case_selectors/0.1/0/0.0]: #660
[#637 comma]: #661
[#643 and]: #376
[#643 assignment_statement]: #366
[#643 attr]: #37
[#643 attribute]: #373
[#643 brace_left]: #150
[#643 break_statement]: #348
[#643 compound_statement]: #352
[#643 continue_statement]: #349
[#643 continuing_compound_statement/0.1]: #655
[#643 continuing_compound_statement/0.1/0]: #656
[#643 core_lhs_expression]: #374
[#643 decrement_statement]: #368
[#643 for_statement]: #344
[#643 func_call_statement]: #346
[#643 func_call_statement/0.0]: #360
[#643 func_call_statement/0.0/0]: #370
[#643 ident]: #378
[#643 if_clause]: #355
[#643 if_statement]: #341
[#643 increment_statement]: #367
[#643 lhs_expression]: #371
[#643 loop_statement]: #343
[#643 paren_left]: #379
[#643 return_statement]: #340
[#643 semicolon]: #339
[#643 star]: #375
[#643 statement]: #657
[#643 static_assert_statement]: #353
[#643 switch_statement]: #342
[#643 underscore]: #372
[#643 variable_decl]: #361
[#643 variable_statement]: #347
[#643 variable_updating_statement]: #351
[#643 while_statement]: #345
[#646 semicolon]: #654
[#649 array_type_specifier]: #167
[#649 depth_texture_type]: #188
[#649 float16]: #163
[#649 float32]: #162
[#649 ident]: #329
[#649 int32]: #164
[#649 mat_prefix]: #332
[#649 multisampled_texture_type]: #190
[#649 pointer]: #166
[#649 sampled_texture_type]: #189
[#649 sampler_type]: #187
[#649 storage_texture_type]: #191
[#649 texture_and_sampler_types]: #169
[#649 type_specifier]: #653
[#649 type_specifier_without_ident]: #330
[#649 uint32]: #165
[#649 vec_prefix]: #331
[#651 attr]: #37
[#651 attribute]: #651
[#651 function_header/0.5/0.1/0]: #652
[#654 and]: #376
[#654 assignment_statement]: #366
[#654 attr]: #37
[#654 attribute]: #373
[#654 core_lhs_expression]: #374
[#654 decrement_statement]: #368
[#654 for_header/0.4]: #677
[#654 for_update]: #678
[#654 func_call_statement]: #680
[#654 func_call_statement/0.0]: #360
[#654 func_call_statement/0.0/0]: #370
[#654 ident]: #378
[#654 increment_statement]: #367
[#654 lhs_expression]: #371
[#654 paren_left]: #379
[#654 star]: #375
[#654 underscore]: #372
[#654 variable_updating_statement]: #679
[#655 break_if_statement]: #675
[#655 continuing_compound_statement/0.2]: #674
[#657 and]: #376
[#657 assignment_statement]: #366
[#657 attr]: #37
[#657 attribute]: #373
[#657 brace_left]: #150
[#657 break_statement]: #348
[#657 compound_statement]: #352
[#657 continue_statement]: #349
[#657 continuing_compound_statement/0.1/0]: #673
[#657 core_lhs_expression]: #374
[#657 decrement_statement]: #368
[#657 for_statement]: #344
[#657 func_call_statement]: #346
[#657 func_call_statement/0.0]: #360
[#657 func_call_statement/0.0/0]: #370
[#657 ident]: #378
[#657 if_clause]: #355
[#657 if_statement]: #341
[#657 increment_statement]: #367
[#657 lhs_expression]: #371
[#657 loop_statement]: #343
[#657 paren_left]: #379
[#657 return_statement]: #340
[#657 semicolon]: #339
[#657 star]: #375
[#657 statement]: #657
[#657 static_assert_statement]: #353
[#657 switch_statement]: #342
[#657 underscore]: #372
[#657 variable_decl]: #361
[#657 variable_statement]: #347
[#657 variable_updating_statement]: #351
[#657 while_statement]: #345
[#658 case_selectors/0.2]: #671
[#658 comma]: #672
[#660 case_selectors/0.1/0]: #670
[#660 case_selectors/0.1/0/0.0]: #660
[#660 comma]: #661
[#661 additive_expression]: #66
[#661 and]: #74
[#661 attr]: #37
[#661 attribute]: #92
[#661 bang]: #71
[#661 binary_and_expression]: #63
[#661 binary_or_expression]: #64
[#661 binary_xor_expression]: #65
[#661 bitwise_expression]: #61
[#661 bool_literal]: #90
[#661 case_selector]: #669
[#661 decimal_float_literal]: #95
[#661 decimal_int_literal]: #93
[#661 expression]: #639
[#661 float_literal]: #89
[#661 hex_float_literal]: #96
[#661 hex_int_literal]: #94
[#661 ident]: #81
[#661 int_literal]: #88
[#661 literal]: #83
[#661 minus]: #70
[#661 multiplicative_expression]: #68
[#661 paren_expression]: #84
[#661 paren_left]: #91
[#661 primary_expression]: #75
[#661 primary_expression/1.0]: #82
[#661 primary_expression/1.0/0]: #87
[#661 relational_expression]: #58
[#661 shift_expression]: #62
[#661 short_circuit_and_expression]: #60
[#661 short_circuit_or_expression]: #59
[#661 singular_expression]: #69
[#661 star]: #73
[#661 tilde]: #72
[#661 unary_expression]: #67
[#662 brace_left]: #150
[#662 compound_statement]: #668
[#674 brace_right]: #682
[#681 additive_expression]: #66
[#681 and]: #74
[#681 attr]: #37
[#681 attribute]: #92
[#681 bang]: #71
[#681 binary_and_expression]: #63
[#681 binary_or_expression]: #64
[#681 binary_xor_expression]: #65
[#681 bitwise_expression]: #61
[#681 bool_literal]: #90
[#681 decimal_float_literal]: #95
[#681 decimal_int_literal]: #93
[#681 expression]: #683
[#681 float_literal]: #89
[#681 hex_float_literal]: #96
[#681 hex_int_literal]: #94
[#681 ident]: #81
[#681 int_literal]: #88
[#681 literal]: #83
[#681 minus]: #70
[#681 multiplicative_expression]: #68
[#681 paren_expression]: #84
[#681 paren_left]: #91
[#681 primary_expression]: #75
[#681 primary_expression/1.0]: #82
[#681 primary_expression/1.0/0]: #87
[#681 relational_expression]: #58
[#681 shift_expression]: #62
[#681 short_circuit_and_expression]: #60
[#681 short_circuit_or_expression]: #59
[#681 singular_expression]: #69
[#681 star]: #73
[#681 tilde]: #72
[#681 unary_expression]: #67
[#683 semicolon]: #684
